// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module load_bias_from_axi (
        ap_start,
        ap_ready,
        dest_V_address0,
        dest_V_ce0,
        dest_V_we0,
        dest_V_d0,
        dest_V1_address0,
        dest_V1_ce0,
        dest_V1_we0,
        dest_V1_d0,
        dest_V2_address0,
        dest_V2_ce0,
        dest_V2_we0,
        dest_V2_d0,
        dest_V3_address0,
        dest_V3_ce0,
        dest_V3_we0,
        dest_V3_d0,
        dest_V4_address0,
        dest_V4_ce0,
        dest_V4_we0,
        dest_V4_d0,
        dest_V5_address0,
        dest_V5_ce0,
        dest_V5_we0,
        dest_V5_d0,
        dest_V6_address0,
        dest_V6_ce0,
        dest_V6_we0,
        dest_V6_d0,
        dest_V7_address0,
        dest_V7_ce0,
        dest_V7_we0,
        dest_V7_d0,
        dest_V8_address0,
        dest_V8_ce0,
        dest_V8_we0,
        dest_V8_d0,
        dest_V9_address0,
        dest_V9_ce0,
        dest_V9_we0,
        dest_V9_d0,
        dest_V10_address0,
        dest_V10_ce0,
        dest_V10_we0,
        dest_V10_d0,
        dest_V11_address0,
        dest_V11_ce0,
        dest_V11_we0,
        dest_V11_d0,
        dest_V12_address0,
        dest_V12_ce0,
        dest_V12_we0,
        dest_V12_d0,
        dest_V13_address0,
        dest_V13_ce0,
        dest_V13_we0,
        dest_V13_d0,
        dest_V14_address0,
        dest_V14_ce0,
        dest_V14_we0,
        dest_V14_d0,
        dest_V15_address0,
        dest_V15_ce0,
        dest_V15_we0,
        dest_V15_d0,
        dest_V16_address0,
        dest_V16_ce0,
        dest_V16_we0,
        dest_V16_d0,
        dest_V17_address0,
        dest_V17_ce0,
        dest_V17_we0,
        dest_V17_d0,
        dest_V18_address0,
        dest_V18_ce0,
        dest_V18_we0,
        dest_V18_d0,
        dest_V19_address0,
        dest_V19_ce0,
        dest_V19_we0,
        dest_V19_d0,
        dest_V20_address0,
        dest_V20_ce0,
        dest_V20_we0,
        dest_V20_d0,
        dest_V21_address0,
        dest_V21_ce0,
        dest_V21_we0,
        dest_V21_d0,
        dest_V22_address0,
        dest_V22_ce0,
        dest_V22_we0,
        dest_V22_d0,
        dest_V23_address0,
        dest_V23_ce0,
        dest_V23_we0,
        dest_V23_d0,
        dest_V24_address0,
        dest_V24_ce0,
        dest_V24_we0,
        dest_V24_d0,
        dest_V25_address0,
        dest_V25_ce0,
        dest_V25_we0,
        dest_V25_d0,
        dest_V26_address0,
        dest_V26_ce0,
        dest_V26_we0,
        dest_V26_d0,
        dest_V27_address0,
        dest_V27_ce0,
        dest_V27_we0,
        dest_V27_d0,
        dest_V28_address0,
        dest_V28_ce0,
        dest_V28_we0,
        dest_V28_d0,
        dest_V29_address0,
        dest_V29_ce0,
        dest_V29_we0,
        dest_V29_d0,
        dest_V30_address0,
        dest_V30_ce0,
        dest_V30_we0,
        dest_V30_d0,
        dest_V31_address0,
        dest_V31_ce0,
        dest_V31_we0,
        dest_V31_d0,
        dest_V_offset,
        src_V
);


input   ap_start;
output   ap_ready;
output  [1:0] dest_V_address0;
output   dest_V_ce0;
output   dest_V_we0;
output  [10:0] dest_V_d0;
output  [1:0] dest_V1_address0;
output   dest_V1_ce0;
output   dest_V1_we0;
output  [10:0] dest_V1_d0;
output  [1:0] dest_V2_address0;
output   dest_V2_ce0;
output   dest_V2_we0;
output  [10:0] dest_V2_d0;
output  [1:0] dest_V3_address0;
output   dest_V3_ce0;
output   dest_V3_we0;
output  [10:0] dest_V3_d0;
output  [1:0] dest_V4_address0;
output   dest_V4_ce0;
output   dest_V4_we0;
output  [10:0] dest_V4_d0;
output  [1:0] dest_V5_address0;
output   dest_V5_ce0;
output   dest_V5_we0;
output  [10:0] dest_V5_d0;
output  [1:0] dest_V6_address0;
output   dest_V6_ce0;
output   dest_V6_we0;
output  [10:0] dest_V6_d0;
output  [1:0] dest_V7_address0;
output   dest_V7_ce0;
output   dest_V7_we0;
output  [10:0] dest_V7_d0;
output  [1:0] dest_V8_address0;
output   dest_V8_ce0;
output   dest_V8_we0;
output  [10:0] dest_V8_d0;
output  [1:0] dest_V9_address0;
output   dest_V9_ce0;
output   dest_V9_we0;
output  [10:0] dest_V9_d0;
output  [1:0] dest_V10_address0;
output   dest_V10_ce0;
output   dest_V10_we0;
output  [10:0] dest_V10_d0;
output  [1:0] dest_V11_address0;
output   dest_V11_ce0;
output   dest_V11_we0;
output  [10:0] dest_V11_d0;
output  [1:0] dest_V12_address0;
output   dest_V12_ce0;
output   dest_V12_we0;
output  [10:0] dest_V12_d0;
output  [1:0] dest_V13_address0;
output   dest_V13_ce0;
output   dest_V13_we0;
output  [10:0] dest_V13_d0;
output  [1:0] dest_V14_address0;
output   dest_V14_ce0;
output   dest_V14_we0;
output  [10:0] dest_V14_d0;
output  [1:0] dest_V15_address0;
output   dest_V15_ce0;
output   dest_V15_we0;
output  [10:0] dest_V15_d0;
output  [1:0] dest_V16_address0;
output   dest_V16_ce0;
output   dest_V16_we0;
output  [10:0] dest_V16_d0;
output  [1:0] dest_V17_address0;
output   dest_V17_ce0;
output   dest_V17_we0;
output  [10:0] dest_V17_d0;
output  [1:0] dest_V18_address0;
output   dest_V18_ce0;
output   dest_V18_we0;
output  [10:0] dest_V18_d0;
output  [1:0] dest_V19_address0;
output   dest_V19_ce0;
output   dest_V19_we0;
output  [10:0] dest_V19_d0;
output  [1:0] dest_V20_address0;
output   dest_V20_ce0;
output   dest_V20_we0;
output  [10:0] dest_V20_d0;
output  [1:0] dest_V21_address0;
output   dest_V21_ce0;
output   dest_V21_we0;
output  [10:0] dest_V21_d0;
output  [1:0] dest_V22_address0;
output   dest_V22_ce0;
output   dest_V22_we0;
output  [10:0] dest_V22_d0;
output  [1:0] dest_V23_address0;
output   dest_V23_ce0;
output   dest_V23_we0;
output  [10:0] dest_V23_d0;
output  [1:0] dest_V24_address0;
output   dest_V24_ce0;
output   dest_V24_we0;
output  [10:0] dest_V24_d0;
output  [1:0] dest_V25_address0;
output   dest_V25_ce0;
output   dest_V25_we0;
output  [10:0] dest_V25_d0;
output  [1:0] dest_V26_address0;
output   dest_V26_ce0;
output   dest_V26_we0;
output  [10:0] dest_V26_d0;
output  [1:0] dest_V27_address0;
output   dest_V27_ce0;
output   dest_V27_we0;
output  [10:0] dest_V27_d0;
output  [1:0] dest_V28_address0;
output   dest_V28_ce0;
output   dest_V28_we0;
output  [10:0] dest_V28_d0;
output  [1:0] dest_V29_address0;
output   dest_V29_ce0;
output   dest_V29_we0;
output  [10:0] dest_V29_d0;
output  [1:0] dest_V30_address0;
output   dest_V30_ce0;
output   dest_V30_we0;
output  [10:0] dest_V30_d0;
output  [1:0] dest_V31_address0;
output   dest_V31_ce0;
output   dest_V31_we0;
output  [10:0] dest_V31_d0;
input  [3:0] dest_V_offset;
input  [511:0] src_V;

reg dest_V_ce0;
reg dest_V_we0;
reg dest_V1_ce0;
reg dest_V1_we0;
reg dest_V2_ce0;
reg dest_V2_we0;
reg dest_V3_ce0;
reg dest_V3_we0;
reg dest_V4_ce0;
reg dest_V4_we0;
reg dest_V5_ce0;
reg dest_V5_we0;
reg dest_V6_ce0;
reg dest_V6_we0;
reg dest_V7_ce0;
reg dest_V7_we0;
reg dest_V8_ce0;
reg dest_V8_we0;
reg dest_V9_ce0;
reg dest_V9_we0;
reg dest_V10_ce0;
reg dest_V10_we0;
reg dest_V11_ce0;
reg dest_V11_we0;
reg dest_V12_ce0;
reg dest_V12_we0;
reg dest_V13_ce0;
reg dest_V13_we0;
reg dest_V14_ce0;
reg dest_V14_we0;
reg dest_V15_ce0;
reg dest_V15_we0;
reg dest_V16_ce0;
reg dest_V16_we0;
reg dest_V17_ce0;
reg dest_V17_we0;
reg dest_V18_ce0;
reg dest_V18_we0;
reg dest_V19_ce0;
reg dest_V19_we0;
reg dest_V20_ce0;
reg dest_V20_we0;
reg dest_V21_ce0;
reg dest_V21_we0;
reg dest_V22_ce0;
reg dest_V22_we0;
reg dest_V23_ce0;
reg dest_V23_we0;
reg dest_V24_ce0;
reg dest_V24_we0;
reg dest_V25_ce0;
reg dest_V25_we0;
reg dest_V26_ce0;
reg dest_V26_we0;
reg dest_V27_ce0;
reg dest_V27_we0;
reg dest_V28_ce0;
reg dest_V28_we0;
reg dest_V29_ce0;
reg dest_V29_we0;
reg dest_V30_ce0;
reg dest_V30_we0;
reg dest_V31_ce0;
reg dest_V31_we0;

wire   [63:0] dest_V_offset_cast_fu_628_p1;

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V10_ce0 = 1'b1;
    end else begin
        dest_V10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V10_we0 = 1'b1;
    end else begin
        dest_V10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V11_ce0 = 1'b1;
    end else begin
        dest_V11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V11_we0 = 1'b1;
    end else begin
        dest_V11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V12_ce0 = 1'b1;
    end else begin
        dest_V12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V12_we0 = 1'b1;
    end else begin
        dest_V12_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V13_ce0 = 1'b1;
    end else begin
        dest_V13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V13_we0 = 1'b1;
    end else begin
        dest_V13_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V14_ce0 = 1'b1;
    end else begin
        dest_V14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V14_we0 = 1'b1;
    end else begin
        dest_V14_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V15_ce0 = 1'b1;
    end else begin
        dest_V15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V15_we0 = 1'b1;
    end else begin
        dest_V15_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V16_ce0 = 1'b1;
    end else begin
        dest_V16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V16_we0 = 1'b1;
    end else begin
        dest_V16_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V17_ce0 = 1'b1;
    end else begin
        dest_V17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V17_we0 = 1'b1;
    end else begin
        dest_V17_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V18_ce0 = 1'b1;
    end else begin
        dest_V18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V18_we0 = 1'b1;
    end else begin
        dest_V18_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V19_ce0 = 1'b1;
    end else begin
        dest_V19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V19_we0 = 1'b1;
    end else begin
        dest_V19_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V1_ce0 = 1'b1;
    end else begin
        dest_V1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V1_we0 = 1'b1;
    end else begin
        dest_V1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V20_ce0 = 1'b1;
    end else begin
        dest_V20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V20_we0 = 1'b1;
    end else begin
        dest_V20_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V21_ce0 = 1'b1;
    end else begin
        dest_V21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V21_we0 = 1'b1;
    end else begin
        dest_V21_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V22_ce0 = 1'b1;
    end else begin
        dest_V22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V22_we0 = 1'b1;
    end else begin
        dest_V22_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V23_ce0 = 1'b1;
    end else begin
        dest_V23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V23_we0 = 1'b1;
    end else begin
        dest_V23_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V24_ce0 = 1'b1;
    end else begin
        dest_V24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V24_we0 = 1'b1;
    end else begin
        dest_V24_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V25_ce0 = 1'b1;
    end else begin
        dest_V25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V25_we0 = 1'b1;
    end else begin
        dest_V25_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V26_ce0 = 1'b1;
    end else begin
        dest_V26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V26_we0 = 1'b1;
    end else begin
        dest_V26_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V27_ce0 = 1'b1;
    end else begin
        dest_V27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V27_we0 = 1'b1;
    end else begin
        dest_V27_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V28_ce0 = 1'b1;
    end else begin
        dest_V28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V28_we0 = 1'b1;
    end else begin
        dest_V28_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V29_ce0 = 1'b1;
    end else begin
        dest_V29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V29_we0 = 1'b1;
    end else begin
        dest_V29_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V2_ce0 = 1'b1;
    end else begin
        dest_V2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V2_we0 = 1'b1;
    end else begin
        dest_V2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V30_ce0 = 1'b1;
    end else begin
        dest_V30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V30_we0 = 1'b1;
    end else begin
        dest_V30_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V31_ce0 = 1'b1;
    end else begin
        dest_V31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V31_we0 = 1'b1;
    end else begin
        dest_V31_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V3_ce0 = 1'b1;
    end else begin
        dest_V3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V3_we0 = 1'b1;
    end else begin
        dest_V3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V4_ce0 = 1'b1;
    end else begin
        dest_V4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V4_we0 = 1'b1;
    end else begin
        dest_V4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V5_ce0 = 1'b1;
    end else begin
        dest_V5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V5_we0 = 1'b1;
    end else begin
        dest_V5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V6_ce0 = 1'b1;
    end else begin
        dest_V6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V6_we0 = 1'b1;
    end else begin
        dest_V6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V7_ce0 = 1'b1;
    end else begin
        dest_V7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V7_we0 = 1'b1;
    end else begin
        dest_V7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V8_ce0 = 1'b1;
    end else begin
        dest_V8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V8_we0 = 1'b1;
    end else begin
        dest_V8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V9_ce0 = 1'b1;
    end else begin
        dest_V9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V9_we0 = 1'b1;
    end else begin
        dest_V9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V_ce0 = 1'b1;
    end else begin
        dest_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b1)) begin
        dest_V_we0 = 1'b1;
    end else begin
        dest_V_we0 = 1'b0;
    end
end

assign ap_ready = ap_start;

assign dest_V10_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V10_d0 = {{src_V[170:160]}};

assign dest_V11_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V11_d0 = {{src_V[186:176]}};

assign dest_V12_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V12_d0 = {{src_V[202:192]}};

assign dest_V13_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V13_d0 = {{src_V[218:208]}};

assign dest_V14_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V14_d0 = {{src_V[234:224]}};

assign dest_V15_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V15_d0 = {{src_V[250:240]}};

assign dest_V16_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V16_d0 = {{src_V[266:256]}};

assign dest_V17_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V17_d0 = {{src_V[282:272]}};

assign dest_V18_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V18_d0 = {{src_V[298:288]}};

assign dest_V19_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V19_d0 = {{src_V[314:304]}};

assign dest_V1_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V1_d0 = {{src_V[26:16]}};

assign dest_V20_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V20_d0 = {{src_V[330:320]}};

assign dest_V21_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V21_d0 = {{src_V[346:336]}};

assign dest_V22_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V22_d0 = {{src_V[362:352]}};

assign dest_V23_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V23_d0 = {{src_V[378:368]}};

assign dest_V24_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V24_d0 = {{src_V[394:384]}};

assign dest_V25_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V25_d0 = {{src_V[410:400]}};

assign dest_V26_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V26_d0 = {{src_V[426:416]}};

assign dest_V27_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V27_d0 = {{src_V[442:432]}};

assign dest_V28_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V28_d0 = {{src_V[458:448]}};

assign dest_V29_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V29_d0 = {{src_V[474:464]}};

assign dest_V2_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V2_d0 = {{src_V[42:32]}};

assign dest_V30_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V30_d0 = {{src_V[490:480]}};

assign dest_V31_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V31_d0 = {{src_V[506:496]}};

assign dest_V3_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V3_d0 = {{src_V[58:48]}};

assign dest_V4_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V4_d0 = {{src_V[74:64]}};

assign dest_V5_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V5_d0 = {{src_V[90:80]}};

assign dest_V6_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V6_d0 = {{src_V[106:96]}};

assign dest_V7_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V7_d0 = {{src_V[122:112]}};

assign dest_V8_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V8_d0 = {{src_V[138:128]}};

assign dest_V9_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V9_d0 = {{src_V[154:144]}};

assign dest_V_address0 = dest_V_offset_cast_fu_628_p1;

assign dest_V_d0 = src_V[10:0];

assign dest_V_offset_cast_fu_628_p1 = dest_V_offset;

endmodule //load_bias_from_axi
