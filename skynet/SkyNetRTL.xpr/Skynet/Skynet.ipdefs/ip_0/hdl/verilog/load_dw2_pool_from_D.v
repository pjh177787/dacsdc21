// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module load_dw2_pool_from_D (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_ddr_dw2_pool_burst_V_AWVALID,
        m_axi_ddr_dw2_pool_burst_V_AWREADY,
        m_axi_ddr_dw2_pool_burst_V_AWADDR,
        m_axi_ddr_dw2_pool_burst_V_AWID,
        m_axi_ddr_dw2_pool_burst_V_AWLEN,
        m_axi_ddr_dw2_pool_burst_V_AWSIZE,
        m_axi_ddr_dw2_pool_burst_V_AWBURST,
        m_axi_ddr_dw2_pool_burst_V_AWLOCK,
        m_axi_ddr_dw2_pool_burst_V_AWCACHE,
        m_axi_ddr_dw2_pool_burst_V_AWPROT,
        m_axi_ddr_dw2_pool_burst_V_AWQOS,
        m_axi_ddr_dw2_pool_burst_V_AWREGION,
        m_axi_ddr_dw2_pool_burst_V_AWUSER,
        m_axi_ddr_dw2_pool_burst_V_WVALID,
        m_axi_ddr_dw2_pool_burst_V_WREADY,
        m_axi_ddr_dw2_pool_burst_V_WDATA,
        m_axi_ddr_dw2_pool_burst_V_WSTRB,
        m_axi_ddr_dw2_pool_burst_V_WLAST,
        m_axi_ddr_dw2_pool_burst_V_WID,
        m_axi_ddr_dw2_pool_burst_V_WUSER,
        m_axi_ddr_dw2_pool_burst_V_ARVALID,
        m_axi_ddr_dw2_pool_burst_V_ARREADY,
        m_axi_ddr_dw2_pool_burst_V_ARADDR,
        m_axi_ddr_dw2_pool_burst_V_ARID,
        m_axi_ddr_dw2_pool_burst_V_ARLEN,
        m_axi_ddr_dw2_pool_burst_V_ARSIZE,
        m_axi_ddr_dw2_pool_burst_V_ARBURST,
        m_axi_ddr_dw2_pool_burst_V_ARLOCK,
        m_axi_ddr_dw2_pool_burst_V_ARCACHE,
        m_axi_ddr_dw2_pool_burst_V_ARPROT,
        m_axi_ddr_dw2_pool_burst_V_ARQOS,
        m_axi_ddr_dw2_pool_burst_V_ARREGION,
        m_axi_ddr_dw2_pool_burst_V_ARUSER,
        m_axi_ddr_dw2_pool_burst_V_RVALID,
        m_axi_ddr_dw2_pool_burst_V_RREADY,
        m_axi_ddr_dw2_pool_burst_V_RDATA,
        m_axi_ddr_dw2_pool_burst_V_RLAST,
        m_axi_ddr_dw2_pool_burst_V_RID,
        m_axi_ddr_dw2_pool_burst_V_RUSER,
        m_axi_ddr_dw2_pool_burst_V_RRESP,
        m_axi_ddr_dw2_pool_burst_V_BVALID,
        m_axi_ddr_dw2_pool_burst_V_BREADY,
        m_axi_ddr_dw2_pool_burst_V_BRESP,
        m_axi_ddr_dw2_pool_burst_V_BID,
        m_axi_ddr_dw2_pool_burst_V_BUSER,
        ddr_dw2_pool_burst_V_offset,
        buf_0_V_address0,
        buf_0_V_ce0,
        buf_0_V_we0,
        buf_0_V_d0,
        buf_1_V_address0,
        buf_1_V_ce0,
        buf_1_V_we0,
        buf_1_V_d0,
        buf_2_V_address0,
        buf_2_V_ce0,
        buf_2_V_we0,
        buf_2_V_d0,
        buf_3_V_address0,
        buf_3_V_ce0,
        buf_3_V_we0,
        buf_3_V_d0,
        buf_4_V_address0,
        buf_4_V_ce0,
        buf_4_V_we0,
        buf_4_V_d0,
        buf_5_V_address0,
        buf_5_V_ce0,
        buf_5_V_we0,
        buf_5_V_d0,
        buf_6_V_address0,
        buf_6_V_ce0,
        buf_6_V_we0,
        buf_6_V_d0,
        buf_7_V_address0,
        buf_7_V_ce0,
        buf_7_V_we0,
        buf_7_V_d0,
        buf_8_V_address0,
        buf_8_V_ce0,
        buf_8_V_we0,
        buf_8_V_d0,
        buf_9_V_address0,
        buf_9_V_ce0,
        buf_9_V_we0,
        buf_9_V_d0,
        buf_10_V_address0,
        buf_10_V_ce0,
        buf_10_V_we0,
        buf_10_V_d0,
        buf_11_V_address0,
        buf_11_V_ce0,
        buf_11_V_we0,
        buf_11_V_d0,
        buf_12_V_address0,
        buf_12_V_ce0,
        buf_12_V_we0,
        buf_12_V_d0,
        buf_13_V_address0,
        buf_13_V_ce0,
        buf_13_V_we0,
        buf_13_V_d0,
        buf_14_V_address0,
        buf_14_V_ce0,
        buf_14_V_we0,
        buf_14_V_d0,
        buf_15_V_address0,
        buf_15_V_ce0,
        buf_15_V_we0,
        buf_15_V_d0,
        buf_16_V_address0,
        buf_16_V_ce0,
        buf_16_V_we0,
        buf_16_V_d0,
        buf_17_V_address0,
        buf_17_V_ce0,
        buf_17_V_we0,
        buf_17_V_d0,
        buf_18_V_address0,
        buf_18_V_ce0,
        buf_18_V_we0,
        buf_18_V_d0,
        buf_19_V_address0,
        buf_19_V_ce0,
        buf_19_V_we0,
        buf_19_V_d0,
        buf_20_V_address0,
        buf_20_V_ce0,
        buf_20_V_we0,
        buf_20_V_d0,
        buf_21_V_address0,
        buf_21_V_ce0,
        buf_21_V_we0,
        buf_21_V_d0,
        buf_22_V_address0,
        buf_22_V_ce0,
        buf_22_V_we0,
        buf_22_V_d0,
        buf_23_V_address0,
        buf_23_V_ce0,
        buf_23_V_we0,
        buf_23_V_d0,
        buf_24_V_address0,
        buf_24_V_ce0,
        buf_24_V_we0,
        buf_24_V_d0,
        buf_25_V_address0,
        buf_25_V_ce0,
        buf_25_V_we0,
        buf_25_V_d0,
        buf_26_V_address0,
        buf_26_V_ce0,
        buf_26_V_we0,
        buf_26_V_d0,
        buf_27_V_address0,
        buf_27_V_ce0,
        buf_27_V_we0,
        buf_27_V_d0,
        buf_28_V_address0,
        buf_28_V_ce0,
        buf_28_V_we0,
        buf_28_V_d0,
        buf_29_V_address0,
        buf_29_V_ce0,
        buf_29_V_we0,
        buf_29_V_d0,
        buf_30_V_address0,
        buf_30_V_ce0,
        buf_30_V_we0,
        buf_30_V_d0,
        buf_31_V_address0,
        buf_31_V_ce0,
        buf_31_V_we0,
        buf_31_V_d0,
        ch_offset,
        col,
        row,
        offset_h,
        offset_w
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state28 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_ddr_dw2_pool_burst_V_AWVALID;
input   m_axi_ddr_dw2_pool_burst_V_AWREADY;
output  [31:0] m_axi_ddr_dw2_pool_burst_V_AWADDR;
output  [0:0] m_axi_ddr_dw2_pool_burst_V_AWID;
output  [31:0] m_axi_ddr_dw2_pool_burst_V_AWLEN;
output  [2:0] m_axi_ddr_dw2_pool_burst_V_AWSIZE;
output  [1:0] m_axi_ddr_dw2_pool_burst_V_AWBURST;
output  [1:0] m_axi_ddr_dw2_pool_burst_V_AWLOCK;
output  [3:0] m_axi_ddr_dw2_pool_burst_V_AWCACHE;
output  [2:0] m_axi_ddr_dw2_pool_burst_V_AWPROT;
output  [3:0] m_axi_ddr_dw2_pool_burst_V_AWQOS;
output  [3:0] m_axi_ddr_dw2_pool_burst_V_AWREGION;
output  [0:0] m_axi_ddr_dw2_pool_burst_V_AWUSER;
output   m_axi_ddr_dw2_pool_burst_V_WVALID;
input   m_axi_ddr_dw2_pool_burst_V_WREADY;
output  [255:0] m_axi_ddr_dw2_pool_burst_V_WDATA;
output  [31:0] m_axi_ddr_dw2_pool_burst_V_WSTRB;
output   m_axi_ddr_dw2_pool_burst_V_WLAST;
output  [0:0] m_axi_ddr_dw2_pool_burst_V_WID;
output  [0:0] m_axi_ddr_dw2_pool_burst_V_WUSER;
output   m_axi_ddr_dw2_pool_burst_V_ARVALID;
input   m_axi_ddr_dw2_pool_burst_V_ARREADY;
output  [31:0] m_axi_ddr_dw2_pool_burst_V_ARADDR;
output  [0:0] m_axi_ddr_dw2_pool_burst_V_ARID;
output  [31:0] m_axi_ddr_dw2_pool_burst_V_ARLEN;
output  [2:0] m_axi_ddr_dw2_pool_burst_V_ARSIZE;
output  [1:0] m_axi_ddr_dw2_pool_burst_V_ARBURST;
output  [1:0] m_axi_ddr_dw2_pool_burst_V_ARLOCK;
output  [3:0] m_axi_ddr_dw2_pool_burst_V_ARCACHE;
output  [2:0] m_axi_ddr_dw2_pool_burst_V_ARPROT;
output  [3:0] m_axi_ddr_dw2_pool_burst_V_ARQOS;
output  [3:0] m_axi_ddr_dw2_pool_burst_V_ARREGION;
output  [0:0] m_axi_ddr_dw2_pool_burst_V_ARUSER;
input   m_axi_ddr_dw2_pool_burst_V_RVALID;
output   m_axi_ddr_dw2_pool_burst_V_RREADY;
input  [255:0] m_axi_ddr_dw2_pool_burst_V_RDATA;
input   m_axi_ddr_dw2_pool_burst_V_RLAST;
input  [0:0] m_axi_ddr_dw2_pool_burst_V_RID;
input  [0:0] m_axi_ddr_dw2_pool_burst_V_RUSER;
input  [1:0] m_axi_ddr_dw2_pool_burst_V_RRESP;
input   m_axi_ddr_dw2_pool_burst_V_BVALID;
output   m_axi_ddr_dw2_pool_burst_V_BREADY;
input  [1:0] m_axi_ddr_dw2_pool_burst_V_BRESP;
input  [0:0] m_axi_ddr_dw2_pool_burst_V_BID;
input  [0:0] m_axi_ddr_dw2_pool_burst_V_BUSER;
input  [26:0] ddr_dw2_pool_burst_V_offset;
output  [11:0] buf_0_V_address0;
output   buf_0_V_ce0;
output   buf_0_V_we0;
output  [8:0] buf_0_V_d0;
output  [11:0] buf_1_V_address0;
output   buf_1_V_ce0;
output   buf_1_V_we0;
output  [8:0] buf_1_V_d0;
output  [11:0] buf_2_V_address0;
output   buf_2_V_ce0;
output   buf_2_V_we0;
output  [8:0] buf_2_V_d0;
output  [11:0] buf_3_V_address0;
output   buf_3_V_ce0;
output   buf_3_V_we0;
output  [8:0] buf_3_V_d0;
output  [11:0] buf_4_V_address0;
output   buf_4_V_ce0;
output   buf_4_V_we0;
output  [8:0] buf_4_V_d0;
output  [11:0] buf_5_V_address0;
output   buf_5_V_ce0;
output   buf_5_V_we0;
output  [8:0] buf_5_V_d0;
output  [11:0] buf_6_V_address0;
output   buf_6_V_ce0;
output   buf_6_V_we0;
output  [8:0] buf_6_V_d0;
output  [11:0] buf_7_V_address0;
output   buf_7_V_ce0;
output   buf_7_V_we0;
output  [8:0] buf_7_V_d0;
output  [11:0] buf_8_V_address0;
output   buf_8_V_ce0;
output   buf_8_V_we0;
output  [8:0] buf_8_V_d0;
output  [11:0] buf_9_V_address0;
output   buf_9_V_ce0;
output   buf_9_V_we0;
output  [8:0] buf_9_V_d0;
output  [11:0] buf_10_V_address0;
output   buf_10_V_ce0;
output   buf_10_V_we0;
output  [8:0] buf_10_V_d0;
output  [11:0] buf_11_V_address0;
output   buf_11_V_ce0;
output   buf_11_V_we0;
output  [8:0] buf_11_V_d0;
output  [11:0] buf_12_V_address0;
output   buf_12_V_ce0;
output   buf_12_V_we0;
output  [8:0] buf_12_V_d0;
output  [11:0] buf_13_V_address0;
output   buf_13_V_ce0;
output   buf_13_V_we0;
output  [8:0] buf_13_V_d0;
output  [11:0] buf_14_V_address0;
output   buf_14_V_ce0;
output   buf_14_V_we0;
output  [8:0] buf_14_V_d0;
output  [11:0] buf_15_V_address0;
output   buf_15_V_ce0;
output   buf_15_V_we0;
output  [8:0] buf_15_V_d0;
output  [11:0] buf_16_V_address0;
output   buf_16_V_ce0;
output   buf_16_V_we0;
output  [8:0] buf_16_V_d0;
output  [11:0] buf_17_V_address0;
output   buf_17_V_ce0;
output   buf_17_V_we0;
output  [8:0] buf_17_V_d0;
output  [11:0] buf_18_V_address0;
output   buf_18_V_ce0;
output   buf_18_V_we0;
output  [8:0] buf_18_V_d0;
output  [11:0] buf_19_V_address0;
output   buf_19_V_ce0;
output   buf_19_V_we0;
output  [8:0] buf_19_V_d0;
output  [11:0] buf_20_V_address0;
output   buf_20_V_ce0;
output   buf_20_V_we0;
output  [8:0] buf_20_V_d0;
output  [11:0] buf_21_V_address0;
output   buf_21_V_ce0;
output   buf_21_V_we0;
output  [8:0] buf_21_V_d0;
output  [11:0] buf_22_V_address0;
output   buf_22_V_ce0;
output   buf_22_V_we0;
output  [8:0] buf_22_V_d0;
output  [11:0] buf_23_V_address0;
output   buf_23_V_ce0;
output   buf_23_V_we0;
output  [8:0] buf_23_V_d0;
output  [11:0] buf_24_V_address0;
output   buf_24_V_ce0;
output   buf_24_V_we0;
output  [8:0] buf_24_V_d0;
output  [11:0] buf_25_V_address0;
output   buf_25_V_ce0;
output   buf_25_V_we0;
output  [8:0] buf_25_V_d0;
output  [11:0] buf_26_V_address0;
output   buf_26_V_ce0;
output   buf_26_V_we0;
output  [8:0] buf_26_V_d0;
output  [11:0] buf_27_V_address0;
output   buf_27_V_ce0;
output   buf_27_V_we0;
output  [8:0] buf_27_V_d0;
output  [11:0] buf_28_V_address0;
output   buf_28_V_ce0;
output   buf_28_V_we0;
output  [8:0] buf_28_V_d0;
output  [11:0] buf_29_V_address0;
output   buf_29_V_ce0;
output   buf_29_V_we0;
output  [8:0] buf_29_V_d0;
output  [11:0] buf_30_V_address0;
output   buf_30_V_ce0;
output   buf_30_V_we0;
output  [8:0] buf_30_V_d0;
output  [11:0] buf_31_V_address0;
output   buf_31_V_ce0;
output   buf_31_V_we0;
output  [8:0] buf_31_V_d0;
input  [3:0] ch_offset;
input  [1:0] col;
input  [1:0] row;
input  [1:0] offset_h;
input  [1:0] offset_w;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_ddr_dw2_pool_burst_V_ARVALID;
reg m_axi_ddr_dw2_pool_burst_V_RREADY;
reg buf_0_V_ce0;
reg buf_0_V_we0;
reg buf_1_V_ce0;
reg buf_1_V_we0;
reg buf_2_V_ce0;
reg buf_2_V_we0;
reg buf_3_V_ce0;
reg buf_3_V_we0;
reg buf_4_V_ce0;
reg buf_4_V_we0;
reg buf_5_V_ce0;
reg buf_5_V_we0;
reg buf_6_V_ce0;
reg buf_6_V_we0;
reg buf_7_V_ce0;
reg buf_7_V_we0;
reg buf_8_V_ce0;
reg buf_8_V_we0;
reg buf_9_V_ce0;
reg buf_9_V_we0;
reg buf_10_V_ce0;
reg buf_10_V_we0;
reg buf_11_V_ce0;
reg buf_11_V_we0;
reg buf_12_V_ce0;
reg buf_12_V_we0;
reg buf_13_V_ce0;
reg buf_13_V_we0;
reg buf_14_V_ce0;
reg buf_14_V_we0;
reg buf_15_V_ce0;
reg buf_15_V_we0;
reg buf_16_V_ce0;
reg buf_16_V_we0;
reg buf_17_V_ce0;
reg buf_17_V_we0;
reg buf_18_V_ce0;
reg buf_18_V_we0;
reg buf_19_V_ce0;
reg buf_19_V_we0;
reg buf_20_V_ce0;
reg buf_20_V_we0;
reg buf_21_V_ce0;
reg buf_21_V_we0;
reg buf_22_V_ce0;
reg buf_22_V_we0;
reg buf_23_V_ce0;
reg buf_23_V_we0;
reg buf_24_V_ce0;
reg buf_24_V_we0;
reg buf_25_V_ce0;
reg buf_25_V_we0;
reg buf_26_V_ce0;
reg buf_26_V_we0;
reg buf_27_V_ce0;
reg buf_27_V_we0;
reg buf_28_V_ce0;
reg buf_28_V_we0;
reg buf_29_V_ce0;
reg buf_29_V_we0;
reg buf_30_V_ce0;
reg buf_30_V_we0;
reg buf_31_V_ce0;
reg buf_31_V_we0;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ddr_dw2_pool_burst_V_blk_n_AR;
reg    ap_enable_reg_pp0_iter16;
wire    ap_block_pp0_stage0;
reg   [0:0] empty_59_reg_1518;
reg    ddr_dw2_pool_burst_V_blk_n_R;
reg    ap_enable_reg_pp0_iter23;
reg   [0:0] icmp_ln519_reg_1483;
reg   [0:0] icmp_ln519_reg_1483_pp0_iter22_reg;
reg   [11:0] indvar_flatten_reg_748;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
wire    ap_block_state12_pp0_stage0_iter9;
wire    ap_block_state13_pp0_stage0_iter10;
wire    ap_block_state14_pp0_stage0_iter11;
wire    ap_block_state15_pp0_stage0_iter12;
wire    ap_block_state16_pp0_stage0_iter13;
wire    ap_block_state17_pp0_stage0_iter14;
wire    ap_block_state18_pp0_stage0_iter15;
wire    ap_block_state19_pp0_stage0_iter16;
reg    ap_block_state19_io;
wire    ap_block_state20_pp0_stage0_iter17;
wire    ap_block_state21_pp0_stage0_iter18;
wire    ap_block_state22_pp0_stage0_iter19;
wire    ap_block_state23_pp0_stage0_iter20;
wire    ap_block_state24_pp0_stage0_iter21;
wire    ap_block_state25_pp0_stage0_iter22;
reg    ap_block_state26_pp0_stage0_iter23;
wire    ap_block_state27_pp0_stage0_iter24;
reg    ap_block_pp0_stage0_11001;
reg   [12:0] ddr_dw2_pool_burst_p_reg_760;
reg   [5:0] h_0_reg_772;
reg   [6:0] w_0_reg_784;
wire   [15:0] mul_ln517_fu_800_p2;
reg   [15:0] mul_ln517_reg_1463;
wire   [15:0] grp_fu_1448_p3;
reg   [15:0] add_ln647_reg_1468;
wire    ap_CS_fsm_state2;
wire   [18:0] add_ln647_s_fu_834_p7;
reg   [18:0] add_ln647_s_reg_1473;
wire   [27:0] zext_ln519_fu_850_p1;
reg   [27:0] zext_ln519_reg_1478;
wire   [0:0] icmp_ln519_fu_854_p2;
reg   [0:0] icmp_ln519_reg_1483_pp0_iter1_reg;
reg   [0:0] icmp_ln519_reg_1483_pp0_iter2_reg;
reg   [0:0] icmp_ln519_reg_1483_pp0_iter3_reg;
reg   [0:0] icmp_ln519_reg_1483_pp0_iter4_reg;
reg   [0:0] icmp_ln519_reg_1483_pp0_iter5_reg;
reg   [0:0] icmp_ln519_reg_1483_pp0_iter6_reg;
reg   [0:0] icmp_ln519_reg_1483_pp0_iter7_reg;
reg   [0:0] icmp_ln519_reg_1483_pp0_iter8_reg;
reg   [0:0] icmp_ln519_reg_1483_pp0_iter9_reg;
reg   [0:0] icmp_ln519_reg_1483_pp0_iter10_reg;
reg   [0:0] icmp_ln519_reg_1483_pp0_iter11_reg;
reg   [0:0] icmp_ln519_reg_1483_pp0_iter12_reg;
reg   [0:0] icmp_ln519_reg_1483_pp0_iter13_reg;
reg   [0:0] icmp_ln519_reg_1483_pp0_iter14_reg;
reg   [0:0] icmp_ln519_reg_1483_pp0_iter15_reg;
reg   [0:0] icmp_ln519_reg_1483_pp0_iter16_reg;
reg   [0:0] icmp_ln519_reg_1483_pp0_iter17_reg;
reg   [0:0] icmp_ln519_reg_1483_pp0_iter18_reg;
reg   [0:0] icmp_ln519_reg_1483_pp0_iter19_reg;
reg   [0:0] icmp_ln519_reg_1483_pp0_iter20_reg;
reg   [0:0] icmp_ln519_reg_1483_pp0_iter21_reg;
reg   [0:0] icmp_ln519_reg_1483_pp0_iter23_reg;
wire   [11:0] add_ln519_2_fu_860_p2;
reg   [11:0] add_ln519_2_reg_1487;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln520_fu_878_p2;
reg   [0:0] icmp_ln520_reg_1492;
reg   [0:0] icmp_ln520_reg_1492_pp0_iter15_reg;
reg   [0:0] icmp_ln520_reg_1492_pp0_iter16_reg;
reg   [0:0] icmp_ln520_reg_1492_pp0_iter17_reg;
reg   [0:0] icmp_ln520_reg_1492_pp0_iter18_reg;
reg   [0:0] icmp_ln520_reg_1492_pp0_iter19_reg;
reg   [0:0] icmp_ln520_reg_1492_pp0_iter20_reg;
reg   [0:0] icmp_ln520_reg_1492_pp0_iter21_reg;
wire   [6:0] select_ln519_fu_884_p3;
reg   [6:0] select_ln519_reg_1497;
reg   [6:0] select_ln519_reg_1497_pp0_iter15_reg;
reg   [6:0] select_ln519_reg_1497_pp0_iter16_reg;
reg   [6:0] select_ln519_reg_1497_pp0_iter17_reg;
reg   [6:0] select_ln519_reg_1497_pp0_iter18_reg;
reg   [6:0] select_ln519_reg_1497_pp0_iter19_reg;
reg   [6:0] select_ln519_reg_1497_pp0_iter20_reg;
reg   [6:0] select_ln519_reg_1497_pp0_iter21_reg;
reg   [6:0] select_ln519_reg_1497_pp0_iter22_reg;
wire   [12:0] select_ln519_2_fu_892_p3;
reg   [12:0] select_ln519_2_reg_1502;
reg    ap_enable_reg_pp0_iter14;
wire   [6:0] w_fu_900_p2;
reg   [6:0] w_reg_1508;
wire   [27:0] add_ln647_3_fu_931_p2;
reg   [27:0] add_ln647_3_reg_1513;
wire   [0:0] empty_59_fu_936_p2;
wire   [5:0] select_ln519_1_fu_958_p3;
reg   [5:0] select_ln519_1_reg_1528;
reg    ap_enable_reg_pp0_iter22;
wire   [12:0] grp_fu_1455_p3;
reg   [12:0] add_ln203_reg_1534;
wire   [7:0] trunc_ln647_fu_971_p1;
reg   [7:0] trunc_ln647_reg_1539;
reg   [7:0] p_Result_i1_reg_1544;
reg   [7:0] p_Result_i4_reg_1549;
reg   [7:0] p_Result_i7_reg_1554;
reg   [7:0] p_Result_i2_reg_1559;
reg   [7:0] p_Result_i3_reg_1564;
reg   [7:0] p_Result_i5_reg_1569;
reg   [7:0] p_Result_i6_reg_1574;
reg   [7:0] p_Result_i8_reg_1579;
reg   [7:0] p_Result_i9_reg_1584;
reg   [7:0] p_Result_i_reg_1589;
reg   [7:0] p_Result_i10_reg_1594;
reg   [7:0] p_Result_i11_reg_1599;
reg   [7:0] p_Result_i12_reg_1604;
reg   [7:0] p_Result_i13_reg_1609;
reg   [7:0] p_Result_i14_reg_1614;
reg   [7:0] p_Result_i15_reg_1619;
reg   [7:0] p_Result_i16_reg_1624;
reg   [7:0] p_Result_i17_reg_1629;
reg   [7:0] p_Result_i18_reg_1634;
reg   [7:0] p_Result_i19_reg_1639;
reg   [7:0] p_Result_i20_reg_1644;
reg   [7:0] p_Result_i21_reg_1649;
reg   [7:0] p_Result_i22_reg_1654;
reg   [7:0] p_Result_i23_reg_1659;
reg   [7:0] p_Result_i24_reg_1664;
reg   [7:0] p_Result_i25_reg_1669;
reg   [7:0] p_Result_i26_reg_1674;
reg   [7:0] p_Result_i27_reg_1679;
reg   [7:0] p_Result_i28_reg_1684;
reg   [7:0] p_Result_i29_reg_1689;
reg   [7:0] p_Result_i30_reg_1694;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter24;
reg   [11:0] ap_phi_mux_indvar_flatten_phi_fu_752_p4;
reg   [12:0] ap_phi_mux_ddr_dw2_pool_burst_p_phi_fu_764_p4;
reg   [5:0] ap_phi_mux_h_0_phi_fu_776_p4;
reg   [6:0] ap_phi_mux_w_0_phi_fu_788_p4;
wire  signed [63:0] sext_ln203_fu_1285_p1;
wire   [63:0] zext_ln647_fu_942_p1;
wire   [3:0] mul_ln517_fu_800_p1;
wire   [0:0] trunc_ln517_fu_806_p1;
wire   [0:0] trunc_ln517_1_fu_810_p1;
wire   [5:0] add_ln_fu_814_p7;
wire   [7:0] grp_fu_866_p1;
wire   [12:0] add_ln529_fu_872_p2;
wire   [15:0] zext_ln519_1_fu_906_p1;
(* use_dsp48 = "no" *) wire   [15:0] add_ln519_fu_909_p2;
wire   [18:0] zext_ln519_2_fu_914_p1;
wire   [18:0] add_ln519_1_fu_918_p2;
wire  signed [19:0] sext_ln519_fu_923_p1;
wire   [27:0] zext_ln520_fu_927_p1;
wire   [11:0] grp_fu_866_p2;
wire   [5:0] h_fu_952_p2;
wire   [8:0] grp_fu_1448_p0;
wire   [5:0] grp_fu_1448_p1;
wire   [5:0] grp_fu_1455_p0;
wire   [7:0] grp_fu_1455_p1;
wire   [6:0] grp_fu_1455_p2;
reg    grp_fu_866_ce;
wire    ap_CS_fsm_state28;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [14:0] grp_fu_1448_p10;
wire   [12:0] grp_fu_1455_p00;
wire   [12:0] grp_fu_1455_p20;
wire   [15:0] mul_ln517_fu_800_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
end

SkyNet_urem_12ns_cud #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 12 ))
SkyNet_urem_12ns_cud_U1064(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_mux_indvar_flatten_phi_fu_752_p4),
    .din1(grp_fu_866_p1),
    .ce(grp_fu_866_ce),
    .dout(grp_fu_866_p2)
);

SkyNet_mac_muladdpcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
SkyNet_mac_muladdpcA_U1065(
    .din0(grp_fu_1448_p0),
    .din1(grp_fu_1448_p1),
    .din2(mul_ln517_reg_1463),
    .dout(grp_fu_1448_p3)
);

SkyNet_mac_muladdeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 7 ),
    .dout_WIDTH( 13 ))
SkyNet_mac_muladdeOg_U1066(
    .din0(grp_fu_1455_p0),
    .din1(grp_fu_1455_p1),
    .din2(grp_fu_1455_p2),
    .dout(grp_fu_1455_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter24 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln519_reg_1483_pp0_iter14_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        ddr_dw2_pool_burst_p_reg_760 <= select_ln519_2_reg_1502;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        ddr_dw2_pool_burst_p_reg_760 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln519_reg_1483_pp0_iter22_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter23 == 1'b1))) begin
        h_0_reg_772 <= select_ln519_1_reg_1528;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        h_0_reg_772 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln519_reg_1483 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_748 <= add_ln519_2_reg_1487;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        indvar_flatten_reg_748 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln519_reg_1483_pp0_iter14_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        w_0_reg_784 <= w_reg_1508;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        w_0_reg_784 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln519_reg_1483_pp0_iter22_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter23 == 1'b1))) begin
        add_ln203_reg_1534 <= grp_fu_1455_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln519_2_reg_1487 <= add_ln519_2_fu_860_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln519_reg_1483_pp0_iter14_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln647_3_reg_1513 <= add_ln647_3_fu_931_p2;
        empty_59_reg_1518 <= empty_59_fu_936_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln647_reg_1468 <= grp_fu_1448_p3;
        add_ln647_s_reg_1473[2 : 1] <= add_ln647_s_fu_834_p7[2 : 1];
add_ln647_s_reg_1473[7 : 4] <= add_ln647_s_fu_834_p7[7 : 4];
        zext_ln519_reg_1478[26 : 0] <= zext_ln519_fu_850_p1[26 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln519_reg_1483 <= icmp_ln519_fu_854_p2;
        icmp_ln519_reg_1483_pp0_iter1_reg <= icmp_ln519_reg_1483;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln519_reg_1483_pp0_iter10_reg <= icmp_ln519_reg_1483_pp0_iter9_reg;
        icmp_ln519_reg_1483_pp0_iter11_reg <= icmp_ln519_reg_1483_pp0_iter10_reg;
        icmp_ln519_reg_1483_pp0_iter12_reg <= icmp_ln519_reg_1483_pp0_iter11_reg;
        icmp_ln519_reg_1483_pp0_iter13_reg <= icmp_ln519_reg_1483_pp0_iter12_reg;
        icmp_ln519_reg_1483_pp0_iter14_reg <= icmp_ln519_reg_1483_pp0_iter13_reg;
        icmp_ln519_reg_1483_pp0_iter15_reg <= icmp_ln519_reg_1483_pp0_iter14_reg;
        icmp_ln519_reg_1483_pp0_iter16_reg <= icmp_ln519_reg_1483_pp0_iter15_reg;
        icmp_ln519_reg_1483_pp0_iter17_reg <= icmp_ln519_reg_1483_pp0_iter16_reg;
        icmp_ln519_reg_1483_pp0_iter18_reg <= icmp_ln519_reg_1483_pp0_iter17_reg;
        icmp_ln519_reg_1483_pp0_iter19_reg <= icmp_ln519_reg_1483_pp0_iter18_reg;
        icmp_ln519_reg_1483_pp0_iter20_reg <= icmp_ln519_reg_1483_pp0_iter19_reg;
        icmp_ln519_reg_1483_pp0_iter21_reg <= icmp_ln519_reg_1483_pp0_iter20_reg;
        icmp_ln519_reg_1483_pp0_iter22_reg <= icmp_ln519_reg_1483_pp0_iter21_reg;
        icmp_ln519_reg_1483_pp0_iter23_reg <= icmp_ln519_reg_1483_pp0_iter22_reg;
        icmp_ln519_reg_1483_pp0_iter2_reg <= icmp_ln519_reg_1483_pp0_iter1_reg;
        icmp_ln519_reg_1483_pp0_iter3_reg <= icmp_ln519_reg_1483_pp0_iter2_reg;
        icmp_ln519_reg_1483_pp0_iter4_reg <= icmp_ln519_reg_1483_pp0_iter3_reg;
        icmp_ln519_reg_1483_pp0_iter5_reg <= icmp_ln519_reg_1483_pp0_iter4_reg;
        icmp_ln519_reg_1483_pp0_iter6_reg <= icmp_ln519_reg_1483_pp0_iter5_reg;
        icmp_ln519_reg_1483_pp0_iter7_reg <= icmp_ln519_reg_1483_pp0_iter6_reg;
        icmp_ln519_reg_1483_pp0_iter8_reg <= icmp_ln519_reg_1483_pp0_iter7_reg;
        icmp_ln519_reg_1483_pp0_iter9_reg <= icmp_ln519_reg_1483_pp0_iter8_reg;
        icmp_ln520_reg_1492_pp0_iter15_reg <= icmp_ln520_reg_1492;
        icmp_ln520_reg_1492_pp0_iter16_reg <= icmp_ln520_reg_1492_pp0_iter15_reg;
        icmp_ln520_reg_1492_pp0_iter17_reg <= icmp_ln520_reg_1492_pp0_iter16_reg;
        icmp_ln520_reg_1492_pp0_iter18_reg <= icmp_ln520_reg_1492_pp0_iter17_reg;
        icmp_ln520_reg_1492_pp0_iter19_reg <= icmp_ln520_reg_1492_pp0_iter18_reg;
        icmp_ln520_reg_1492_pp0_iter20_reg <= icmp_ln520_reg_1492_pp0_iter19_reg;
        icmp_ln520_reg_1492_pp0_iter21_reg <= icmp_ln520_reg_1492_pp0_iter20_reg;
        select_ln519_reg_1497_pp0_iter15_reg <= select_ln519_reg_1497;
        select_ln519_reg_1497_pp0_iter16_reg <= select_ln519_reg_1497_pp0_iter15_reg;
        select_ln519_reg_1497_pp0_iter17_reg <= select_ln519_reg_1497_pp0_iter16_reg;
        select_ln519_reg_1497_pp0_iter18_reg <= select_ln519_reg_1497_pp0_iter17_reg;
        select_ln519_reg_1497_pp0_iter19_reg <= select_ln519_reg_1497_pp0_iter18_reg;
        select_ln519_reg_1497_pp0_iter20_reg <= select_ln519_reg_1497_pp0_iter19_reg;
        select_ln519_reg_1497_pp0_iter21_reg <= select_ln519_reg_1497_pp0_iter20_reg;
        select_ln519_reg_1497_pp0_iter22_reg <= select_ln519_reg_1497_pp0_iter21_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln519_reg_1483_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln520_reg_1492 <= icmp_ln520_fu_878_p2;
        select_ln519_reg_1497 <= select_ln519_fu_884_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        mul_ln517_reg_1463 <= mul_ln517_fu_800_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln519_reg_1483_pp0_iter22_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Result_i10_reg_1594 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[95:88]}};
        p_Result_i11_reg_1599 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[103:96]}};
        p_Result_i12_reg_1604 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[111:104]}};
        p_Result_i13_reg_1609 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[119:112]}};
        p_Result_i14_reg_1614 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[127:120]}};
        p_Result_i15_reg_1619 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[135:128]}};
        p_Result_i16_reg_1624 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[143:136]}};
        p_Result_i17_reg_1629 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[151:144]}};
        p_Result_i18_reg_1634 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[159:152]}};
        p_Result_i19_reg_1639 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[167:160]}};
        p_Result_i1_reg_1544 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[15:8]}};
        p_Result_i20_reg_1644 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[175:168]}};
        p_Result_i21_reg_1649 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[183:176]}};
        p_Result_i22_reg_1654 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[191:184]}};
        p_Result_i23_reg_1659 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[199:192]}};
        p_Result_i24_reg_1664 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[207:200]}};
        p_Result_i25_reg_1669 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[215:208]}};
        p_Result_i26_reg_1674 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[223:216]}};
        p_Result_i27_reg_1679 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[231:224]}};
        p_Result_i28_reg_1684 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[239:232]}};
        p_Result_i29_reg_1689 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[247:240]}};
        p_Result_i2_reg_1559 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[39:32]}};
        p_Result_i30_reg_1694 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[255:248]}};
        p_Result_i3_reg_1564 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[47:40]}};
        p_Result_i4_reg_1549 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[23:16]}};
        p_Result_i5_reg_1569 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[55:48]}};
        p_Result_i6_reg_1574 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[63:56]}};
        p_Result_i7_reg_1554 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[31:24]}};
        p_Result_i8_reg_1579 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[71:64]}};
        p_Result_i9_reg_1584 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[79:72]}};
        p_Result_i_reg_1589 <= {{m_axi_ddr_dw2_pool_burst_V_RDATA[87:80]}};
        trunc_ln647_reg_1539 <= trunc_ln647_fu_971_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln519_reg_1483_pp0_iter21_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter22 == 1'b1))) begin
        select_ln519_1_reg_1528 <= select_ln519_1_fu_958_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln519_reg_1483_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        select_ln519_2_reg_1502 <= select_ln519_2_fu_892_p3;
        w_reg_1508 <= w_fu_900_p2;
    end
end

always @ (*) begin
    if ((icmp_ln519_fu_854_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter14_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        ap_phi_mux_ddr_dw2_pool_burst_p_phi_fu_764_p4 = select_ln519_2_reg_1502;
    end else begin
        ap_phi_mux_ddr_dw2_pool_burst_p_phi_fu_764_p4 = ddr_dw2_pool_burst_p_reg_760;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter22_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter23 == 1'b1))) begin
        ap_phi_mux_h_0_phi_fu_776_p4 = select_ln519_1_reg_1528;
    end else begin
        ap_phi_mux_h_0_phi_fu_776_p4 = h_0_reg_772;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_752_p4 = add_ln519_2_reg_1487;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_752_p4 = indvar_flatten_reg_748;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter14_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        ap_phi_mux_w_0_phi_fu_788_p4 = w_reg_1508;
    end else begin
        ap_phi_mux_w_0_phi_fu_788_p4 = w_0_reg_784;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_0_V_ce0 = 1'b1;
    end else begin
        buf_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_0_V_we0 = 1'b1;
    end else begin
        buf_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_10_V_ce0 = 1'b1;
    end else begin
        buf_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_10_V_we0 = 1'b1;
    end else begin
        buf_10_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_11_V_ce0 = 1'b1;
    end else begin
        buf_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_11_V_we0 = 1'b1;
    end else begin
        buf_11_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_12_V_ce0 = 1'b1;
    end else begin
        buf_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_12_V_we0 = 1'b1;
    end else begin
        buf_12_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_13_V_ce0 = 1'b1;
    end else begin
        buf_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_13_V_we0 = 1'b1;
    end else begin
        buf_13_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_14_V_ce0 = 1'b1;
    end else begin
        buf_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_14_V_we0 = 1'b1;
    end else begin
        buf_14_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_15_V_ce0 = 1'b1;
    end else begin
        buf_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_15_V_we0 = 1'b1;
    end else begin
        buf_15_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_16_V_ce0 = 1'b1;
    end else begin
        buf_16_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_16_V_we0 = 1'b1;
    end else begin
        buf_16_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_17_V_ce0 = 1'b1;
    end else begin
        buf_17_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_17_V_we0 = 1'b1;
    end else begin
        buf_17_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_18_V_ce0 = 1'b1;
    end else begin
        buf_18_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_18_V_we0 = 1'b1;
    end else begin
        buf_18_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_19_V_ce0 = 1'b1;
    end else begin
        buf_19_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_19_V_we0 = 1'b1;
    end else begin
        buf_19_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_1_V_ce0 = 1'b1;
    end else begin
        buf_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_1_V_we0 = 1'b1;
    end else begin
        buf_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_20_V_ce0 = 1'b1;
    end else begin
        buf_20_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_20_V_we0 = 1'b1;
    end else begin
        buf_20_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_21_V_ce0 = 1'b1;
    end else begin
        buf_21_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_21_V_we0 = 1'b1;
    end else begin
        buf_21_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_22_V_ce0 = 1'b1;
    end else begin
        buf_22_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_22_V_we0 = 1'b1;
    end else begin
        buf_22_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_23_V_ce0 = 1'b1;
    end else begin
        buf_23_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_23_V_we0 = 1'b1;
    end else begin
        buf_23_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_24_V_ce0 = 1'b1;
    end else begin
        buf_24_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_24_V_we0 = 1'b1;
    end else begin
        buf_24_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_25_V_ce0 = 1'b1;
    end else begin
        buf_25_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_25_V_we0 = 1'b1;
    end else begin
        buf_25_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_26_V_ce0 = 1'b1;
    end else begin
        buf_26_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_26_V_we0 = 1'b1;
    end else begin
        buf_26_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_27_V_ce0 = 1'b1;
    end else begin
        buf_27_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_27_V_we0 = 1'b1;
    end else begin
        buf_27_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_28_V_ce0 = 1'b1;
    end else begin
        buf_28_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_28_V_we0 = 1'b1;
    end else begin
        buf_28_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_29_V_ce0 = 1'b1;
    end else begin
        buf_29_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_29_V_we0 = 1'b1;
    end else begin
        buf_29_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_2_V_ce0 = 1'b1;
    end else begin
        buf_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_2_V_we0 = 1'b1;
    end else begin
        buf_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_30_V_ce0 = 1'b1;
    end else begin
        buf_30_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_30_V_we0 = 1'b1;
    end else begin
        buf_30_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_31_V_ce0 = 1'b1;
    end else begin
        buf_31_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_31_V_we0 = 1'b1;
    end else begin
        buf_31_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_3_V_ce0 = 1'b1;
    end else begin
        buf_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_3_V_we0 = 1'b1;
    end else begin
        buf_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_4_V_ce0 = 1'b1;
    end else begin
        buf_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_4_V_we0 = 1'b1;
    end else begin
        buf_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_5_V_ce0 = 1'b1;
    end else begin
        buf_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_5_V_we0 = 1'b1;
    end else begin
        buf_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_6_V_ce0 = 1'b1;
    end else begin
        buf_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_6_V_we0 = 1'b1;
    end else begin
        buf_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_7_V_ce0 = 1'b1;
    end else begin
        buf_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_7_V_we0 = 1'b1;
    end else begin
        buf_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_8_V_ce0 = 1'b1;
    end else begin
        buf_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_8_V_we0 = 1'b1;
    end else begin
        buf_8_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_9_V_ce0 = 1'b1;
    end else begin
        buf_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter23_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter24 == 1'b1))) begin
        buf_9_V_we0 = 1'b1;
    end else begin
        buf_9_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((empty_59_reg_1518 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        ddr_dw2_pool_burst_V_blk_n_AR = m_axi_ddr_dw2_pool_burst_V_ARREADY;
    end else begin
        ddr_dw2_pool_burst_V_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter22_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter23 == 1'b1))) begin
        ddr_dw2_pool_burst_V_blk_n_R = m_axi_ddr_dw2_pool_burst_V_RVALID;
    end else begin
        ddr_dw2_pool_burst_V_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_866_ce = 1'b1;
    end else begin
        grp_fu_866_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_59_reg_1518 == 1'd1) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        m_axi_ddr_dw2_pool_burst_V_ARVALID = 1'b1;
    end else begin
        m_axi_ddr_dw2_pool_burst_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln519_reg_1483_pp0_iter22_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter23 == 1'b1))) begin
        m_axi_ddr_dw2_pool_burst_V_RREADY = 1'b1;
    end else begin
        m_axi_ddr_dw2_pool_burst_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln519_fu_854_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln519_fu_854_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln519_1_fu_918_p2 = (zext_ln519_2_fu_914_p1 + add_ln647_s_reg_1473);

assign add_ln519_2_fu_860_p2 = (ap_phi_mux_indvar_flatten_phi_fu_752_p4 + 12'd1);

assign add_ln519_fu_909_p2 = (zext_ln519_1_fu_906_p1 + add_ln647_reg_1468);

assign add_ln529_fu_872_p2 = (ap_phi_mux_ddr_dw2_pool_burst_p_phi_fu_764_p4 + 13'd164);

assign add_ln647_3_fu_931_p2 = (zext_ln519_reg_1478 + zext_ln520_fu_927_p1);

assign add_ln647_s_fu_834_p7 = {{{{{{{{{{11'd1024}, {row}}}, {row}}}, {1'd0}}}, {offset_w}}}, {1'd0}};

assign add_ln_fu_814_p7 = {{{{{{trunc_ln517_fu_806_p1}, {1'd0}}, {trunc_ln517_fu_806_p1}}, {1'd0}}, {trunc_ln517_1_fu_810_p1}}, {1'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln519_reg_1483_pp0_iter22_reg == 1'd0) & (m_axi_ddr_dw2_pool_burst_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b1)) | ((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_block_state19_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln519_reg_1483_pp0_iter22_reg == 1'd0) & (m_axi_ddr_dw2_pool_burst_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b1)) | ((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_block_state19_io)));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_io = ((empty_59_reg_1518 == 1'd1) & (m_axi_ddr_dw2_pool_burst_V_ARREADY == 1'b0));
end

assign ap_block_state19_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state26_pp0_stage0_iter23 = ((icmp_ln519_reg_1483_pp0_iter22_reg == 1'd0) & (m_axi_ddr_dw2_pool_burst_V_RVALID == 1'b0));
end

assign ap_block_state27_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign buf_0_V_address0 = sext_ln203_fu_1285_p1;

assign buf_0_V_d0 = trunc_ln647_reg_1539;

assign buf_10_V_address0 = sext_ln203_fu_1285_p1;

assign buf_10_V_d0 = p_Result_i_reg_1589;

assign buf_11_V_address0 = sext_ln203_fu_1285_p1;

assign buf_11_V_d0 = p_Result_i10_reg_1594;

assign buf_12_V_address0 = sext_ln203_fu_1285_p1;

assign buf_12_V_d0 = p_Result_i11_reg_1599;

assign buf_13_V_address0 = sext_ln203_fu_1285_p1;

assign buf_13_V_d0 = p_Result_i12_reg_1604;

assign buf_14_V_address0 = sext_ln203_fu_1285_p1;

assign buf_14_V_d0 = p_Result_i13_reg_1609;

assign buf_15_V_address0 = sext_ln203_fu_1285_p1;

assign buf_15_V_d0 = p_Result_i14_reg_1614;

assign buf_16_V_address0 = sext_ln203_fu_1285_p1;

assign buf_16_V_d0 = p_Result_i15_reg_1619;

assign buf_17_V_address0 = sext_ln203_fu_1285_p1;

assign buf_17_V_d0 = p_Result_i16_reg_1624;

assign buf_18_V_address0 = sext_ln203_fu_1285_p1;

assign buf_18_V_d0 = p_Result_i17_reg_1629;

assign buf_19_V_address0 = sext_ln203_fu_1285_p1;

assign buf_19_V_d0 = p_Result_i18_reg_1634;

assign buf_1_V_address0 = sext_ln203_fu_1285_p1;

assign buf_1_V_d0 = p_Result_i1_reg_1544;

assign buf_20_V_address0 = sext_ln203_fu_1285_p1;

assign buf_20_V_d0 = p_Result_i19_reg_1639;

assign buf_21_V_address0 = sext_ln203_fu_1285_p1;

assign buf_21_V_d0 = p_Result_i20_reg_1644;

assign buf_22_V_address0 = sext_ln203_fu_1285_p1;

assign buf_22_V_d0 = p_Result_i21_reg_1649;

assign buf_23_V_address0 = sext_ln203_fu_1285_p1;

assign buf_23_V_d0 = p_Result_i22_reg_1654;

assign buf_24_V_address0 = sext_ln203_fu_1285_p1;

assign buf_24_V_d0 = p_Result_i23_reg_1659;

assign buf_25_V_address0 = sext_ln203_fu_1285_p1;

assign buf_25_V_d0 = p_Result_i24_reg_1664;

assign buf_26_V_address0 = sext_ln203_fu_1285_p1;

assign buf_26_V_d0 = p_Result_i25_reg_1669;

assign buf_27_V_address0 = sext_ln203_fu_1285_p1;

assign buf_27_V_d0 = p_Result_i26_reg_1674;

assign buf_28_V_address0 = sext_ln203_fu_1285_p1;

assign buf_28_V_d0 = p_Result_i27_reg_1679;

assign buf_29_V_address0 = sext_ln203_fu_1285_p1;

assign buf_29_V_d0 = p_Result_i28_reg_1684;

assign buf_2_V_address0 = sext_ln203_fu_1285_p1;

assign buf_2_V_d0 = p_Result_i4_reg_1549;

assign buf_30_V_address0 = sext_ln203_fu_1285_p1;

assign buf_30_V_d0 = p_Result_i29_reg_1689;

assign buf_31_V_address0 = sext_ln203_fu_1285_p1;

assign buf_31_V_d0 = p_Result_i30_reg_1694;

assign buf_3_V_address0 = sext_ln203_fu_1285_p1;

assign buf_3_V_d0 = p_Result_i7_reg_1554;

assign buf_4_V_address0 = sext_ln203_fu_1285_p1;

assign buf_4_V_d0 = p_Result_i2_reg_1559;

assign buf_5_V_address0 = sext_ln203_fu_1285_p1;

assign buf_5_V_d0 = p_Result_i3_reg_1564;

assign buf_6_V_address0 = sext_ln203_fu_1285_p1;

assign buf_6_V_d0 = p_Result_i5_reg_1569;

assign buf_7_V_address0 = sext_ln203_fu_1285_p1;

assign buf_7_V_d0 = p_Result_i6_reg_1574;

assign buf_8_V_address0 = sext_ln203_fu_1285_p1;

assign buf_8_V_d0 = p_Result_i8_reg_1579;

assign buf_9_V_address0 = sext_ln203_fu_1285_p1;

assign buf_9_V_d0 = p_Result_i9_reg_1584;

assign empty_59_fu_936_p2 = ((grp_fu_866_p2 == 12'd0) ? 1'b1 : 1'b0);

assign grp_fu_1448_p0 = 15'd164;

assign grp_fu_1448_p1 = grp_fu_1448_p10;

assign grp_fu_1448_p10 = add_ln_fu_814_p7;

assign grp_fu_1455_p0 = grp_fu_1455_p00;

assign grp_fu_1455_p00 = select_ln519_1_reg_1528;

assign grp_fu_1455_p1 = 13'd84;

assign grp_fu_1455_p2 = grp_fu_1455_p20;

assign grp_fu_1455_p20 = select_ln519_reg_1497_pp0_iter22_reg;

assign grp_fu_866_p1 = 12'd82;

assign h_fu_952_p2 = (ap_phi_mux_h_0_phi_fu_776_p4 + 6'd1);

assign icmp_ln519_fu_854_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_752_p4 == 12'd3444) ? 1'b1 : 1'b0);

assign icmp_ln520_fu_878_p2 = ((ap_phi_mux_w_0_phi_fu_788_p4 == 7'd82) ? 1'b1 : 1'b0);

assign m_axi_ddr_dw2_pool_burst_V_ARADDR = zext_ln647_fu_942_p1;

assign m_axi_ddr_dw2_pool_burst_V_ARBURST = 2'd0;

assign m_axi_ddr_dw2_pool_burst_V_ARCACHE = 4'd0;

assign m_axi_ddr_dw2_pool_burst_V_ARID = 1'd0;

assign m_axi_ddr_dw2_pool_burst_V_ARLEN = 32'd82;

assign m_axi_ddr_dw2_pool_burst_V_ARLOCK = 2'd0;

assign m_axi_ddr_dw2_pool_burst_V_ARPROT = 3'd0;

assign m_axi_ddr_dw2_pool_burst_V_ARQOS = 4'd0;

assign m_axi_ddr_dw2_pool_burst_V_ARREGION = 4'd0;

assign m_axi_ddr_dw2_pool_burst_V_ARSIZE = 3'd0;

assign m_axi_ddr_dw2_pool_burst_V_ARUSER = 1'd0;

assign m_axi_ddr_dw2_pool_burst_V_AWADDR = 32'd0;

assign m_axi_ddr_dw2_pool_burst_V_AWBURST = 2'd0;

assign m_axi_ddr_dw2_pool_burst_V_AWCACHE = 4'd0;

assign m_axi_ddr_dw2_pool_burst_V_AWID = 1'd0;

assign m_axi_ddr_dw2_pool_burst_V_AWLEN = 32'd0;

assign m_axi_ddr_dw2_pool_burst_V_AWLOCK = 2'd0;

assign m_axi_ddr_dw2_pool_burst_V_AWPROT = 3'd0;

assign m_axi_ddr_dw2_pool_burst_V_AWQOS = 4'd0;

assign m_axi_ddr_dw2_pool_burst_V_AWREGION = 4'd0;

assign m_axi_ddr_dw2_pool_burst_V_AWSIZE = 3'd0;

assign m_axi_ddr_dw2_pool_burst_V_AWUSER = 1'd0;

assign m_axi_ddr_dw2_pool_burst_V_AWVALID = 1'b0;

assign m_axi_ddr_dw2_pool_burst_V_BREADY = 1'b0;

assign m_axi_ddr_dw2_pool_burst_V_WDATA = 256'd0;

assign m_axi_ddr_dw2_pool_burst_V_WID = 1'd0;

assign m_axi_ddr_dw2_pool_burst_V_WLAST = 1'b0;

assign m_axi_ddr_dw2_pool_burst_V_WSTRB = 32'd0;

assign m_axi_ddr_dw2_pool_burst_V_WUSER = 1'd0;

assign m_axi_ddr_dw2_pool_burst_V_WVALID = 1'b0;

assign mul_ln517_fu_800_p1 = mul_ln517_fu_800_p10;

assign mul_ln517_fu_800_p10 = ch_offset;

assign mul_ln517_fu_800_p2 = (16'd13776 * mul_ln517_fu_800_p1);

assign select_ln519_1_fu_958_p3 = ((icmp_ln520_reg_1492_pp0_iter21_reg[0:0] === 1'b1) ? h_fu_952_p2 : ap_phi_mux_h_0_phi_fu_776_p4);

assign select_ln519_2_fu_892_p3 = ((icmp_ln520_fu_878_p2[0:0] === 1'b1) ? add_ln529_fu_872_p2 : ap_phi_mux_ddr_dw2_pool_burst_p_phi_fu_764_p4);

assign select_ln519_fu_884_p3 = ((icmp_ln520_fu_878_p2[0:0] === 1'b1) ? 7'd0 : ap_phi_mux_w_0_phi_fu_788_p4);

assign sext_ln203_fu_1285_p1 = $signed(add_ln203_reg_1534);

assign sext_ln519_fu_923_p1 = $signed(add_ln519_1_fu_918_p2);

assign trunc_ln517_1_fu_810_p1 = offset_h[0:0];

assign trunc_ln517_fu_806_p1 = col[0:0];

assign trunc_ln647_fu_971_p1 = m_axi_ddr_dw2_pool_burst_V_RDATA[7:0];

assign w_fu_900_p2 = (7'd1 + select_ln519_fu_884_p3);

assign zext_ln519_1_fu_906_p1 = select_ln519_2_reg_1502;

assign zext_ln519_2_fu_914_p1 = add_ln519_fu_909_p2;

assign zext_ln519_fu_850_p1 = ddr_dw2_pool_burst_V_offset;

assign zext_ln520_fu_927_p1 = $unsigned(sext_ln519_fu_923_p1);

assign zext_ln647_fu_942_p1 = add_ln647_3_reg_1513;

always @ (posedge ap_clk) begin
    add_ln647_s_reg_1473[0] <= 1'b0;
    add_ln647_s_reg_1473[3:3] <= 1'b0;
    add_ln647_s_reg_1473[18:8] <= 11'b10000000000;
    zext_ln519_reg_1478[27] <= 1'b0;
end

endmodule //load_dw2_pool_from_D
