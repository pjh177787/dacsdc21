// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module relu_copy_buf_to_DDR (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_dest_V_AWVALID,
        m_axi_dest_V_AWREADY,
        m_axi_dest_V_AWADDR,
        m_axi_dest_V_AWID,
        m_axi_dest_V_AWLEN,
        m_axi_dest_V_AWSIZE,
        m_axi_dest_V_AWBURST,
        m_axi_dest_V_AWLOCK,
        m_axi_dest_V_AWCACHE,
        m_axi_dest_V_AWPROT,
        m_axi_dest_V_AWQOS,
        m_axi_dest_V_AWREGION,
        m_axi_dest_V_AWUSER,
        m_axi_dest_V_WVALID,
        m_axi_dest_V_WREADY,
        m_axi_dest_V_WDATA,
        m_axi_dest_V_WSTRB,
        m_axi_dest_V_WLAST,
        m_axi_dest_V_WID,
        m_axi_dest_V_WUSER,
        m_axi_dest_V_ARVALID,
        m_axi_dest_V_ARREADY,
        m_axi_dest_V_ARADDR,
        m_axi_dest_V_ARID,
        m_axi_dest_V_ARLEN,
        m_axi_dest_V_ARSIZE,
        m_axi_dest_V_ARBURST,
        m_axi_dest_V_ARLOCK,
        m_axi_dest_V_ARCACHE,
        m_axi_dest_V_ARPROT,
        m_axi_dest_V_ARQOS,
        m_axi_dest_V_ARREGION,
        m_axi_dest_V_ARUSER,
        m_axi_dest_V_RVALID,
        m_axi_dest_V_RREADY,
        m_axi_dest_V_RDATA,
        m_axi_dest_V_RLAST,
        m_axi_dest_V_RID,
        m_axi_dest_V_RUSER,
        m_axi_dest_V_RRESP,
        m_axi_dest_V_BVALID,
        m_axi_dest_V_BREADY,
        m_axi_dest_V_BRESP,
        m_axi_dest_V_BID,
        m_axi_dest_V_BUSER,
        dest_V_offset,
        buf_id,
        FM_buf2_V_0_address0,
        FM_buf2_V_0_ce0,
        FM_buf2_V_0_q0,
        FM_buf2_V_1_address0,
        FM_buf2_V_1_ce0,
        FM_buf2_V_1_q0,
        FM_buf2_V_2_address0,
        FM_buf2_V_2_ce0,
        FM_buf2_V_2_q0,
        FM_buf2_V_3_address0,
        FM_buf2_V_3_ce0,
        FM_buf2_V_3_q0,
        FM_buf2_V_4_address0,
        FM_buf2_V_4_ce0,
        FM_buf2_V_4_q0,
        FM_buf2_V_5_address0,
        FM_buf2_V_5_ce0,
        FM_buf2_V_5_q0,
        FM_buf2_V_6_address0,
        FM_buf2_V_6_ce0,
        FM_buf2_V_6_q0,
        FM_buf2_V_7_address0,
        FM_buf2_V_7_ce0,
        FM_buf2_V_7_q0,
        FM_buf2_V_8_address0,
        FM_buf2_V_8_ce0,
        FM_buf2_V_8_q0,
        FM_buf2_V_9_address0,
        FM_buf2_V_9_ce0,
        FM_buf2_V_9_q0,
        FM_buf2_V_10_address0,
        FM_buf2_V_10_ce0,
        FM_buf2_V_10_q0,
        FM_buf2_V_11_address0,
        FM_buf2_V_11_ce0,
        FM_buf2_V_11_q0,
        FM_buf2_V_12_address0,
        FM_buf2_V_12_ce0,
        FM_buf2_V_12_q0,
        FM_buf2_V_13_address0,
        FM_buf2_V_13_ce0,
        FM_buf2_V_13_q0,
        FM_buf2_V_14_address0,
        FM_buf2_V_14_ce0,
        FM_buf2_V_14_q0,
        FM_buf2_V_15_address0,
        FM_buf2_V_15_ce0,
        FM_buf2_V_15_q0,
        FM_buf2_V_16_address0,
        FM_buf2_V_16_ce0,
        FM_buf2_V_16_q0,
        FM_buf2_V_17_address0,
        FM_buf2_V_17_ce0,
        FM_buf2_V_17_q0,
        FM_buf2_V_18_address0,
        FM_buf2_V_18_ce0,
        FM_buf2_V_18_q0,
        FM_buf2_V_19_address0,
        FM_buf2_V_19_ce0,
        FM_buf2_V_19_q0,
        FM_buf2_V_20_address0,
        FM_buf2_V_20_ce0,
        FM_buf2_V_20_q0,
        FM_buf2_V_21_address0,
        FM_buf2_V_21_ce0,
        FM_buf2_V_21_q0,
        FM_buf2_V_22_address0,
        FM_buf2_V_22_ce0,
        FM_buf2_V_22_q0,
        FM_buf2_V_23_address0,
        FM_buf2_V_23_ce0,
        FM_buf2_V_23_q0,
        FM_buf2_V_24_address0,
        FM_buf2_V_24_ce0,
        FM_buf2_V_24_q0,
        FM_buf2_V_25_address0,
        FM_buf2_V_25_ce0,
        FM_buf2_V_25_q0,
        FM_buf2_V_26_address0,
        FM_buf2_V_26_ce0,
        FM_buf2_V_26_q0,
        FM_buf2_V_27_address0,
        FM_buf2_V_27_ce0,
        FM_buf2_V_27_q0,
        FM_buf2_V_28_address0,
        FM_buf2_V_28_ce0,
        FM_buf2_V_28_q0,
        FM_buf2_V_29_address0,
        FM_buf2_V_29_ce0,
        FM_buf2_V_29_q0,
        FM_buf2_V_30_address0,
        FM_buf2_V_30_ce0,
        FM_buf2_V_30_q0,
        FM_buf2_V_31_address0,
        FM_buf2_V_31_ce0,
        FM_buf2_V_31_q0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state25 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_dest_V_AWVALID;
input   m_axi_dest_V_AWREADY;
output  [31:0] m_axi_dest_V_AWADDR;
output  [0:0] m_axi_dest_V_AWID;
output  [31:0] m_axi_dest_V_AWLEN;
output  [2:0] m_axi_dest_V_AWSIZE;
output  [1:0] m_axi_dest_V_AWBURST;
output  [1:0] m_axi_dest_V_AWLOCK;
output  [3:0] m_axi_dest_V_AWCACHE;
output  [2:0] m_axi_dest_V_AWPROT;
output  [3:0] m_axi_dest_V_AWQOS;
output  [3:0] m_axi_dest_V_AWREGION;
output  [0:0] m_axi_dest_V_AWUSER;
output   m_axi_dest_V_WVALID;
input   m_axi_dest_V_WREADY;
output  [255:0] m_axi_dest_V_WDATA;
output  [31:0] m_axi_dest_V_WSTRB;
output   m_axi_dest_V_WLAST;
output  [0:0] m_axi_dest_V_WID;
output  [0:0] m_axi_dest_V_WUSER;
output   m_axi_dest_V_ARVALID;
input   m_axi_dest_V_ARREADY;
output  [31:0] m_axi_dest_V_ARADDR;
output  [0:0] m_axi_dest_V_ARID;
output  [31:0] m_axi_dest_V_ARLEN;
output  [2:0] m_axi_dest_V_ARSIZE;
output  [1:0] m_axi_dest_V_ARBURST;
output  [1:0] m_axi_dest_V_ARLOCK;
output  [3:0] m_axi_dest_V_ARCACHE;
output  [2:0] m_axi_dest_V_ARPROT;
output  [3:0] m_axi_dest_V_ARQOS;
output  [3:0] m_axi_dest_V_ARREGION;
output  [0:0] m_axi_dest_V_ARUSER;
input   m_axi_dest_V_RVALID;
output   m_axi_dest_V_RREADY;
input  [255:0] m_axi_dest_V_RDATA;
input   m_axi_dest_V_RLAST;
input  [0:0] m_axi_dest_V_RID;
input  [0:0] m_axi_dest_V_RUSER;
input  [1:0] m_axi_dest_V_RRESP;
input   m_axi_dest_V_BVALID;
output   m_axi_dest_V_BREADY;
input  [1:0] m_axi_dest_V_BRESP;
input  [0:0] m_axi_dest_V_BID;
input  [0:0] m_axi_dest_V_BUSER;
input  [26:0] dest_V_offset;
input  [6:0] buf_id;
output  [11:0] FM_buf2_V_0_address0;
output   FM_buf2_V_0_ce0;
input  [8:0] FM_buf2_V_0_q0;
output  [11:0] FM_buf2_V_1_address0;
output   FM_buf2_V_1_ce0;
input  [8:0] FM_buf2_V_1_q0;
output  [11:0] FM_buf2_V_2_address0;
output   FM_buf2_V_2_ce0;
input  [8:0] FM_buf2_V_2_q0;
output  [11:0] FM_buf2_V_3_address0;
output   FM_buf2_V_3_ce0;
input  [8:0] FM_buf2_V_3_q0;
output  [11:0] FM_buf2_V_4_address0;
output   FM_buf2_V_4_ce0;
input  [8:0] FM_buf2_V_4_q0;
output  [11:0] FM_buf2_V_5_address0;
output   FM_buf2_V_5_ce0;
input  [8:0] FM_buf2_V_5_q0;
output  [11:0] FM_buf2_V_6_address0;
output   FM_buf2_V_6_ce0;
input  [8:0] FM_buf2_V_6_q0;
output  [11:0] FM_buf2_V_7_address0;
output   FM_buf2_V_7_ce0;
input  [8:0] FM_buf2_V_7_q0;
output  [11:0] FM_buf2_V_8_address0;
output   FM_buf2_V_8_ce0;
input  [8:0] FM_buf2_V_8_q0;
output  [11:0] FM_buf2_V_9_address0;
output   FM_buf2_V_9_ce0;
input  [8:0] FM_buf2_V_9_q0;
output  [11:0] FM_buf2_V_10_address0;
output   FM_buf2_V_10_ce0;
input  [8:0] FM_buf2_V_10_q0;
output  [11:0] FM_buf2_V_11_address0;
output   FM_buf2_V_11_ce0;
input  [8:0] FM_buf2_V_11_q0;
output  [11:0] FM_buf2_V_12_address0;
output   FM_buf2_V_12_ce0;
input  [8:0] FM_buf2_V_12_q0;
output  [11:0] FM_buf2_V_13_address0;
output   FM_buf2_V_13_ce0;
input  [8:0] FM_buf2_V_13_q0;
output  [11:0] FM_buf2_V_14_address0;
output   FM_buf2_V_14_ce0;
input  [8:0] FM_buf2_V_14_q0;
output  [11:0] FM_buf2_V_15_address0;
output   FM_buf2_V_15_ce0;
input  [8:0] FM_buf2_V_15_q0;
output  [11:0] FM_buf2_V_16_address0;
output   FM_buf2_V_16_ce0;
input  [8:0] FM_buf2_V_16_q0;
output  [11:0] FM_buf2_V_17_address0;
output   FM_buf2_V_17_ce0;
input  [8:0] FM_buf2_V_17_q0;
output  [11:0] FM_buf2_V_18_address0;
output   FM_buf2_V_18_ce0;
input  [8:0] FM_buf2_V_18_q0;
output  [11:0] FM_buf2_V_19_address0;
output   FM_buf2_V_19_ce0;
input  [8:0] FM_buf2_V_19_q0;
output  [11:0] FM_buf2_V_20_address0;
output   FM_buf2_V_20_ce0;
input  [8:0] FM_buf2_V_20_q0;
output  [11:0] FM_buf2_V_21_address0;
output   FM_buf2_V_21_ce0;
input  [8:0] FM_buf2_V_21_q0;
output  [11:0] FM_buf2_V_22_address0;
output   FM_buf2_V_22_ce0;
input  [8:0] FM_buf2_V_22_q0;
output  [11:0] FM_buf2_V_23_address0;
output   FM_buf2_V_23_ce0;
input  [8:0] FM_buf2_V_23_q0;
output  [11:0] FM_buf2_V_24_address0;
output   FM_buf2_V_24_ce0;
input  [8:0] FM_buf2_V_24_q0;
output  [11:0] FM_buf2_V_25_address0;
output   FM_buf2_V_25_ce0;
input  [8:0] FM_buf2_V_25_q0;
output  [11:0] FM_buf2_V_26_address0;
output   FM_buf2_V_26_ce0;
input  [8:0] FM_buf2_V_26_q0;
output  [11:0] FM_buf2_V_27_address0;
output   FM_buf2_V_27_ce0;
input  [8:0] FM_buf2_V_27_q0;
output  [11:0] FM_buf2_V_28_address0;
output   FM_buf2_V_28_ce0;
input  [8:0] FM_buf2_V_28_q0;
output  [11:0] FM_buf2_V_29_address0;
output   FM_buf2_V_29_ce0;
input  [8:0] FM_buf2_V_29_q0;
output  [11:0] FM_buf2_V_30_address0;
output   FM_buf2_V_30_ce0;
input  [8:0] FM_buf2_V_30_q0;
output  [11:0] FM_buf2_V_31_address0;
output   FM_buf2_V_31_ce0;
input  [8:0] FM_buf2_V_31_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_dest_V_AWVALID;
reg m_axi_dest_V_WVALID;
reg m_axi_dest_V_BREADY;
reg FM_buf2_V_0_ce0;
reg FM_buf2_V_1_ce0;
reg FM_buf2_V_2_ce0;
reg FM_buf2_V_3_ce0;
reg FM_buf2_V_4_ce0;
reg FM_buf2_V_5_ce0;
reg FM_buf2_V_6_ce0;
reg FM_buf2_V_7_ce0;
reg FM_buf2_V_8_ce0;
reg FM_buf2_V_9_ce0;
reg FM_buf2_V_10_ce0;
reg FM_buf2_V_11_ce0;
reg FM_buf2_V_12_ce0;
reg FM_buf2_V_13_ce0;
reg FM_buf2_V_14_ce0;
reg FM_buf2_V_15_ce0;
reg FM_buf2_V_16_ce0;
reg FM_buf2_V_17_ce0;
reg FM_buf2_V_18_ce0;
reg FM_buf2_V_19_ce0;
reg FM_buf2_V_20_ce0;
reg FM_buf2_V_21_ce0;
reg FM_buf2_V_22_ce0;
reg FM_buf2_V_23_ce0;
reg FM_buf2_V_24_ce0;
reg FM_buf2_V_25_ce0;
reg FM_buf2_V_26_ce0;
reg FM_buf2_V_27_ce0;
reg FM_buf2_V_28_ce0;
reg FM_buf2_V_29_ce0;
reg FM_buf2_V_30_ce0;
reg FM_buf2_V_31_ce0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    dest_V_blk_n_AW;
reg    ap_enable_reg_pp0_iter16;
wire    ap_block_pp0_stage0;
reg   [0:0] empty_40_reg_1731;
reg    dest_V_blk_n_W;
reg    ap_enable_reg_pp0_iter17;
reg   [0:0] icmp_ln305_reg_1529;
reg   [0:0] icmp_ln305_reg_1529_pp0_iter16_reg;
reg    dest_V_blk_n_B;
reg    ap_enable_reg_pp0_iter22;
reg   [0:0] empty_43_reg_1746;
reg   [0:0] empty_43_reg_1746_pp0_iter21_reg;
reg   [11:0] indvar_flatten_reg_590;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_state15_pp0_stage0_iter13;
wire    ap_block_state16_pp0_stage0_iter14;
wire    ap_block_state17_pp0_stage0_iter15;
wire    ap_block_state18_pp0_stage0_iter16;
reg    ap_block_state18_io;
wire    ap_block_state19_pp0_stage0_iter17;
reg    ap_block_state19_io;
wire    ap_block_state20_pp0_stage0_iter18;
wire    ap_block_state21_pp0_stage0_iter19;
wire    ap_block_state22_pp0_stage0_iter20;
wire    ap_block_state23_pp0_stage0_iter21;
reg    ap_block_state24_pp0_stage0_iter22;
reg    ap_block_pp0_stage0_11001;
reg   [11:0] dest_ptr_0_rec_reg_602;
reg   [5:0] h_0_reg_614;
reg   [6:0] w_0_reg_626;
wire   [18:0] mul_ln305_fu_1505_p2;
reg   [18:0] mul_ln305_reg_1519;
wire   [27:0] zext_ln305_2_fu_642_p1;
reg   [27:0] zext_ln305_2_reg_1524;
wire   [0:0] icmp_ln305_fu_646_p2;
reg   [0:0] icmp_ln305_reg_1529_pp0_iter1_reg;
reg   [0:0] icmp_ln305_reg_1529_pp0_iter2_reg;
reg   [0:0] icmp_ln305_reg_1529_pp0_iter3_reg;
reg   [0:0] icmp_ln305_reg_1529_pp0_iter4_reg;
reg   [0:0] icmp_ln305_reg_1529_pp0_iter5_reg;
reg   [0:0] icmp_ln305_reg_1529_pp0_iter6_reg;
reg   [0:0] icmp_ln305_reg_1529_pp0_iter7_reg;
reg   [0:0] icmp_ln305_reg_1529_pp0_iter8_reg;
reg   [0:0] icmp_ln305_reg_1529_pp0_iter9_reg;
reg   [0:0] icmp_ln305_reg_1529_pp0_iter10_reg;
reg   [0:0] icmp_ln305_reg_1529_pp0_iter11_reg;
reg   [0:0] icmp_ln305_reg_1529_pp0_iter12_reg;
reg   [0:0] icmp_ln305_reg_1529_pp0_iter13_reg;
reg   [0:0] icmp_ln305_reg_1529_pp0_iter14_reg;
reg   [0:0] icmp_ln305_reg_1529_pp0_iter15_reg;
wire   [11:0] add_ln305_1_fu_652_p2;
reg   [11:0] add_ln305_1_reg_1533;
reg    ap_enable_reg_pp0_iter0;
wire   [6:0] select_ln305_fu_687_p3;
reg   [6:0] select_ln305_reg_1539;
wire   [11:0] select_ln305_1_fu_695_p3;
reg   [11:0] select_ln305_1_reg_1544;
reg    ap_enable_reg_pp0_iter13;
wire   [5:0] select_ln305_2_fu_703_p3;
reg   [5:0] select_ln305_2_reg_1550;
wire   [6:0] w_fu_711_p2;
reg   [6:0] w_reg_1556;
wire   [12:0] grp_fu_1511_p3;
reg   [12:0] add_ln314_reg_1561;
reg    ap_enable_reg_pp0_iter14;
wire   [27:0] add_ln414_fu_735_p2;
reg   [27:0] add_ln414_reg_1566;
reg   [27:0] add_ln414_reg_1566_pp0_iter15_reg;
wire   [0:0] empty_40_fu_775_p2;
wire   [255:0] p_Result_18_s_fu_1421_p33;
reg   [255:0] p_Result_18_s_reg_1735;
wire   [0:0] empty_43_fu_1499_p2;
reg   [0:0] empty_43_reg_1746_pp0_iter17_reg;
reg   [0:0] empty_43_reg_1746_pp0_iter18_reg;
reg   [0:0] empty_43_reg_1746_pp0_iter19_reg;
reg   [0:0] empty_43_reg_1746_pp0_iter20_reg;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg   [11:0] ap_phi_mux_indvar_flatten_phi_fu_594_p4;
reg   [11:0] ap_phi_mux_dest_ptr_0_rec_phi_fu_606_p4;
reg   [5:0] ap_phi_mux_h_0_phi_fu_618_p4;
reg   [6:0] ap_phi_mux_w_0_phi_fu_630_p4;
wire  signed [63:0] sext_ln314_fu_740_p1;
wire   [63:0] zext_ln414_fu_1489_p1;
reg    ap_block_pp0_stage0_01001;
wire   [7:0] grp_fu_658_p1;
wire   [7:0] grp_fu_664_p1;
wire   [0:0] icmp_ln308_fu_681_p2;
wire   [11:0] add_ln320_fu_669_p2;
wire   [5:0] h_fu_675_p2;
wire   [18:0] zext_ln305_1_fu_717_p1;
(* use_dsp48 = "no" *) wire   [18:0] add_ln305_fu_723_p2;
wire   [27:0] zext_ln308_fu_728_p1;
wire   [11:0] grp_fu_658_p2;
wire   [0:0] tmp_196_fu_781_p3;
wire   [7:0] trunc_ln612_fu_789_p1;
wire   [0:0] tmp_197_fu_801_p3;
wire   [7:0] trunc_ln612_31_fu_809_p1;
wire   [0:0] tmp_198_fu_821_p3;
wire   [7:0] trunc_ln612_32_fu_829_p1;
wire   [0:0] tmp_199_fu_841_p3;
wire   [7:0] trunc_ln612_33_fu_849_p1;
wire   [0:0] tmp_200_fu_861_p3;
wire   [7:0] trunc_ln612_34_fu_869_p1;
wire   [0:0] tmp_201_fu_881_p3;
wire   [7:0] trunc_ln612_35_fu_889_p1;
wire   [0:0] tmp_202_fu_901_p3;
wire   [7:0] trunc_ln612_36_fu_909_p1;
wire   [0:0] tmp_203_fu_921_p3;
wire   [7:0] trunc_ln612_37_fu_929_p1;
wire   [0:0] tmp_204_fu_941_p3;
wire   [7:0] trunc_ln612_38_fu_949_p1;
wire   [0:0] tmp_205_fu_961_p3;
wire   [7:0] trunc_ln612_39_fu_969_p1;
wire   [0:0] tmp_206_fu_981_p3;
wire   [7:0] trunc_ln612_40_fu_989_p1;
wire   [0:0] tmp_207_fu_1001_p3;
wire   [7:0] trunc_ln612_41_fu_1009_p1;
wire   [0:0] tmp_208_fu_1021_p3;
wire   [7:0] trunc_ln612_42_fu_1029_p1;
wire   [0:0] tmp_209_fu_1041_p3;
wire   [7:0] trunc_ln612_43_fu_1049_p1;
wire   [0:0] tmp_210_fu_1061_p3;
wire   [7:0] trunc_ln612_44_fu_1069_p1;
wire   [0:0] tmp_211_fu_1081_p3;
wire   [7:0] trunc_ln612_45_fu_1089_p1;
wire   [0:0] tmp_212_fu_1101_p3;
wire   [7:0] trunc_ln612_46_fu_1109_p1;
wire   [0:0] tmp_213_fu_1121_p3;
wire   [7:0] trunc_ln612_47_fu_1129_p1;
wire   [0:0] tmp_214_fu_1141_p3;
wire   [7:0] trunc_ln612_48_fu_1149_p1;
wire   [0:0] tmp_215_fu_1161_p3;
wire   [7:0] trunc_ln612_49_fu_1169_p1;
wire   [0:0] tmp_216_fu_1181_p3;
wire   [7:0] trunc_ln612_50_fu_1189_p1;
wire   [0:0] tmp_217_fu_1201_p3;
wire   [7:0] trunc_ln612_51_fu_1209_p1;
wire   [0:0] tmp_218_fu_1221_p3;
wire   [7:0] trunc_ln612_52_fu_1229_p1;
wire   [0:0] tmp_219_fu_1241_p3;
wire   [7:0] trunc_ln612_53_fu_1249_p1;
wire   [0:0] tmp_220_fu_1261_p3;
wire   [7:0] trunc_ln612_54_fu_1269_p1;
wire   [0:0] tmp_221_fu_1281_p3;
wire   [7:0] trunc_ln612_55_fu_1289_p1;
wire   [0:0] tmp_222_fu_1301_p3;
wire   [7:0] trunc_ln612_56_fu_1309_p1;
wire   [0:0] tmp_223_fu_1321_p3;
wire   [7:0] trunc_ln612_57_fu_1329_p1;
wire   [0:0] tmp_224_fu_1341_p3;
wire   [7:0] trunc_ln612_58_fu_1349_p1;
wire   [0:0] tmp_225_fu_1361_p3;
wire   [7:0] trunc_ln612_59_fu_1369_p1;
wire   [0:0] tmp_226_fu_1381_p3;
wire   [7:0] trunc_ln612_60_fu_1389_p1;
wire   [0:0] tmp_227_fu_1401_p3;
wire   [7:0] trunc_ln612_61_fu_1409_p1;
wire   [7:0] select_ln281_31_fu_1413_p3;
wire   [7:0] select_ln281_30_fu_1393_p3;
wire   [7:0] select_ln281_29_fu_1373_p3;
wire   [7:0] select_ln281_28_fu_1353_p3;
wire   [7:0] select_ln281_27_fu_1333_p3;
wire   [7:0] select_ln281_26_fu_1313_p3;
wire   [7:0] select_ln281_25_fu_1293_p3;
wire   [7:0] select_ln281_24_fu_1273_p3;
wire   [7:0] select_ln281_23_fu_1253_p3;
wire   [7:0] select_ln281_22_fu_1233_p3;
wire   [7:0] select_ln281_21_fu_1213_p3;
wire   [7:0] select_ln281_20_fu_1193_p3;
wire   [7:0] select_ln281_19_fu_1173_p3;
wire   [7:0] select_ln281_18_fu_1153_p3;
wire   [7:0] select_ln281_17_fu_1133_p3;
wire   [7:0] select_ln281_16_fu_1113_p3;
wire   [7:0] select_ln281_15_fu_1093_p3;
wire   [7:0] select_ln281_14_fu_1073_p3;
wire   [7:0] select_ln281_13_fu_1053_p3;
wire   [7:0] select_ln281_12_fu_1033_p3;
wire   [7:0] select_ln281_11_fu_1013_p3;
wire   [7:0] select_ln281_10_fu_993_p3;
wire   [7:0] select_ln281_9_fu_973_p3;
wire   [7:0] select_ln281_8_fu_953_p3;
wire   [7:0] select_ln281_7_fu_933_p3;
wire   [7:0] select_ln281_6_fu_913_p3;
wire   [7:0] select_ln281_5_fu_893_p3;
wire   [7:0] select_ln281_4_fu_873_p3;
wire   [7:0] select_ln281_3_fu_853_p3;
wire   [7:0] select_ln281_2_fu_833_p3;
wire   [7:0] select_ln281_1_fu_813_p3;
wire   [7:0] select_ln281_fu_793_p3;
wire   [11:0] grp_fu_664_p2;
wire   [6:0] mul_ln305_fu_1505_p0;
wire   [12:0] mul_ln305_fu_1505_p1;
wire   [7:0] grp_fu_1511_p0;
wire   [5:0] grp_fu_1511_p1;
wire   [6:0] grp_fu_1511_p2;
reg    grp_fu_658_ce;
reg    grp_fu_664_ce;
wire    ap_CS_fsm_state25;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [12:0] grp_fu_1511_p10;
wire   [12:0] grp_fu_1511_p20;
wire   [18:0] mul_ln305_fu_1505_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
end

SkyNet_urem_12ns_cud #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 12 ))
SkyNet_urem_12ns_cud_U1186(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_mux_indvar_flatten_phi_fu_594_p4),
    .din1(grp_fu_658_p1),
    .ce(grp_fu_658_ce),
    .dout(grp_fu_658_p2)
);

SkyNet_urem_12ns_cud #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 12 ))
SkyNet_urem_12ns_cud_U1187(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_ln305_1_reg_1533),
    .din1(grp_fu_664_p1),
    .ce(grp_fu_664_ce),
    .dout(grp_fu_664_p2)
);

SkyNet_mul_mul_7nsc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 19 ))
SkyNet_mul_mul_7nsc4_U1188(
    .din0(mul_ln305_fu_1505_p0),
    .din1(mul_ln305_fu_1505_p1),
    .dout(mul_ln305_fu_1505_p2)
);

SkyNet_mac_muladdrcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 7 ),
    .dout_WIDTH( 13 ))
SkyNet_mac_muladdrcU_U1189(
    .din0(grp_fu_1511_p0),
    .din1(grp_fu_1511_p1),
    .din2(grp_fu_1511_p2),
    .dout(grp_fu_1511_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter22 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln305_reg_1529_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        dest_ptr_0_rec_reg_602 <= select_ln305_1_reg_1544;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        dest_ptr_0_rec_reg_602 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln305_reg_1529_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        h_0_reg_614 <= select_ln305_2_reg_1550;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        h_0_reg_614 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln305_reg_1529 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_590 <= add_ln305_1_reg_1533;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_590 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln305_reg_1529_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        w_0_reg_626 <= w_reg_1556;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w_0_reg_626 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln305_1_reg_1533 <= add_ln305_1_fu_652_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln305_reg_1529_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        add_ln314_reg_1561 <= grp_fu_1511_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln305_reg_1529_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln414_reg_1566 <= add_ln414_fu_735_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln414_reg_1566_pp0_iter15_reg <= add_ln414_reg_1566;
        empty_43_reg_1746_pp0_iter17_reg <= empty_43_reg_1746;
        empty_43_reg_1746_pp0_iter18_reg <= empty_43_reg_1746_pp0_iter17_reg;
        empty_43_reg_1746_pp0_iter19_reg <= empty_43_reg_1746_pp0_iter18_reg;
        empty_43_reg_1746_pp0_iter20_reg <= empty_43_reg_1746_pp0_iter19_reg;
        empty_43_reg_1746_pp0_iter21_reg <= empty_43_reg_1746_pp0_iter20_reg;
        icmp_ln305_reg_1529_pp0_iter10_reg <= icmp_ln305_reg_1529_pp0_iter9_reg;
        icmp_ln305_reg_1529_pp0_iter11_reg <= icmp_ln305_reg_1529_pp0_iter10_reg;
        icmp_ln305_reg_1529_pp0_iter12_reg <= icmp_ln305_reg_1529_pp0_iter11_reg;
        icmp_ln305_reg_1529_pp0_iter13_reg <= icmp_ln305_reg_1529_pp0_iter12_reg;
        icmp_ln305_reg_1529_pp0_iter14_reg <= icmp_ln305_reg_1529_pp0_iter13_reg;
        icmp_ln305_reg_1529_pp0_iter15_reg <= icmp_ln305_reg_1529_pp0_iter14_reg;
        icmp_ln305_reg_1529_pp0_iter16_reg <= icmp_ln305_reg_1529_pp0_iter15_reg;
        icmp_ln305_reg_1529_pp0_iter2_reg <= icmp_ln305_reg_1529_pp0_iter1_reg;
        icmp_ln305_reg_1529_pp0_iter3_reg <= icmp_ln305_reg_1529_pp0_iter2_reg;
        icmp_ln305_reg_1529_pp0_iter4_reg <= icmp_ln305_reg_1529_pp0_iter3_reg;
        icmp_ln305_reg_1529_pp0_iter5_reg <= icmp_ln305_reg_1529_pp0_iter4_reg;
        icmp_ln305_reg_1529_pp0_iter6_reg <= icmp_ln305_reg_1529_pp0_iter5_reg;
        icmp_ln305_reg_1529_pp0_iter7_reg <= icmp_ln305_reg_1529_pp0_iter6_reg;
        icmp_ln305_reg_1529_pp0_iter8_reg <= icmp_ln305_reg_1529_pp0_iter7_reg;
        icmp_ln305_reg_1529_pp0_iter9_reg <= icmp_ln305_reg_1529_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln305_reg_1529_pp0_iter14_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_40_reg_1731 <= empty_40_fu_775_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln305_reg_1529_pp0_iter15_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_43_reg_1746 <= empty_43_fu_1499_p2;
        p_Result_18_s_reg_1735 <= p_Result_18_s_fu_1421_p33;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln305_reg_1529 <= icmp_ln305_fu_646_p2;
        icmp_ln305_reg_1529_pp0_iter1_reg <= icmp_ln305_reg_1529;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        mul_ln305_reg_1519 <= mul_ln305_fu_1505_p2;
        zext_ln305_2_reg_1524[26 : 0] <= zext_ln305_2_fu_642_p1[26 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln305_reg_1529_pp0_iter12_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        select_ln305_1_reg_1544 <= select_ln305_1_fu_695_p3;
        select_ln305_2_reg_1550 <= select_ln305_2_fu_703_p3;
        w_reg_1556 <= w_fu_711_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln305_reg_1529_pp0_iter12_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln305_reg_1539 <= select_ln305_fu_687_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_0_ce0 = 1'b1;
    end else begin
        FM_buf2_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_10_ce0 = 1'b1;
    end else begin
        FM_buf2_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_11_ce0 = 1'b1;
    end else begin
        FM_buf2_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_12_ce0 = 1'b1;
    end else begin
        FM_buf2_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_13_ce0 = 1'b1;
    end else begin
        FM_buf2_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_14_ce0 = 1'b1;
    end else begin
        FM_buf2_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_15_ce0 = 1'b1;
    end else begin
        FM_buf2_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_16_ce0 = 1'b1;
    end else begin
        FM_buf2_V_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_17_ce0 = 1'b1;
    end else begin
        FM_buf2_V_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_18_ce0 = 1'b1;
    end else begin
        FM_buf2_V_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_19_ce0 = 1'b1;
    end else begin
        FM_buf2_V_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_1_ce0 = 1'b1;
    end else begin
        FM_buf2_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_20_ce0 = 1'b1;
    end else begin
        FM_buf2_V_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_21_ce0 = 1'b1;
    end else begin
        FM_buf2_V_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_22_ce0 = 1'b1;
    end else begin
        FM_buf2_V_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_23_ce0 = 1'b1;
    end else begin
        FM_buf2_V_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_24_ce0 = 1'b1;
    end else begin
        FM_buf2_V_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_25_ce0 = 1'b1;
    end else begin
        FM_buf2_V_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_26_ce0 = 1'b1;
    end else begin
        FM_buf2_V_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_27_ce0 = 1'b1;
    end else begin
        FM_buf2_V_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_28_ce0 = 1'b1;
    end else begin
        FM_buf2_V_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_29_ce0 = 1'b1;
    end else begin
        FM_buf2_V_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_2_ce0 = 1'b1;
    end else begin
        FM_buf2_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_30_ce0 = 1'b1;
    end else begin
        FM_buf2_V_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_31_ce0 = 1'b1;
    end else begin
        FM_buf2_V_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_3_ce0 = 1'b1;
    end else begin
        FM_buf2_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_4_ce0 = 1'b1;
    end else begin
        FM_buf2_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_5_ce0 = 1'b1;
    end else begin
        FM_buf2_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_6_ce0 = 1'b1;
    end else begin
        FM_buf2_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_7_ce0 = 1'b1;
    end else begin
        FM_buf2_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_8_ce0 = 1'b1;
    end else begin
        FM_buf2_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter15 == 1'b1))) begin
        FM_buf2_V_9_ce0 = 1'b1;
    end else begin
        FM_buf2_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln305_fu_646_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln305_reg_1529_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        ap_phi_mux_dest_ptr_0_rec_phi_fu_606_p4 = select_ln305_1_reg_1544;
    end else begin
        ap_phi_mux_dest_ptr_0_rec_phi_fu_606_p4 = dest_ptr_0_rec_reg_602;
    end
end

always @ (*) begin
    if (((icmp_ln305_reg_1529_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        ap_phi_mux_h_0_phi_fu_618_p4 = select_ln305_2_reg_1550;
    end else begin
        ap_phi_mux_h_0_phi_fu_618_p4 = h_0_reg_614;
    end
end

always @ (*) begin
    if (((icmp_ln305_reg_1529 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_594_p4 = add_ln305_1_reg_1533;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_594_p4 = indvar_flatten_reg_590;
    end
end

always @ (*) begin
    if (((icmp_ln305_reg_1529_pp0_iter13_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        ap_phi_mux_w_0_phi_fu_630_p4 = w_reg_1556;
    end else begin
        ap_phi_mux_w_0_phi_fu_630_p4 = w_0_reg_626;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((empty_40_reg_1731 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        dest_V_blk_n_AW = m_axi_dest_V_AWREADY;
    end else begin
        dest_V_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((empty_43_reg_1746_pp0_iter21_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter22 == 1'b1))) begin
        dest_V_blk_n_B = m_axi_dest_V_BVALID;
    end else begin
        dest_V_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln305_reg_1529_pp0_iter16_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        dest_V_blk_n_W = m_axi_dest_V_WREADY;
    end else begin
        dest_V_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_658_ce = 1'b1;
    end else begin
        grp_fu_658_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_664_ce = 1'b1;
    end else begin
        grp_fu_664_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_40_reg_1731 == 1'd1) & (ap_enable_reg_pp0_iter16 == 1'b1))) begin
        m_axi_dest_V_AWVALID = 1'b1;
    end else begin
        m_axi_dest_V_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_43_reg_1746_pp0_iter21_reg == 1'd1) & (ap_enable_reg_pp0_iter22 == 1'b1))) begin
        m_axi_dest_V_BREADY = 1'b1;
    end else begin
        m_axi_dest_V_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln305_reg_1529_pp0_iter16_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        m_axi_dest_V_WVALID = 1'b1;
    end else begin
        m_axi_dest_V_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln305_fu_646_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter21 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter22 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln305_fu_646_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter21 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter22 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign FM_buf2_V_0_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_10_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_11_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_12_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_13_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_14_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_15_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_16_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_17_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_18_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_19_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_1_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_20_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_21_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_22_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_23_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_24_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_25_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_26_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_27_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_28_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_29_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_2_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_30_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_31_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_3_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_4_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_5_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_6_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_7_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_8_address0 = sext_ln314_fu_740_p1;

assign FM_buf2_V_9_address0 = sext_ln314_fu_740_p1;

assign add_ln305_1_fu_652_p2 = (ap_phi_mux_indvar_flatten_phi_fu_594_p4 + 12'd1);

assign add_ln305_fu_723_p2 = (mul_ln305_reg_1519 + zext_ln305_1_fu_717_p1);

assign add_ln320_fu_669_p2 = (12'd84 + ap_phi_mux_dest_ptr_0_rec_phi_fu_606_p4);

assign add_ln414_fu_735_p2 = (zext_ln308_fu_728_p1 + zext_ln305_2_reg_1524);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((m_axi_dest_V_BVALID == 1'b0) & (empty_43_reg_1746_pp0_iter21_reg == 1'd1) & (ap_enable_reg_pp0_iter22 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((m_axi_dest_V_BVALID == 1'b0) & (empty_43_reg_1746_pp0_iter21_reg == 1'd1) & (ap_enable_reg_pp0_iter22 == 1'b1)) | ((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_block_state19_io)) | ((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_block_state18_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((m_axi_dest_V_BVALID == 1'b0) & (empty_43_reg_1746_pp0_iter21_reg == 1'd1) & (ap_enable_reg_pp0_iter22 == 1'b1)) | ((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b1 == ap_block_state19_io)) | ((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b1 == ap_block_state18_io)));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state18_io = ((m_axi_dest_V_AWREADY == 1'b0) & (empty_40_reg_1731 == 1'd1));
end

assign ap_block_state18_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_io = ((icmp_ln305_reg_1529_pp0_iter16_reg == 1'd0) & (m_axi_dest_V_WREADY == 1'b0));
end

assign ap_block_state19_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state24_pp0_stage0_iter22 = ((m_axi_dest_V_BVALID == 1'b0) & (empty_43_reg_1746_pp0_iter21_reg == 1'd1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign empty_40_fu_775_p2 = ((grp_fu_658_p2 == 12'd0) ? 1'b1 : 1'b0);

assign empty_43_fu_1499_p2 = ((grp_fu_664_p2 == 12'd0) ? 1'b1 : 1'b0);

assign grp_fu_1511_p0 = 13'd84;

assign grp_fu_1511_p1 = grp_fu_1511_p10;

assign grp_fu_1511_p10 = select_ln305_2_reg_1550;

assign grp_fu_1511_p2 = grp_fu_1511_p20;

assign grp_fu_1511_p20 = select_ln305_reg_1539;

assign grp_fu_658_p1 = 12'd84;

assign grp_fu_664_p1 = 12'd84;

assign h_fu_675_p2 = (6'd1 + ap_phi_mux_h_0_phi_fu_618_p4);

assign icmp_ln305_fu_646_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_594_p4 == 12'd3696) ? 1'b1 : 1'b0);

assign icmp_ln308_fu_681_p2 = ((ap_phi_mux_w_0_phi_fu_630_p4 == 7'd84) ? 1'b1 : 1'b0);

assign m_axi_dest_V_ARADDR = 32'd0;

assign m_axi_dest_V_ARBURST = 2'd0;

assign m_axi_dest_V_ARCACHE = 4'd0;

assign m_axi_dest_V_ARID = 1'd0;

assign m_axi_dest_V_ARLEN = 32'd0;

assign m_axi_dest_V_ARLOCK = 2'd0;

assign m_axi_dest_V_ARPROT = 3'd0;

assign m_axi_dest_V_ARQOS = 4'd0;

assign m_axi_dest_V_ARREGION = 4'd0;

assign m_axi_dest_V_ARSIZE = 3'd0;

assign m_axi_dest_V_ARUSER = 1'd0;

assign m_axi_dest_V_ARVALID = 1'b0;

assign m_axi_dest_V_AWADDR = zext_ln414_fu_1489_p1;

assign m_axi_dest_V_AWBURST = 2'd0;

assign m_axi_dest_V_AWCACHE = 4'd0;

assign m_axi_dest_V_AWID = 1'd0;

assign m_axi_dest_V_AWLEN = 32'd84;

assign m_axi_dest_V_AWLOCK = 2'd0;

assign m_axi_dest_V_AWPROT = 3'd0;

assign m_axi_dest_V_AWQOS = 4'd0;

assign m_axi_dest_V_AWREGION = 4'd0;

assign m_axi_dest_V_AWSIZE = 3'd0;

assign m_axi_dest_V_AWUSER = 1'd0;

assign m_axi_dest_V_RREADY = 1'b0;

assign m_axi_dest_V_WDATA = p_Result_18_s_reg_1735;

assign m_axi_dest_V_WID = 1'd0;

assign m_axi_dest_V_WLAST = 1'b0;

assign m_axi_dest_V_WSTRB = 32'd4294967295;

assign m_axi_dest_V_WUSER = 1'd0;

assign mul_ln305_fu_1505_p0 = mul_ln305_fu_1505_p00;

assign mul_ln305_fu_1505_p00 = buf_id;

assign mul_ln305_fu_1505_p1 = 19'd3696;

assign p_Result_18_s_fu_1421_p33 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{select_ln281_31_fu_1413_p3}, {select_ln281_30_fu_1393_p3}}, {select_ln281_29_fu_1373_p3}}, {select_ln281_28_fu_1353_p3}}, {select_ln281_27_fu_1333_p3}}, {select_ln281_26_fu_1313_p3}}, {select_ln281_25_fu_1293_p3}}, {select_ln281_24_fu_1273_p3}}, {select_ln281_23_fu_1253_p3}}, {select_ln281_22_fu_1233_p3}}, {select_ln281_21_fu_1213_p3}}, {select_ln281_20_fu_1193_p3}}, {select_ln281_19_fu_1173_p3}}, {select_ln281_18_fu_1153_p3}}, {select_ln281_17_fu_1133_p3}}, {select_ln281_16_fu_1113_p3}}, {select_ln281_15_fu_1093_p3}}, {select_ln281_14_fu_1073_p3}}, {select_ln281_13_fu_1053_p3}}, {select_ln281_12_fu_1033_p3}}, {select_ln281_11_fu_1013_p3}}, {select_ln281_10_fu_993_p3}}, {select_ln281_9_fu_973_p3}}, {select_ln281_8_fu_953_p3}}, {select_ln281_7_fu_933_p3}}, {select_ln281_6_fu_913_p3}}, {select_ln281_5_fu_893_p3}}, {select_ln281_4_fu_873_p3}}, {select_ln281_3_fu_853_p3}}, {select_ln281_2_fu_833_p3}}, {select_ln281_1_fu_813_p3}}, {select_ln281_fu_793_p3}};

assign select_ln281_10_fu_993_p3 = ((tmp_206_fu_981_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_40_fu_989_p1);

assign select_ln281_11_fu_1013_p3 = ((tmp_207_fu_1001_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_41_fu_1009_p1);

assign select_ln281_12_fu_1033_p3 = ((tmp_208_fu_1021_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_42_fu_1029_p1);

assign select_ln281_13_fu_1053_p3 = ((tmp_209_fu_1041_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_43_fu_1049_p1);

assign select_ln281_14_fu_1073_p3 = ((tmp_210_fu_1061_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_44_fu_1069_p1);

assign select_ln281_15_fu_1093_p3 = ((tmp_211_fu_1081_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_45_fu_1089_p1);

assign select_ln281_16_fu_1113_p3 = ((tmp_212_fu_1101_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_46_fu_1109_p1);

assign select_ln281_17_fu_1133_p3 = ((tmp_213_fu_1121_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_47_fu_1129_p1);

assign select_ln281_18_fu_1153_p3 = ((tmp_214_fu_1141_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_48_fu_1149_p1);

assign select_ln281_19_fu_1173_p3 = ((tmp_215_fu_1161_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_49_fu_1169_p1);

assign select_ln281_1_fu_813_p3 = ((tmp_197_fu_801_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_31_fu_809_p1);

assign select_ln281_20_fu_1193_p3 = ((tmp_216_fu_1181_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_50_fu_1189_p1);

assign select_ln281_21_fu_1213_p3 = ((tmp_217_fu_1201_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_51_fu_1209_p1);

assign select_ln281_22_fu_1233_p3 = ((tmp_218_fu_1221_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_52_fu_1229_p1);

assign select_ln281_23_fu_1253_p3 = ((tmp_219_fu_1241_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_53_fu_1249_p1);

assign select_ln281_24_fu_1273_p3 = ((tmp_220_fu_1261_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_54_fu_1269_p1);

assign select_ln281_25_fu_1293_p3 = ((tmp_221_fu_1281_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_55_fu_1289_p1);

assign select_ln281_26_fu_1313_p3 = ((tmp_222_fu_1301_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_56_fu_1309_p1);

assign select_ln281_27_fu_1333_p3 = ((tmp_223_fu_1321_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_57_fu_1329_p1);

assign select_ln281_28_fu_1353_p3 = ((tmp_224_fu_1341_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_58_fu_1349_p1);

assign select_ln281_29_fu_1373_p3 = ((tmp_225_fu_1361_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_59_fu_1369_p1);

assign select_ln281_2_fu_833_p3 = ((tmp_198_fu_821_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_32_fu_829_p1);

assign select_ln281_30_fu_1393_p3 = ((tmp_226_fu_1381_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_60_fu_1389_p1);

assign select_ln281_31_fu_1413_p3 = ((tmp_227_fu_1401_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_61_fu_1409_p1);

assign select_ln281_3_fu_853_p3 = ((tmp_199_fu_841_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_33_fu_849_p1);

assign select_ln281_4_fu_873_p3 = ((tmp_200_fu_861_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_34_fu_869_p1);

assign select_ln281_5_fu_893_p3 = ((tmp_201_fu_881_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_35_fu_889_p1);

assign select_ln281_6_fu_913_p3 = ((tmp_202_fu_901_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_36_fu_909_p1);

assign select_ln281_7_fu_933_p3 = ((tmp_203_fu_921_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_37_fu_929_p1);

assign select_ln281_8_fu_953_p3 = ((tmp_204_fu_941_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_38_fu_949_p1);

assign select_ln281_9_fu_973_p3 = ((tmp_205_fu_961_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_39_fu_969_p1);

assign select_ln281_fu_793_p3 = ((tmp_196_fu_781_p3[0:0] === 1'b1) ? 8'd0 : trunc_ln612_fu_789_p1);

assign select_ln305_1_fu_695_p3 = ((icmp_ln308_fu_681_p2[0:0] === 1'b1) ? add_ln320_fu_669_p2 : ap_phi_mux_dest_ptr_0_rec_phi_fu_606_p4);

assign select_ln305_2_fu_703_p3 = ((icmp_ln308_fu_681_p2[0:0] === 1'b1) ? h_fu_675_p2 : ap_phi_mux_h_0_phi_fu_618_p4);

assign select_ln305_fu_687_p3 = ((icmp_ln308_fu_681_p2[0:0] === 1'b1) ? 7'd0 : ap_phi_mux_w_0_phi_fu_630_p4);

assign sext_ln314_fu_740_p1 = $signed(add_ln314_reg_1561);

assign tmp_196_fu_781_p3 = FM_buf2_V_0_q0[32'd8];

assign tmp_197_fu_801_p3 = FM_buf2_V_1_q0[32'd8];

assign tmp_198_fu_821_p3 = FM_buf2_V_2_q0[32'd8];

assign tmp_199_fu_841_p3 = FM_buf2_V_3_q0[32'd8];

assign tmp_200_fu_861_p3 = FM_buf2_V_4_q0[32'd8];

assign tmp_201_fu_881_p3 = FM_buf2_V_5_q0[32'd8];

assign tmp_202_fu_901_p3 = FM_buf2_V_6_q0[32'd8];

assign tmp_203_fu_921_p3 = FM_buf2_V_7_q0[32'd8];

assign tmp_204_fu_941_p3 = FM_buf2_V_8_q0[32'd8];

assign tmp_205_fu_961_p3 = FM_buf2_V_9_q0[32'd8];

assign tmp_206_fu_981_p3 = FM_buf2_V_10_q0[32'd8];

assign tmp_207_fu_1001_p3 = FM_buf2_V_11_q0[32'd8];

assign tmp_208_fu_1021_p3 = FM_buf2_V_12_q0[32'd8];

assign tmp_209_fu_1041_p3 = FM_buf2_V_13_q0[32'd8];

assign tmp_210_fu_1061_p3 = FM_buf2_V_14_q0[32'd8];

assign tmp_211_fu_1081_p3 = FM_buf2_V_15_q0[32'd8];

assign tmp_212_fu_1101_p3 = FM_buf2_V_16_q0[32'd8];

assign tmp_213_fu_1121_p3 = FM_buf2_V_17_q0[32'd8];

assign tmp_214_fu_1141_p3 = FM_buf2_V_18_q0[32'd8];

assign tmp_215_fu_1161_p3 = FM_buf2_V_19_q0[32'd8];

assign tmp_216_fu_1181_p3 = FM_buf2_V_20_q0[32'd8];

assign tmp_217_fu_1201_p3 = FM_buf2_V_21_q0[32'd8];

assign tmp_218_fu_1221_p3 = FM_buf2_V_22_q0[32'd8];

assign tmp_219_fu_1241_p3 = FM_buf2_V_23_q0[32'd8];

assign tmp_220_fu_1261_p3 = FM_buf2_V_24_q0[32'd8];

assign tmp_221_fu_1281_p3 = FM_buf2_V_25_q0[32'd8];

assign tmp_222_fu_1301_p3 = FM_buf2_V_26_q0[32'd8];

assign tmp_223_fu_1321_p3 = FM_buf2_V_27_q0[32'd8];

assign tmp_224_fu_1341_p3 = FM_buf2_V_28_q0[32'd8];

assign tmp_225_fu_1361_p3 = FM_buf2_V_29_q0[32'd8];

assign tmp_226_fu_1381_p3 = FM_buf2_V_30_q0[32'd8];

assign tmp_227_fu_1401_p3 = FM_buf2_V_31_q0[32'd8];

assign trunc_ln612_31_fu_809_p1 = FM_buf2_V_1_q0[7:0];

assign trunc_ln612_32_fu_829_p1 = FM_buf2_V_2_q0[7:0];

assign trunc_ln612_33_fu_849_p1 = FM_buf2_V_3_q0[7:0];

assign trunc_ln612_34_fu_869_p1 = FM_buf2_V_4_q0[7:0];

assign trunc_ln612_35_fu_889_p1 = FM_buf2_V_5_q0[7:0];

assign trunc_ln612_36_fu_909_p1 = FM_buf2_V_6_q0[7:0];

assign trunc_ln612_37_fu_929_p1 = FM_buf2_V_7_q0[7:0];

assign trunc_ln612_38_fu_949_p1 = FM_buf2_V_8_q0[7:0];

assign trunc_ln612_39_fu_969_p1 = FM_buf2_V_9_q0[7:0];

assign trunc_ln612_40_fu_989_p1 = FM_buf2_V_10_q0[7:0];

assign trunc_ln612_41_fu_1009_p1 = FM_buf2_V_11_q0[7:0];

assign trunc_ln612_42_fu_1029_p1 = FM_buf2_V_12_q0[7:0];

assign trunc_ln612_43_fu_1049_p1 = FM_buf2_V_13_q0[7:0];

assign trunc_ln612_44_fu_1069_p1 = FM_buf2_V_14_q0[7:0];

assign trunc_ln612_45_fu_1089_p1 = FM_buf2_V_15_q0[7:0];

assign trunc_ln612_46_fu_1109_p1 = FM_buf2_V_16_q0[7:0];

assign trunc_ln612_47_fu_1129_p1 = FM_buf2_V_17_q0[7:0];

assign trunc_ln612_48_fu_1149_p1 = FM_buf2_V_18_q0[7:0];

assign trunc_ln612_49_fu_1169_p1 = FM_buf2_V_19_q0[7:0];

assign trunc_ln612_50_fu_1189_p1 = FM_buf2_V_20_q0[7:0];

assign trunc_ln612_51_fu_1209_p1 = FM_buf2_V_21_q0[7:0];

assign trunc_ln612_52_fu_1229_p1 = FM_buf2_V_22_q0[7:0];

assign trunc_ln612_53_fu_1249_p1 = FM_buf2_V_23_q0[7:0];

assign trunc_ln612_54_fu_1269_p1 = FM_buf2_V_24_q0[7:0];

assign trunc_ln612_55_fu_1289_p1 = FM_buf2_V_25_q0[7:0];

assign trunc_ln612_56_fu_1309_p1 = FM_buf2_V_26_q0[7:0];

assign trunc_ln612_57_fu_1329_p1 = FM_buf2_V_27_q0[7:0];

assign trunc_ln612_58_fu_1349_p1 = FM_buf2_V_28_q0[7:0];

assign trunc_ln612_59_fu_1369_p1 = FM_buf2_V_29_q0[7:0];

assign trunc_ln612_60_fu_1389_p1 = FM_buf2_V_30_q0[7:0];

assign trunc_ln612_61_fu_1409_p1 = FM_buf2_V_31_q0[7:0];

assign trunc_ln612_fu_789_p1 = FM_buf2_V_0_q0[7:0];

assign w_fu_711_p2 = (select_ln305_fu_687_p3 + 7'd1);

assign zext_ln305_1_fu_717_p1 = select_ln305_1_reg_1544;

assign zext_ln305_2_fu_642_p1 = dest_V_offset;

assign zext_ln308_fu_728_p1 = add_ln305_fu_723_p2;

assign zext_ln414_fu_1489_p1 = add_ln414_reg_1566_pp0_iter15_reg;

always @ (posedge ap_clk) begin
    zext_ln305_2_reg_1524[27] <= 1'b0;
end

endmodule //relu_copy_buf_to_DDR
