// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module convDSPOpt_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        vec_V_V_dout,
        vec_V_V_empty_n,
        vec_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write,
        reps_dout,
        reps_empty_n,
        reps_read
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state12 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] vec_V_V_dout;
input   vec_V_V_empty_n;
output   vec_V_V_read;
output  [15:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;
input  [31:0] reps_dout;
input   reps_empty_n;
output   reps_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg vec_V_V_read;
reg out_V_V_write;
reg reps_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] conv_7_inc_new_V_0_address0;
reg    conv_7_inc_new_V_0_ce0;
wire   [11:0] conv_7_inc_new_V_0_q0;
wire   [4:0] conv_7_inc_new_V_0_address1;
reg    conv_7_inc_new_V_0_ce1;
wire   [11:0] conv_7_inc_new_V_0_q1;
wire   [4:0] conv_7_bias_new_V_0_address0;
reg    conv_7_bias_new_V_0_ce0;
wire   [20:0] conv_7_bias_new_V_0_q0;
wire   [4:0] conv_7_bias_new_V_0_address1;
reg    conv_7_bias_new_V_0_ce1;
wire   [20:0] conv_7_bias_new_V_0_q1;
wire   [4:0] conv_7_inc_new_V_1_address0;
reg    conv_7_inc_new_V_1_ce0;
wire   [11:0] conv_7_inc_new_V_1_q0;
wire   [4:0] conv_7_inc_new_V_1_address1;
reg    conv_7_inc_new_V_1_ce1;
wire   [11:0] conv_7_inc_new_V_1_q1;
wire   [4:0] conv_7_bias_new_V_1_address0;
reg    conv_7_bias_new_V_1_ce0;
wire   [21:0] conv_7_bias_new_V_1_q0;
wire   [4:0] conv_7_bias_new_V_1_address1;
reg    conv_7_bias_new_V_1_ce1;
wire   [21:0] conv_7_bias_new_V_1_q1;
wire   [10:0] conv_7_w_new_V_0_2_address0;
reg    conv_7_w_new_V_0_2_ce0;
wire   [15:0] conv_7_w_new_V_0_2_q0;
wire   [10:0] conv_7_w_new_V_0_1_address0;
reg    conv_7_w_new_V_0_1_ce0;
wire   [15:0] conv_7_w_new_V_0_1_q0;
wire   [10:0] conv_7_w_new_V_0_0_address0;
reg    conv_7_w_new_V_0_0_ce0;
wire   [15:0] conv_7_w_new_V_0_0_q0;
wire   [10:0] conv_7_w_new_V_1_2_address0;
reg    conv_7_w_new_V_1_2_ce0;
wire   [15:0] conv_7_w_new_V_1_2_q0;
wire   [10:0] conv_7_w_new_V_1_1_address0;
reg    conv_7_w_new_V_1_1_ce0;
wire   [15:0] conv_7_w_new_V_1_1_q0;
wire   [10:0] conv_7_w_new_V_1_0_address0;
reg    conv_7_w_new_V_1_0_ce0;
wire   [15:0] conv_7_w_new_V_1_0_q0;
reg    vec_V_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln392_reg_2603;
reg   [0:0] icmp_ln392_reg_2603_pp0_iter1_reg;
reg    out_V_V_blk_n;
reg    ap_enable_reg_pp0_iter8;
reg   [0:0] o_out_reg_2748;
reg   [0:0] o_out_reg_2748_pp0_iter7_reg;
reg    reps_blk_n;
reg   [46:0] indvar_flatten145_reg_431;
reg   [15:0] indvar_flatten33_reg_442;
reg   [5:0] peIdx_0_i_reg_453;
reg   [9:0] indvar_flatten_reg_464;
reg   [5:0] infoldIdx_0_i_reg_475;
reg   [4:0] w_0_i_reg_486;
reg   [31:0] reps_read_reg_2566;
reg    ap_block_state1;
wire   [46:0] bound46_fu_537_p2;
reg   [46:0] bound46_reg_2572;
wire    ap_CS_fsm_state2;
wire   [4:0] trunc_ln404_fu_543_p1;
reg   [4:0] trunc_ln404_reg_2577;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
reg    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
reg    ap_block_state11_pp0_stage0_iter8;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln392_fu_555_p2;
reg   [0:0] icmp_ln392_reg_2603_pp0_iter2_reg;
reg   [0:0] icmp_ln392_reg_2603_pp0_iter3_reg;
reg   [0:0] icmp_ln392_reg_2603_pp0_iter4_reg;
reg   [0:0] icmp_ln392_reg_2603_pp0_iter5_reg;
wire   [46:0] add_ln392_6_fu_560_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln393_fu_566_p2;
reg   [0:0] icmp_ln393_reg_2612;
reg   [0:0] icmp_ln393_reg_2612_pp0_iter1_reg;
wire   [0:0] xor_ln393_fu_580_p2;
reg   [0:0] xor_ln393_reg_2623;
wire   [0:0] and_ln393_22_fu_604_p2;
reg   [0:0] and_ln393_22_reg_2628;
reg   [0:0] and_ln393_22_reg_2628_pp0_iter1_reg;
wire   [5:0] peIdx_fu_610_p2;
reg   [5:0] peIdx_reg_2639;
wire   [0:0] or_ln393_fu_616_p2;
reg   [0:0] or_ln393_reg_2644;
wire   [4:0] trunc_ln404_6_fu_622_p1;
reg   [4:0] trunc_ln404_6_reg_2649;
wire   [0:0] or_ln393_6_fu_632_p2;
reg   [0:0] or_ln393_6_reg_2655;
wire   [0:0] and_ln393_24_fu_638_p2;
reg   [0:0] and_ln393_24_reg_2660;
wire   [5:0] select_ln393_133_fu_644_p3;
wire   [5:0] select_ln399_fu_664_p3;
reg   [5:0] select_ln399_reg_2671;
reg   [5:0] select_ln399_reg_2671_pp0_iter1_reg;
reg   [5:0] select_ln399_reg_2671_pp0_iter2_reg;
reg   [5:0] select_ln399_reg_2671_pp0_iter3_reg;
reg   [5:0] select_ln399_reg_2671_pp0_iter4_reg;
wire   [5:0] infoldIdx_fu_672_p2;
wire   [9:0] select_ln394_6_fu_684_p3;
wire   [15:0] select_ln393_134_fu_698_p3;
reg   [11:0] conv_7_inc_new_V_0_l_reg_2693;
reg    ap_enable_reg_pp0_iter1;
reg   [20:0] conv_7_bias_new_V_0_1_reg_2698;
reg   [11:0] conv_7_inc_new_V_1_l_reg_2703;
reg   [21:0] conv_7_bias_new_V_1_1_reg_2708;
wire   [20:0] add_ln1353_fu_734_p2;
reg   [20:0] add_ln1353_reg_2713;
wire   [21:0] add_ln1353_28_fu_740_p2;
reg   [21:0] add_ln1353_28_reg_2718;
wire   [4:0] select_ln394_fu_837_p3;
wire   [0:0] o_out_fu_852_p2;
reg   [0:0] o_out_reg_2748_pp0_iter2_reg;
reg   [0:0] o_out_reg_2748_pp0_iter3_reg;
reg   [0:0] o_out_reg_2748_pp0_iter4_reg;
reg   [0:0] o_out_reg_2748_pp0_iter5_reg;
reg   [0:0] o_out_reg_2748_pp0_iter6_reg;
wire   [11:0] select_ln393_127_fu_914_p3;
reg   [11:0] select_ln393_127_reg_2782;
reg   [11:0] select_ln393_127_reg_2782_pp0_iter3_reg;
reg   [11:0] select_ln393_127_reg_2782_pp0_iter4_reg;
reg   [11:0] select_ln393_127_reg_2782_pp0_iter5_reg;
wire   [20:0] select_ln393_128_fu_921_p3;
reg   [20:0] select_ln393_128_reg_2787;
reg   [20:0] select_ln393_128_reg_2787_pp0_iter3_reg;
reg   [20:0] select_ln393_128_reg_2787_pp0_iter4_reg;
reg   [20:0] select_ln393_128_reg_2787_pp0_iter5_reg;
reg   [20:0] select_ln393_128_reg_2787_pp0_iter6_reg;
wire   [20:0] select_ln393_129_fu_934_p3;
reg   [20:0] select_ln393_129_reg_2792;
reg   [20:0] select_ln393_129_reg_2792_pp0_iter3_reg;
reg   [20:0] select_ln393_129_reg_2792_pp0_iter4_reg;
reg   [20:0] select_ln393_129_reg_2792_pp0_iter5_reg;
reg   [20:0] select_ln393_129_reg_2792_pp0_iter6_reg;
wire   [11:0] select_ln393_130_fu_941_p3;
reg   [11:0] select_ln393_130_reg_2797;
reg   [11:0] select_ln393_130_reg_2797_pp0_iter3_reg;
reg   [11:0] select_ln393_130_reg_2797_pp0_iter4_reg;
reg   [11:0] select_ln393_130_reg_2797_pp0_iter5_reg;
wire   [21:0] select_ln393_131_fu_948_p3;
reg   [21:0] select_ln393_131_reg_2802;
reg   [21:0] select_ln393_131_reg_2802_pp0_iter3_reg;
reg   [21:0] select_ln393_131_reg_2802_pp0_iter4_reg;
reg   [21:0] select_ln393_131_reg_2802_pp0_iter5_reg;
reg   [21:0] select_ln393_131_reg_2802_pp0_iter6_reg;
wire   [21:0] select_ln393_132_fu_961_p3;
reg   [21:0] select_ln393_132_reg_2807;
reg   [21:0] select_ln393_132_reg_2807_pp0_iter3_reg;
reg   [21:0] select_ln393_132_reg_2807_pp0_iter4_reg;
reg   [21:0] select_ln393_132_reg_2807_pp0_iter5_reg;
reg   [21:0] select_ln393_132_reg_2807_pp0_iter6_reg;
wire   [3:0] trunc_ln647_fu_968_p1;
reg   [3:0] trunc_ln647_reg_2812;
reg   [3:0] p_Result_78_i_i_reg_2817;
reg   [3:0] p_Result_1_i_i_reg_2822;
reg   [3:0] p_Result_78_1_i_i_reg_2827;
reg   [3:0] p_Result_2_i_i_reg_2832;
reg   [3:0] p_Result_78_2_i_i_reg_2837;
reg   [3:0] p_Result_3_i_i_reg_2842;
reg   [3:0] p_Result_78_3_i_i_reg_2847;
wire   [25:0] wpacks_0_0_V_fu_1088_p2;
reg  signed [25:0] wpacks_0_0_V_reg_2852;
wire   [25:0] wpacks_0_1_V_fu_1158_p2;
reg  signed [25:0] wpacks_0_1_V_reg_2857;
wire   [25:0] wpacks_0_2_V_fu_1228_p2;
reg  signed [25:0] wpacks_0_2_V_reg_2862;
wire   [25:0] wpacks_0_3_V_fu_1298_p2;
reg  signed [25:0] wpacks_0_3_V_reg_2867;
wire   [25:0] wpacks_1_0_V_fu_1350_p2;
reg  signed [25:0] wpacks_1_0_V_reg_2872;
wire   [25:0] wpacks_1_1_V_fu_1420_p2;
reg  signed [25:0] wpacks_1_1_V_reg_2877;
wire   [25:0] wpacks_1_2_V_fu_1490_p2;
reg  signed [25:0] wpacks_1_2_V_reg_2882;
wire   [25:0] wpacks_1_3_V_fu_1560_p2;
reg  signed [25:0] wpacks_1_3_V_reg_2887;
wire  signed [40:0] mul_ln1352_fu_2438_p2;
reg  signed [40:0] mul_ln1352_reg_2892;
wire  signed [40:0] mul_ln1352_41_fu_2445_p2;
reg  signed [40:0] mul_ln1352_41_reg_2897;
wire   [20:0] trunc_ln700_fu_1612_p1;
reg   [20:0] trunc_ln700_reg_2902;
wire   [20:0] trunc_ln700_102_fu_1615_p1;
reg   [20:0] trunc_ln700_102_reg_2907;
wire  signed [40:0] mul_ln1352_42_fu_2452_p2;
reg  signed [40:0] mul_ln1352_42_reg_2912;
wire   [20:0] trunc_ln700_103_fu_1625_p1;
reg   [20:0] trunc_ln700_103_reg_2917;
wire  signed [40:0] mul_ln1352_43_fu_2459_p2;
reg  signed [40:0] mul_ln1352_43_reg_2922;
wire   [20:0] trunc_ln700_104_fu_1635_p1;
reg   [20:0] trunc_ln700_104_reg_2927;
wire  signed [40:0] mul_ln1352_44_fu_2466_p2;
reg  signed [40:0] mul_ln1352_44_reg_2932;
wire  signed [40:0] mul_ln1352_45_fu_2473_p2;
reg  signed [40:0] mul_ln1352_45_reg_2937;
wire   [20:0] trunc_ln700_105_fu_1644_p1;
reg   [20:0] trunc_ln700_105_reg_2942;
wire   [20:0] trunc_ln700_106_fu_1647_p1;
reg   [20:0] trunc_ln700_106_reg_2947;
wire  signed [40:0] mul_ln1352_46_fu_2480_p2;
reg  signed [40:0] mul_ln1352_46_reg_2952;
wire   [20:0] trunc_ln700_107_fu_1653_p1;
reg   [20:0] trunc_ln700_107_reg_2957;
wire  signed [40:0] mul_ln1352_47_fu_2487_p2;
reg  signed [40:0] mul_ln1352_47_reg_2962;
wire   [20:0] trunc_ln700_108_fu_1659_p1;
reg   [20:0] trunc_ln700_108_reg_2967;
wire  signed [41:0] add_ln700_fu_1668_p2;
reg  signed [41:0] add_ln700_reg_2972;
wire  signed [41:0] add_ln700_115_fu_1684_p2;
reg  signed [41:0] add_ln700_115_reg_2978;
reg   [0:0] tmp_74_reg_2984;
wire  signed [41:0] add_ln700_79_fu_1714_p2;
reg  signed [41:0] add_ln700_79_reg_2989;
wire  signed [41:0] add_ln700_123_fu_1730_p2;
reg  signed [41:0] add_ln700_123_reg_2995;
reg   [0:0] tmp_77_reg_3001;
reg   [17:0] firPartialRes0_V_0_3_6_reg_3006;
reg   [17:0] firPartialRes0_V_1_3_6_reg_3011;
reg   [17:0] firPartialRes1_0_V_s_reg_3016;
reg   [17:0] firPartialRes1_1_V_s_reg_3021;
wire   [0:0] o_clear_fu_1778_p2;
reg   [0:0] o_clear_reg_3026;
wire   [10:0] add_ln78_22_fu_1844_p2;
reg   [10:0] add_ln78_22_reg_3034;
reg   [9:0] tmp_reg_3039;
reg   [0:0] tmp_76_reg_3044;
wire  signed [17:0] add_ln398_fu_1884_p2;
reg  signed [17:0] add_ln398_reg_3049;
wire  signed [17:0] outPartialArr0_0_V_fu_1898_p2;
reg  signed [17:0] outPartialArr0_0_V_reg_3054;
wire   [10:0] add_ln78_25_fu_1965_p2;
reg   [10:0] add_ln78_25_reg_3059;
reg   [9:0] tmp_s_reg_3064;
reg   [0:0] tmp_79_reg_3069;
wire  signed [17:0] add_ln398_4_fu_2005_p2;
reg  signed [17:0] add_ln398_4_reg_3074;
wire  signed [17:0] outPartialArr0_1_V_fu_2019_p2;
reg  signed [17:0] outPartialArr0_1_V_reg_3079;
wire  signed [29:0] ret_V_fu_2494_p2;
reg  signed [29:0] ret_V_reg_3084;
wire  signed [29:0] ret_V_85_fu_2500_p2;
reg  signed [29:0] ret_V_85_reg_3090;
wire  signed [29:0] ret_V_88_fu_2506_p2;
reg  signed [29:0] ret_V_88_reg_3096;
wire  signed [29:0] ret_V_91_fu_2512_p2;
reg  signed [29:0] ret_V_91_reg_3102;
wire   [3:0] res_V_fu_2235_p3;
reg   [3:0] res_V_reg_3108;
wire   [3:0] res_V_17_fu_2297_p3;
reg   [3:0] res_V_17_reg_3113;
wire   [3:0] res_V_18_fu_2359_p3;
reg   [3:0] res_V_18_reg_3118;
wire   [3:0] res_V_19_fu_2421_p3;
reg   [3:0] res_V_19_reg_3123;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter1_state4;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
wire   [63:0] zext_ln458_fu_547_p1;
wire   [63:0] zext_ln458_6_fu_806_p1;
wire   [63:0] zext_ln404_4_fu_868_p1;
reg   [17:0] firPartialRes0_V_0_3_fu_202;
wire   [17:0] select_ln398_17_fu_2080_p3;
reg   [17:0] ap_sig_allocacmp_firPartialRes0_V_0_3_6;
reg   [17:0] firPartialRes0_V_1_3_fu_206;
wire   [17:0] select_ln398_21_fu_2123_p3;
reg   [17:0] ap_sig_allocacmp_firPartialRes0_V_1_3_6;
reg   [17:0] firPartialRes1_0_V_6_fu_210;
wire   [17:0] firPartialRes1_0_V_fu_2087_p3;
reg   [17:0] ap_sig_allocacmp_firPartialRes1_0_V_s;
reg   [17:0] firPartialRes1_1_V_6_fu_214;
wire   [17:0] firPartialRes1_1_V_fu_2130_p3;
reg   [17:0] ap_sig_allocacmp_firPartialRes1_1_V_s;
reg   [17:0] outPartialArr0_0_V_6_fu_218;
reg   [17:0] outPartialArr0_1_V_6_fu_222;
reg   [17:0] outPartialArr1_V_0_3_fu_226;
reg   [17:0] outPartialArr1_V_1_3_fu_230;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] shl_ln392_6_fu_502_p2;
wire   [31:0] shl_ln392_fu_497_p2;
wire   [31:0] add_ln392_fu_507_p2;
wire   [45:0] tmp_104_fu_513_p3;
wire   [40:0] tmp_105_fu_525_p3;
wire   [46:0] p_shl232_fu_533_p1;
wire   [46:0] p_shl_fu_521_p1;
wire   [0:0] icmp_ln395_fu_586_p2;
wire   [0:0] icmp_ln394_fu_598_p2;
wire   [5:0] select_ln393_fu_572_p3;
wire   [0:0] xor_ln393_6_fu_626_p2;
wire   [0:0] and_ln393_21_fu_592_p2;
wire   [0:0] or_ln399_fu_652_p2;
wire   [0:0] or_ln399_6_fu_658_p2;
wire   [9:0] add_ln394_6_fu_678_p2;
wire   [15:0] add_ln393_6_fu_692_p2;
wire   [10:0] shl_ln_fu_706_p3;
wire   [8:0] shl_ln404_2_fu_717_p3;
wire   [11:0] zext_ln404_fu_713_p1;
wire   [11:0] zext_ln404_3_fu_724_p1;
wire   [11:0] sub_ln404_fu_728_p2;
wire   [0:0] icmp_ln399_fu_753_p2;
wire   [10:0] shl_ln404_mid1_fu_771_p3;
wire   [8:0] shl_ln404_2_mid1_fu_782_p3;
wire   [11:0] zext_ln404_15_fu_778_p1;
wire   [11:0] zext_ln404_16_fu_789_p1;
wire   [11:0] sub_ln404_6_fu_793_p2;
wire   [11:0] select_ln393_118_fu_746_p3;
wire   [0:0] and_ln393_fu_759_p2;
wire   [4:0] select_ln393_125_fu_764_p3;
wire   [4:0] w_fu_818_p2;
wire   [0:0] icmp_ln399_9_fu_824_p2;
wire   [0:0] and_ln393_23_fu_813_p2;
wire   [0:0] icmp_ln399_2_fu_847_p2;
wire   [0:0] select_ln399_6_fu_830_p3;
wire   [11:0] select_ln393_126_fu_799_p3;
wire   [11:0] zext_ln395_fu_844_p1;
wire   [11:0] add_ln404_fu_858_p2;
wire  signed [31:0] sext_ln404_fu_864_p1;
wire   [11:0] select_ln393_119_fu_878_p3;
wire   [20:0] select_ln393_120_fu_884_p3;
wire   [20:0] add_ln1353_57_fu_928_p2;
wire   [20:0] select_ln393_121_fu_890_p3;
wire   [11:0] select_ln393_122_fu_896_p3;
wire   [21:0] select_ln393_123_fu_902_p3;
wire   [21:0] add_ln1353_58_fu_955_p2;
wire   [21:0] select_ln393_124_fu_908_p3;
wire   [3:0] trunc_ln68_fu_1046_p1;
wire   [3:0] trunc_ln68_14_fu_1058_p1;
wire   [14:0] shl_ln68_73_fu_1062_p3;
wire   [3:0] trunc_ln647_25_fu_1042_p1;
wire  signed [15:0] sext_ln68_fu_1070_p1;
wire  signed [15:0] sext_ln68_133_fu_1074_p1;
wire   [15:0] add_ln68_fu_1078_p2;
wire   [25:0] shl_ln2_fu_1050_p3;
wire  signed [25:0] sext_ln68_134_fu_1084_p1;
wire   [3:0] tmp_106_fu_1104_p4;
wire   [3:0] tmp_107_fu_1122_p4;
wire   [14:0] shl_ln68_75_fu_1132_p3;
wire   [3:0] p_Result_1_i8_i_fu_1094_p4;
wire  signed [15:0] sext_ln68_135_fu_1140_p1;
wire  signed [15:0] sext_ln68_136_fu_1144_p1;
wire   [15:0] add_ln68_47_fu_1148_p2;
wire   [25:0] shl_ln68_74_fu_1114_p3;
wire  signed [25:0] sext_ln68_137_fu_1154_p1;
wire   [3:0] tmp_108_fu_1174_p4;
wire   [3:0] tmp_109_fu_1192_p4;
wire   [14:0] shl_ln68_77_fu_1202_p3;
wire   [3:0] p_Result_2_i9_i_fu_1164_p4;
wire  signed [15:0] sext_ln68_138_fu_1210_p1;
wire  signed [15:0] sext_ln68_139_fu_1214_p1;
wire   [15:0] add_ln68_49_fu_1218_p2;
wire   [25:0] shl_ln68_76_fu_1184_p3;
wire  signed [25:0] sext_ln68_140_fu_1224_p1;
wire   [3:0] tmp_110_fu_1244_p4;
wire   [3:0] tmp_111_fu_1262_p4;
wire   [14:0] shl_ln68_79_fu_1272_p3;
wire   [3:0] p_Result_3_i10_i_fu_1234_p4;
wire  signed [15:0] sext_ln68_141_fu_1280_p1;
wire  signed [15:0] sext_ln68_142_fu_1284_p1;
wire   [15:0] add_ln68_51_fu_1288_p2;
wire   [25:0] shl_ln68_78_fu_1254_p3;
wire  signed [25:0] sext_ln68_143_fu_1294_p1;
wire   [3:0] trunc_ln68_15_fu_1308_p1;
wire   [3:0] trunc_ln68_16_fu_1320_p1;
wire   [14:0] shl_ln68_81_fu_1324_p3;
wire   [3:0] trunc_ln647_26_fu_1304_p1;
wire  signed [15:0] sext_ln68_144_fu_1332_p1;
wire  signed [15:0] sext_ln68_145_fu_1336_p1;
wire   [15:0] add_ln68_53_fu_1340_p2;
wire   [25:0] shl_ln68_80_fu_1312_p3;
wire  signed [25:0] sext_ln68_146_fu_1346_p1;
wire   [3:0] tmp_112_fu_1366_p4;
wire   [3:0] tmp_113_fu_1384_p4;
wire   [14:0] shl_ln68_s_fu_1394_p3;
wire   [3:0] p_Result_1_i25_i_fu_1356_p4;
wire  signed [15:0] sext_ln68_147_fu_1402_p1;
wire  signed [15:0] sext_ln68_148_fu_1406_p1;
wire   [15:0] add_ln68_55_fu_1410_p2;
wire   [25:0] shl_ln68_82_fu_1376_p3;
wire  signed [25:0] sext_ln68_149_fu_1416_p1;
wire   [3:0] tmp_114_fu_1436_p4;
wire   [3:0] tmp_115_fu_1454_p4;
wire   [14:0] shl_ln68_84_fu_1464_p3;
wire   [3:0] p_Result_2_i35_i_fu_1426_p4;
wire  signed [15:0] sext_ln68_150_fu_1472_p1;
wire  signed [15:0] sext_ln68_151_fu_1476_p1;
wire   [15:0] add_ln68_57_fu_1480_p2;
wire   [25:0] shl_ln68_83_fu_1446_p3;
wire  signed [25:0] sext_ln68_152_fu_1486_p1;
wire   [3:0] tmp_116_fu_1506_p4;
wire   [3:0] tmp_117_fu_1524_p4;
wire   [14:0] shl_ln68_86_fu_1534_p3;
wire   [3:0] p_Result_3_i45_i_fu_1496_p4;
wire  signed [15:0] sext_ln68_153_fu_1542_p1;
wire  signed [15:0] sext_ln68_154_fu_1546_p1;
wire   [15:0] add_ln68_59_fu_1550_p2;
wire   [25:0] shl_ln68_85_fu_1516_p3;
wire  signed [25:0] sext_ln68_155_fu_1556_p1;
wire   [14:0] ipack_0_V_fu_1566_p4;
wire   [14:0] ipack_1_V_fu_1574_p4;
wire   [14:0] ipack_2_V_fu_1582_p4;
wire   [14:0] ipack_3_V_fu_1590_p4;
wire  signed [41:0] sext_ln700_fu_1665_p1;
wire  signed [41:0] sext_ln215_51_fu_1662_p1;
wire  signed [41:0] sext_ln700_83_fu_1674_p1;
wire  signed [41:0] sext_ln700_84_fu_1681_p1;
wire   [20:0] add_ln700_119_fu_1690_p2;
wire   [20:0] add_ln700_114_fu_1677_p2;
wire   [20:0] add_ln700_120_fu_1694_p2;
wire  signed [41:0] sext_ln700_86_fu_1711_p1;
wire  signed [41:0] sext_ln215_56_fu_1708_p1;
wire  signed [41:0] sext_ln700_88_fu_1720_p1;
wire  signed [41:0] sext_ln700_89_fu_1727_p1;
wire   [20:0] add_ln700_127_fu_1736_p2;
wire   [20:0] add_ln700_122_fu_1723_p2;
wire   [20:0] add_ln700_128_fu_1740_p2;
wire  signed [42:0] sext_ln700_85_fu_1786_p1;
wire  signed [42:0] sext_ln700_82_fu_1783_p1;
wire   [41:0] add_ln700_116_fu_1789_p2;
wire   [10:0] p_Result_i_i_i_i2_s_fu_1803_p4;
wire   [10:0] zext_ln78_fu_1813_p1;
wire   [0:0] tmp_75_fu_1832_p3;
wire   [10:0] p_Result_i_i_i_i4_s_fu_1822_p4;
wire   [10:0] zext_ln78_22_fu_1840_p1;
wire   [42:0] add_ln700_75_fu_1793_p2;
wire   [10:0] trunc_ln647_27_fu_1799_p1;
wire   [10:0] add_ln78_fu_1816_p2;
wire   [17:0] select_ln398_fu_1876_p3;
wire  signed [17:0] sext_ln68_157_fu_1872_p1;
wire   [17:0] select_ln398_16_fu_1890_p3;
wire  signed [17:0] sext_ln68_156_fu_1868_p1;
wire  signed [42:0] sext_ln700_90_fu_1907_p1;
wire  signed [42:0] sext_ln700_87_fu_1904_p1;
wire   [41:0] add_ln700_124_fu_1910_p2;
wire   [10:0] p_Result_i_i_i_i2_4_fu_1924_p4;
wire   [10:0] zext_ln78_24_fu_1934_p1;
wire   [0:0] tmp_78_fu_1953_p3;
wire   [10:0] p_Result_i_i_i_i4_4_fu_1943_p4;
wire   [10:0] zext_ln78_25_fu_1961_p1;
wire   [42:0] add_ln700_81_fu_1914_p2;
wire   [10:0] trunc_ln647_28_fu_1920_p1;
wire   [10:0] add_ln78_24_fu_1937_p2;
wire   [17:0] select_ln398_19_fu_1997_p3;
wire  signed [17:0] sext_ln68_161_fu_1993_p1;
wire   [17:0] select_ln398_20_fu_2011_p3;
wire  signed [17:0] sext_ln68_160_fu_1989_p1;
wire  signed [10:0] sext_ln647_fu_2051_p1;
wire   [10:0] zext_ln78_23_fu_2054_p1;
wire   [10:0] add_ln78_23_fu_2057_p2;
wire  signed [17:0] firPartialRes0_0_V_fu_2063_p1;
wire  signed [17:0] sext_ln68_159_fu_2066_p1;
wire   [17:0] firPartialRes0_0_V_6_fu_2070_p2;
wire   [17:0] add_ln700_78_fu_2075_p2;
wire  signed [10:0] sext_ln647_12_fu_2094_p1;
wire   [10:0] zext_ln78_26_fu_2097_p1;
wire   [10:0] add_ln78_26_fu_2100_p2;
wire  signed [17:0] firPartialRes0_1_V_fu_2106_p1;
wire  signed [17:0] sext_ln68_163_fu_2109_p1;
wire   [17:0] firPartialRes0_1_V_6_fu_2113_p2;
wire   [17:0] add_ln700_84_fu_2118_p2;
wire  signed [30:0] sext_ln393_fu_2169_p1;
wire  signed [30:0] sext_ln1352_fu_2181_p1;
wire   [30:0] ret_V_94_fu_2184_p2;
wire  signed [29:0] sext_ln393_19_fu_2172_p1;
(* use_dsp48 = "no" *) wire   [29:0] ret_V_84_fu_2196_p2;
wire   [10:0] tmp_80_fu_2201_p4;
wire   [0:0] icmp_ln895_59_fu_2211_p2;
wire   [3:0] trunc_ln_fu_2217_p4;
wire   [0:0] icmp_ln895_fu_2190_p2;
wire   [3:0] select_ln192_fu_2227_p3;
wire  signed [30:0] sext_ln1352_6_fu_2243_p1;
wire   [30:0] ret_V_95_fu_2246_p2;
(* use_dsp48 = "no" *) wire   [29:0] ret_V_87_fu_2258_p2;
wire   [10:0] tmp_81_fu_2263_p4;
wire   [0:0] icmp_ln895_60_fu_2273_p2;
wire   [3:0] trunc_ln214_8_fu_2279_p4;
wire   [0:0] icmp_ln895_46_fu_2252_p2;
wire   [3:0] select_ln192_8_fu_2289_p3;
wire  signed [30:0] sext_ln393_20_fu_2175_p1;
wire  signed [30:0] sext_ln1352_7_fu_2305_p1;
wire   [30:0] ret_V_96_fu_2308_p2;
wire  signed [29:0] sext_ln393_21_fu_2178_p1;
(* use_dsp48 = "no" *) wire   [29:0] ret_V_90_fu_2320_p2;
wire   [10:0] tmp_82_fu_2325_p4;
wire   [0:0] icmp_ln895_61_fu_2335_p2;
wire   [3:0] trunc_ln214_9_fu_2341_p4;
wire   [0:0] icmp_ln895_48_fu_2314_p2;
wire   [3:0] select_ln192_9_fu_2351_p3;
wire  signed [30:0] sext_ln1352_8_fu_2367_p1;
wire   [30:0] ret_V_97_fu_2370_p2;
(* use_dsp48 = "no" *) wire   [29:0] ret_V_93_fu_2382_p2;
wire   [10:0] tmp_83_fu_2387_p4;
wire   [0:0] icmp_ln895_62_fu_2397_p2;
wire   [3:0] trunc_ln214_s_fu_2403_p4;
wire   [0:0] icmp_ln895_50_fu_2376_p2;
wire   [3:0] select_ln192_10_fu_2413_p3;
wire   [14:0] mul_ln1352_fu_2438_p1;
wire   [40:0] zext_ln215_fu_1601_p1;
wire   [14:0] mul_ln1352_41_fu_2445_p1;
wire   [40:0] zext_ln215_36_fu_1608_p1;
wire   [14:0] mul_ln1352_42_fu_2452_p1;
wire   [40:0] zext_ln215_37_fu_1621_p1;
wire   [14:0] mul_ln1352_43_fu_2459_p1;
wire   [40:0] zext_ln215_38_fu_1631_p1;
wire   [14:0] mul_ln1352_44_fu_2466_p1;
wire   [14:0] mul_ln1352_45_fu_2473_p1;
wire   [14:0] mul_ln1352_46_fu_2480_p1;
wire   [14:0] mul_ln1352_47_fu_2487_p1;
wire   [11:0] ret_V_fu_2494_p0;
wire   [29:0] zext_ln393_fu_2045_p1;
wire   [11:0] ret_V_85_fu_2500_p0;
wire   [11:0] ret_V_88_fu_2506_p0;
wire   [29:0] zext_ln393_14_fu_2048_p1;
wire   [11:0] ret_V_91_fu_2512_p0;
wire    ap_CS_fsm_state12;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
end

convDSPOpt_1_convdCI #(
    .DataWidth( 12 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_7_inc_new_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_7_inc_new_V_0_address0),
    .ce0(conv_7_inc_new_V_0_ce0),
    .q0(conv_7_inc_new_V_0_q0),
    .address1(conv_7_inc_new_V_0_address1),
    .ce1(conv_7_inc_new_V_0_ce1),
    .q1(conv_7_inc_new_V_0_q1)
);

convDSPOpt_1_convdDI #(
    .DataWidth( 21 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_7_bias_new_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_7_bias_new_V_0_address0),
    .ce0(conv_7_bias_new_V_0_ce0),
    .q0(conv_7_bias_new_V_0_q0),
    .address1(conv_7_bias_new_V_0_address1),
    .ce1(conv_7_bias_new_V_0_ce1),
    .q1(conv_7_bias_new_V_0_q1)
);

convDSPOpt_1_convdEI #(
    .DataWidth( 12 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_7_inc_new_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_7_inc_new_V_1_address0),
    .ce0(conv_7_inc_new_V_1_ce0),
    .q0(conv_7_inc_new_V_1_q0),
    .address1(conv_7_inc_new_V_1_address1),
    .ce1(conv_7_inc_new_V_1_ce1),
    .q1(conv_7_inc_new_V_1_q1)
);

convDSPOpt_1_convdFJ #(
    .DataWidth( 22 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_7_bias_new_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_7_bias_new_V_1_address0),
    .ce0(conv_7_bias_new_V_1_ce0),
    .q0(conv_7_bias_new_V_1_q0),
    .address1(conv_7_bias_new_V_1_address1),
    .ce1(conv_7_bias_new_V_1_ce1),
    .q1(conv_7_bias_new_V_1_q1)
);

convDSPOpt_1_convdGJ #(
    .DataWidth( 16 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
conv_7_w_new_V_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_7_w_new_V_0_2_address0),
    .ce0(conv_7_w_new_V_0_2_ce0),
    .q0(conv_7_w_new_V_0_2_q0)
);

convDSPOpt_1_convdHJ #(
    .DataWidth( 16 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
conv_7_w_new_V_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_7_w_new_V_0_1_address0),
    .ce0(conv_7_w_new_V_0_1_ce0),
    .q0(conv_7_w_new_V_0_1_q0)
);

convDSPOpt_1_convdIJ #(
    .DataWidth( 16 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
conv_7_w_new_V_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_7_w_new_V_0_0_address0),
    .ce0(conv_7_w_new_V_0_0_ce0),
    .q0(conv_7_w_new_V_0_0_q0)
);

convDSPOpt_1_convdJJ #(
    .DataWidth( 16 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
conv_7_w_new_V_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_7_w_new_V_1_2_address0),
    .ce0(conv_7_w_new_V_1_2_ce0),
    .q0(conv_7_w_new_V_1_2_q0)
);

convDSPOpt_1_convdKJ #(
    .DataWidth( 16 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
conv_7_w_new_V_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_7_w_new_V_1_1_address0),
    .ce0(conv_7_w_new_V_1_1_ce0),
    .q0(conv_7_w_new_V_1_1_q0)
);

convDSPOpt_1_convdLJ #(
    .DataWidth( 16 ),
    .AddressRange( 1536 ),
    .AddressWidth( 11 ))
conv_7_w_new_V_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_7_w_new_V_1_0_address0),
    .ce0(conv_7_w_new_V_1_0_ce0),
    .q0(conv_7_w_new_V_1_0_q0)
);

ultra_net_mul_mulbml #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 26 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 41 ))
ultra_net_mul_mulbml_U672(
    .din0(wpacks_0_0_V_reg_2852),
    .din1(mul_ln1352_fu_2438_p1),
    .dout(mul_ln1352_fu_2438_p2)
);

ultra_net_mul_mulbml #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 26 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 41 ))
ultra_net_mul_mulbml_U673(
    .din0(wpacks_0_1_V_reg_2857),
    .din1(mul_ln1352_41_fu_2445_p1),
    .dout(mul_ln1352_41_fu_2445_p2)
);

ultra_net_mul_mulbml #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 26 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 41 ))
ultra_net_mul_mulbml_U674(
    .din0(wpacks_0_2_V_reg_2862),
    .din1(mul_ln1352_42_fu_2452_p1),
    .dout(mul_ln1352_42_fu_2452_p2)
);

ultra_net_mul_mulbml #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 26 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 41 ))
ultra_net_mul_mulbml_U675(
    .din0(wpacks_0_3_V_reg_2867),
    .din1(mul_ln1352_43_fu_2459_p1),
    .dout(mul_ln1352_43_fu_2459_p2)
);

ultra_net_mul_mulbml #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 26 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 41 ))
ultra_net_mul_mulbml_U676(
    .din0(wpacks_1_0_V_reg_2872),
    .din1(mul_ln1352_44_fu_2466_p1),
    .dout(mul_ln1352_44_fu_2466_p2)
);

ultra_net_mul_mulbml #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 26 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 41 ))
ultra_net_mul_mulbml_U677(
    .din0(wpacks_1_1_V_reg_2877),
    .din1(mul_ln1352_45_fu_2473_p1),
    .dout(mul_ln1352_45_fu_2473_p2)
);

ultra_net_mul_mulbml #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 26 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 41 ))
ultra_net_mul_mulbml_U678(
    .din0(wpacks_1_2_V_reg_2882),
    .din1(mul_ln1352_46_fu_2480_p1),
    .dout(mul_ln1352_46_fu_2480_p2)
);

ultra_net_mul_mulbml #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 26 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 41 ))
ultra_net_mul_mulbml_U679(
    .din0(wpacks_1_3_V_reg_2887),
    .din1(mul_ln1352_47_fu_2487_p1),
    .dout(mul_ln1352_47_fu_2487_p2)
);

ultra_net_mul_muldMK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
ultra_net_mul_muldMK_U680(
    .din0(ret_V_fu_2494_p0),
    .din1(outPartialArr0_0_V_reg_3054),
    .dout(ret_V_fu_2494_p2)
);

ultra_net_mul_muldMK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
ultra_net_mul_muldMK_U681(
    .din0(ret_V_85_fu_2500_p0),
    .din1(add_ln398_reg_3049),
    .dout(ret_V_85_fu_2500_p2)
);

ultra_net_mul_muldMK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
ultra_net_mul_muldMK_U682(
    .din0(ret_V_88_fu_2506_p0),
    .din1(outPartialArr0_1_V_reg_3079),
    .dout(ret_V_88_fu_2506_p2)
);

ultra_net_mul_muldMK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 30 ))
ultra_net_mul_muldMK_U683(
    .din0(ret_V_91_fu_2512_p0),
    .din1(add_ln398_4_reg_3074),
    .dout(ret_V_91_fu_2512_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln392_fu_555_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state4)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln392_fu_555_p2 == 1'd0))) begin
        indvar_flatten145_reg_431 <= add_ln392_6_fu_560_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        indvar_flatten145_reg_431 <= 47'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln392_fu_555_p2 == 1'd0))) begin
        indvar_flatten33_reg_442 <= select_ln393_134_fu_698_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        indvar_flatten33_reg_442 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln392_fu_555_p2 == 1'd0))) begin
        indvar_flatten_reg_464 <= select_ln394_6_fu_684_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        indvar_flatten_reg_464 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln392_fu_555_p2 == 1'd0))) begin
        infoldIdx_0_i_reg_475 <= infoldIdx_fu_672_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        infoldIdx_0_i_reg_475 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln392_fu_555_p2 == 1'd0))) begin
        peIdx_0_i_reg_453 <= select_ln393_133_fu_644_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        peIdx_0_i_reg_453 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln392_reg_2603 == 1'd0))) begin
        w_0_i_reg_486 <= select_ln394_fu_837_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        w_0_i_reg_486 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln393_22_reg_2628) & (icmp_ln393_reg_2612 == 1'd0))) begin
        add_ln1353_28_reg_2718 <= add_ln1353_28_fu_740_p2;
        add_ln1353_reg_2713 <= add_ln1353_fu_734_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln392_reg_2603_pp0_iter4_reg == 1'd0))) begin
        add_ln398_4_reg_3074 <= add_ln398_4_fu_2005_p2;
        add_ln398_reg_3049 <= add_ln398_fu_1884_p2;
        add_ln78_22_reg_3034 <= add_ln78_22_fu_1844_p2;
        add_ln78_25_reg_3059 <= add_ln78_25_fu_1965_p2;
        firPartialRes0_V_0_3_6_reg_3006 <= ap_sig_allocacmp_firPartialRes0_V_0_3_6;
        firPartialRes0_V_1_3_6_reg_3011 <= ap_sig_allocacmp_firPartialRes0_V_1_3_6;
        firPartialRes1_0_V_s_reg_3016 <= ap_sig_allocacmp_firPartialRes1_0_V_s;
        firPartialRes1_1_V_s_reg_3021 <= ap_sig_allocacmp_firPartialRes1_1_V_s;
        o_clear_reg_3026 <= o_clear_fu_1778_p2;
        outPartialArr0_0_V_reg_3054 <= outPartialArr0_0_V_fu_1898_p2;
        outPartialArr0_1_V_reg_3079 <= outPartialArr0_1_V_fu_2019_p2;
        tmp_76_reg_3044 <= add_ln700_116_fu_1789_p2[32'd32];
        tmp_79_reg_3069 <= add_ln700_124_fu_1910_p2[32'd32];
        tmp_reg_3039 <= {{add_ln700_75_fu_1793_p2[42:33]}};
        tmp_s_reg_3064 <= {{add_ln700_81_fu_1914_p2[42:33]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln392_reg_2603_pp0_iter3_reg == 1'd0))) begin
        add_ln700_115_reg_2978 <= add_ln700_115_fu_1684_p2;
        add_ln700_123_reg_2995 <= add_ln700_123_fu_1730_p2;
        add_ln700_79_reg_2989 <= add_ln700_79_fu_1714_p2;
        add_ln700_reg_2972 <= add_ln700_fu_1668_p2;
        tmp_74_reg_2984 <= add_ln700_120_fu_1694_p2[32'd10];
        tmp_77_reg_3001 <= add_ln700_128_fu_1740_p2[32'd10];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln392_fu_555_p2 == 1'd0))) begin
        and_ln393_22_reg_2628 <= and_ln393_22_fu_604_p2;
        and_ln393_24_reg_2660 <= and_ln393_24_fu_638_p2;
        icmp_ln393_reg_2612 <= icmp_ln393_fu_566_p2;
        or_ln393_6_reg_2655 <= or_ln393_6_fu_632_p2;
        or_ln393_reg_2644 <= or_ln393_fu_616_p2;
        peIdx_reg_2639 <= peIdx_fu_610_p2;
        select_ln399_reg_2671 <= select_ln399_fu_664_p3;
        trunc_ln404_6_reg_2649 <= trunc_ln404_6_fu_622_p1;
        xor_ln393_reg_2623 <= xor_ln393_fu_580_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln393_22_reg_2628_pp0_iter1_reg <= and_ln393_22_reg_2628;
        icmp_ln392_reg_2603 <= icmp_ln392_fu_555_p2;
        icmp_ln392_reg_2603_pp0_iter1_reg <= icmp_ln392_reg_2603;
        icmp_ln393_reg_2612_pp0_iter1_reg <= icmp_ln393_reg_2612;
        select_ln399_reg_2671_pp0_iter1_reg <= select_ln399_reg_2671;
        trunc_ln404_reg_2577 <= trunc_ln404_fu_543_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bound46_reg_2572[46 : 10] <= bound46_fu_537_p2[46 : 10];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_7_bias_new_V_0_1_reg_2698 <= conv_7_bias_new_V_0_q0;
        conv_7_bias_new_V_1_1_reg_2708 <= conv_7_bias_new_V_1_q0;
        conv_7_inc_new_V_0_l_reg_2693 <= conv_7_inc_new_V_0_q0;
        conv_7_inc_new_V_1_l_reg_2703 <= conv_7_inc_new_V_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln392_reg_2603_pp0_iter5_reg == 1'd0))) begin
        firPartialRes0_V_0_3_fu_202 <= select_ln398_17_fu_2080_p3;
        firPartialRes0_V_1_3_fu_206 <= select_ln398_21_fu_2123_p3;
        firPartialRes1_0_V_6_fu_210 <= firPartialRes1_0_V_fu_2087_p3;
        firPartialRes1_1_V_6_fu_214 <= firPartialRes1_1_V_fu_2130_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln392_reg_2603_pp0_iter2_reg <= icmp_ln392_reg_2603_pp0_iter1_reg;
        icmp_ln392_reg_2603_pp0_iter3_reg <= icmp_ln392_reg_2603_pp0_iter2_reg;
        icmp_ln392_reg_2603_pp0_iter4_reg <= icmp_ln392_reg_2603_pp0_iter3_reg;
        icmp_ln392_reg_2603_pp0_iter5_reg <= icmp_ln392_reg_2603_pp0_iter4_reg;
        o_out_reg_2748_pp0_iter2_reg <= o_out_reg_2748;
        o_out_reg_2748_pp0_iter3_reg <= o_out_reg_2748_pp0_iter2_reg;
        o_out_reg_2748_pp0_iter4_reg <= o_out_reg_2748_pp0_iter3_reg;
        o_out_reg_2748_pp0_iter5_reg <= o_out_reg_2748_pp0_iter4_reg;
        o_out_reg_2748_pp0_iter6_reg <= o_out_reg_2748_pp0_iter5_reg;
        o_out_reg_2748_pp0_iter7_reg <= o_out_reg_2748_pp0_iter6_reg;
        select_ln393_127_reg_2782_pp0_iter3_reg <= select_ln393_127_reg_2782;
        select_ln393_127_reg_2782_pp0_iter4_reg <= select_ln393_127_reg_2782_pp0_iter3_reg;
        select_ln393_127_reg_2782_pp0_iter5_reg <= select_ln393_127_reg_2782_pp0_iter4_reg;
        select_ln393_128_reg_2787_pp0_iter3_reg <= select_ln393_128_reg_2787;
        select_ln393_128_reg_2787_pp0_iter4_reg <= select_ln393_128_reg_2787_pp0_iter3_reg;
        select_ln393_128_reg_2787_pp0_iter5_reg <= select_ln393_128_reg_2787_pp0_iter4_reg;
        select_ln393_128_reg_2787_pp0_iter6_reg <= select_ln393_128_reg_2787_pp0_iter5_reg;
        select_ln393_129_reg_2792_pp0_iter3_reg <= select_ln393_129_reg_2792;
        select_ln393_129_reg_2792_pp0_iter4_reg <= select_ln393_129_reg_2792_pp0_iter3_reg;
        select_ln393_129_reg_2792_pp0_iter5_reg <= select_ln393_129_reg_2792_pp0_iter4_reg;
        select_ln393_129_reg_2792_pp0_iter6_reg <= select_ln393_129_reg_2792_pp0_iter5_reg;
        select_ln393_130_reg_2797_pp0_iter3_reg <= select_ln393_130_reg_2797;
        select_ln393_130_reg_2797_pp0_iter4_reg <= select_ln393_130_reg_2797_pp0_iter3_reg;
        select_ln393_130_reg_2797_pp0_iter5_reg <= select_ln393_130_reg_2797_pp0_iter4_reg;
        select_ln393_131_reg_2802_pp0_iter3_reg <= select_ln393_131_reg_2802;
        select_ln393_131_reg_2802_pp0_iter4_reg <= select_ln393_131_reg_2802_pp0_iter3_reg;
        select_ln393_131_reg_2802_pp0_iter5_reg <= select_ln393_131_reg_2802_pp0_iter4_reg;
        select_ln393_131_reg_2802_pp0_iter6_reg <= select_ln393_131_reg_2802_pp0_iter5_reg;
        select_ln393_132_reg_2807_pp0_iter3_reg <= select_ln393_132_reg_2807;
        select_ln393_132_reg_2807_pp0_iter4_reg <= select_ln393_132_reg_2807_pp0_iter3_reg;
        select_ln393_132_reg_2807_pp0_iter5_reg <= select_ln393_132_reg_2807_pp0_iter4_reg;
        select_ln393_132_reg_2807_pp0_iter6_reg <= select_ln393_132_reg_2807_pp0_iter5_reg;
        select_ln399_reg_2671_pp0_iter2_reg <= select_ln399_reg_2671_pp0_iter1_reg;
        select_ln399_reg_2671_pp0_iter3_reg <= select_ln399_reg_2671_pp0_iter2_reg;
        select_ln399_reg_2671_pp0_iter4_reg <= select_ln399_reg_2671_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln392_reg_2603_pp0_iter2_reg == 1'd0))) begin
        mul_ln1352_41_reg_2897 <= mul_ln1352_41_fu_2445_p2;
        mul_ln1352_42_reg_2912 <= mul_ln1352_42_fu_2452_p2;
        mul_ln1352_43_reg_2922 <= mul_ln1352_43_fu_2459_p2;
        mul_ln1352_44_reg_2932 <= mul_ln1352_44_fu_2466_p2;
        mul_ln1352_45_reg_2937 <= mul_ln1352_45_fu_2473_p2;
        mul_ln1352_46_reg_2952 <= mul_ln1352_46_fu_2480_p2;
        mul_ln1352_47_reg_2962 <= mul_ln1352_47_fu_2487_p2;
        mul_ln1352_reg_2892 <= mul_ln1352_fu_2438_p2;
        trunc_ln700_102_reg_2907 <= trunc_ln700_102_fu_1615_p1;
        trunc_ln700_103_reg_2917 <= trunc_ln700_103_fu_1625_p1;
        trunc_ln700_104_reg_2927 <= trunc_ln700_104_fu_1635_p1;
        trunc_ln700_105_reg_2942 <= trunc_ln700_105_fu_1644_p1;
        trunc_ln700_106_reg_2947 <= trunc_ln700_106_fu_1647_p1;
        trunc_ln700_107_reg_2957 <= trunc_ln700_107_fu_1653_p1;
        trunc_ln700_108_reg_2967 <= trunc_ln700_108_fu_1659_p1;
        trunc_ln700_reg_2902 <= trunc_ln700_fu_1612_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln392_reg_2603 == 1'd0))) begin
        o_out_reg_2748 <= o_out_fu_852_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln392_reg_2603_pp0_iter4_reg == 1'd0))) begin
        outPartialArr0_0_V_6_fu_218 <= outPartialArr0_0_V_fu_1898_p2;
        outPartialArr0_1_V_6_fu_222 <= outPartialArr0_1_V_fu_2019_p2;
        outPartialArr1_V_0_3_fu_226 <= add_ln398_fu_1884_p2;
        outPartialArr1_V_1_3_fu_230 <= add_ln398_4_fu_2005_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln392_reg_2603_pp0_iter1_reg == 1'd0))) begin
        p_Result_1_i_i_reg_2822 <= {{vec_V_V_dout[7:4]}};
        p_Result_2_i_i_reg_2832 <= {{vec_V_V_dout[11:8]}};
        p_Result_3_i_i_reg_2842 <= {{vec_V_V_dout[15:12]}};
        p_Result_78_1_i_i_reg_2827 <= {{vec_V_V_dout[23:20]}};
        p_Result_78_2_i_i_reg_2837 <= {{vec_V_V_dout[27:24]}};
        p_Result_78_3_i_i_reg_2847 <= {{vec_V_V_dout[31:28]}};
        p_Result_78_i_i_reg_2817 <= {{vec_V_V_dout[19:16]}};
        select_ln393_127_reg_2782 <= select_ln393_127_fu_914_p3;
        select_ln393_128_reg_2787 <= select_ln393_128_fu_921_p3;
        select_ln393_129_reg_2792 <= select_ln393_129_fu_934_p3;
        select_ln393_130_reg_2797 <= select_ln393_130_fu_941_p3;
        select_ln393_131_reg_2802 <= select_ln393_131_fu_948_p3;
        select_ln393_132_reg_2807 <= select_ln393_132_fu_961_p3;
        trunc_ln647_reg_2812 <= trunc_ln647_fu_968_p1;
        wpacks_0_0_V_reg_2852 <= wpacks_0_0_V_fu_1088_p2;
        wpacks_0_1_V_reg_2857 <= wpacks_0_1_V_fu_1158_p2;
        wpacks_0_2_V_reg_2862 <= wpacks_0_2_V_fu_1228_p2;
        wpacks_0_3_V_reg_2867 <= wpacks_0_3_V_fu_1298_p2;
        wpacks_1_0_V_reg_2872 <= wpacks_1_0_V_fu_1350_p2;
        wpacks_1_1_V_reg_2877 <= wpacks_1_1_V_fu_1420_p2;
        wpacks_1_2_V_reg_2882 <= wpacks_1_2_V_fu_1490_p2;
        wpacks_1_3_V_reg_2887 <= wpacks_1_3_V_fu_1560_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (reps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        reps_read_reg_2566 <= reps_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (o_out_reg_2748_pp0_iter6_reg == 1'd1))) begin
        res_V_17_reg_3113 <= res_V_17_fu_2297_p3;
        res_V_18_reg_3118 <= res_V_18_fu_2359_p3;
        res_V_19_reg_3123 <= res_V_19_fu_2421_p3;
        res_V_reg_3108 <= res_V_fu_2235_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (o_out_reg_2748_pp0_iter5_reg == 1'd1))) begin
        ret_V_85_reg_3090 <= ret_V_85_fu_2500_p2;
        ret_V_88_reg_3096 <= ret_V_88_fu_2506_p2;
        ret_V_91_reg_3102 <= ret_V_91_fu_2512_p2;
        ret_V_reg_3084 <= ret_V_fu_2494_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln392_reg_2603_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_firPartialRes0_V_0_3_6 = select_ln398_17_fu_2080_p3;
    end else begin
        ap_sig_allocacmp_firPartialRes0_V_0_3_6 = firPartialRes0_V_0_3_fu_202;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln392_reg_2603_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_firPartialRes0_V_1_3_6 = select_ln398_21_fu_2123_p3;
    end else begin
        ap_sig_allocacmp_firPartialRes0_V_1_3_6 = firPartialRes0_V_1_3_fu_206;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln392_reg_2603_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_firPartialRes1_0_V_s = firPartialRes1_0_V_fu_2087_p3;
    end else begin
        ap_sig_allocacmp_firPartialRes1_0_V_s = firPartialRes1_0_V_6_fu_210;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln392_reg_2603_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_firPartialRes1_1_V_s = firPartialRes1_1_V_fu_2130_p3;
    end else begin
        ap_sig_allocacmp_firPartialRes1_1_V_s = firPartialRes1_1_V_6_fu_214;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_7_bias_new_V_0_ce0 = 1'b1;
    end else begin
        conv_7_bias_new_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_7_bias_new_V_0_ce1 = 1'b1;
    end else begin
        conv_7_bias_new_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_7_bias_new_V_1_ce0 = 1'b1;
    end else begin
        conv_7_bias_new_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_7_bias_new_V_1_ce1 = 1'b1;
    end else begin
        conv_7_bias_new_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_7_inc_new_V_0_ce0 = 1'b1;
    end else begin
        conv_7_inc_new_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_7_inc_new_V_0_ce1 = 1'b1;
    end else begin
        conv_7_inc_new_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_7_inc_new_V_1_ce0 = 1'b1;
    end else begin
        conv_7_inc_new_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_7_inc_new_V_1_ce1 = 1'b1;
    end else begin
        conv_7_inc_new_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_7_w_new_V_0_0_ce0 = 1'b1;
    end else begin
        conv_7_w_new_V_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_7_w_new_V_0_1_ce0 = 1'b1;
    end else begin
        conv_7_w_new_V_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_7_w_new_V_0_2_ce0 = 1'b1;
    end else begin
        conv_7_w_new_V_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_7_w_new_V_1_0_ce0 = 1'b1;
    end else begin
        conv_7_w_new_V_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_7_w_new_V_1_1_ce0 = 1'b1;
    end else begin
        conv_7_w_new_V_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_7_w_new_V_1_2_ce0 = 1'b1;
    end else begin
        conv_7_w_new_V_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (o_out_reg_2748_pp0_iter7_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (o_out_reg_2748_pp0_iter7_reg == 1'd1))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        reps_blk_n = reps_empty_n;
    end else begin
        reps_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (reps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        reps_read = 1'b1;
    end else begin
        reps_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln392_reg_2603_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        vec_V_V_blk_n = vec_V_V_empty_n;
    end else begin
        vec_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln392_reg_2603_pp0_iter1_reg == 1'd0))) begin
        vec_V_V_read = 1'b1;
    end else begin
        vec_V_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (reps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b0)) & ~((ap_enable_reg_pp0_iter7 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b0)) | ((ap_enable_reg_pp0_iter7 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1353_28_fu_740_p2 = (22'd16384 + conv_7_bias_new_V_1_q0);

assign add_ln1353_57_fu_928_p2 = (21'd16384 + conv_7_bias_new_V_0_q1);

assign add_ln1353_58_fu_955_p2 = (22'd16384 + conv_7_bias_new_V_1_q1);

assign add_ln1353_fu_734_p2 = (21'd16384 + conv_7_bias_new_V_0_q0);

assign add_ln392_6_fu_560_p2 = (47'd1 + indvar_flatten145_reg_431);

assign add_ln392_fu_507_p2 = (shl_ln392_6_fu_502_p2 + shl_ln392_fu_497_p2);

assign add_ln393_6_fu_692_p2 = (indvar_flatten33_reg_442 + 16'd1);

assign add_ln394_6_fu_678_p2 = (indvar_flatten_reg_464 + 10'd1);

assign add_ln398_4_fu_2005_p2 = ($signed(select_ln398_19_fu_1997_p3) + $signed(sext_ln68_161_fu_1993_p1));

assign add_ln398_fu_1884_p2 = ($signed(select_ln398_fu_1876_p3) + $signed(sext_ln68_157_fu_1872_p1));

assign add_ln404_fu_858_p2 = (select_ln393_126_fu_799_p3 + zext_ln395_fu_844_p1);

assign add_ln68_47_fu_1148_p2 = ($signed(sext_ln68_135_fu_1140_p1) + $signed(sext_ln68_136_fu_1144_p1));

assign add_ln68_49_fu_1218_p2 = ($signed(sext_ln68_138_fu_1210_p1) + $signed(sext_ln68_139_fu_1214_p1));

assign add_ln68_51_fu_1288_p2 = ($signed(sext_ln68_141_fu_1280_p1) + $signed(sext_ln68_142_fu_1284_p1));

assign add_ln68_53_fu_1340_p2 = ($signed(sext_ln68_144_fu_1332_p1) + $signed(sext_ln68_145_fu_1336_p1));

assign add_ln68_55_fu_1410_p2 = ($signed(sext_ln68_147_fu_1402_p1) + $signed(sext_ln68_148_fu_1406_p1));

assign add_ln68_57_fu_1480_p2 = ($signed(sext_ln68_150_fu_1472_p1) + $signed(sext_ln68_151_fu_1476_p1));

assign add_ln68_59_fu_1550_p2 = ($signed(sext_ln68_153_fu_1542_p1) + $signed(sext_ln68_154_fu_1546_p1));

assign add_ln68_fu_1078_p2 = ($signed(sext_ln68_fu_1070_p1) + $signed(sext_ln68_133_fu_1074_p1));

assign add_ln700_114_fu_1677_p2 = (trunc_ln700_reg_2902 + trunc_ln700_102_reg_2907);

assign add_ln700_115_fu_1684_p2 = ($signed(sext_ln700_83_fu_1674_p1) + $signed(sext_ln700_84_fu_1681_p1));

assign add_ln700_116_fu_1789_p2 = ($signed(add_ln700_reg_2972) + $signed(add_ln700_115_reg_2978));

assign add_ln700_119_fu_1690_p2 = (trunc_ln700_103_reg_2917 + trunc_ln700_104_reg_2927);

assign add_ln700_120_fu_1694_p2 = (add_ln700_119_fu_1690_p2 + add_ln700_114_fu_1677_p2);

assign add_ln700_122_fu_1723_p2 = (trunc_ln700_105_reg_2942 + trunc_ln700_106_reg_2947);

assign add_ln700_123_fu_1730_p2 = ($signed(sext_ln700_88_fu_1720_p1) + $signed(sext_ln700_89_fu_1727_p1));

assign add_ln700_124_fu_1910_p2 = ($signed(add_ln700_79_reg_2989) + $signed(add_ln700_123_reg_2995));

assign add_ln700_127_fu_1736_p2 = (trunc_ln700_107_reg_2957 + trunc_ln700_108_reg_2967);

assign add_ln700_128_fu_1740_p2 = (add_ln700_127_fu_1736_p2 + add_ln700_122_fu_1723_p2);

assign add_ln700_75_fu_1793_p2 = ($signed(sext_ln700_85_fu_1786_p1) + $signed(sext_ln700_82_fu_1783_p1));

assign add_ln700_78_fu_2075_p2 = ($signed(firPartialRes1_0_V_s_reg_3016) + $signed(sext_ln68_159_fu_2066_p1));

assign add_ln700_79_fu_1714_p2 = ($signed(sext_ln700_86_fu_1711_p1) + $signed(sext_ln215_56_fu_1708_p1));

assign add_ln700_81_fu_1914_p2 = ($signed(sext_ln700_90_fu_1907_p1) + $signed(sext_ln700_87_fu_1904_p1));

assign add_ln700_84_fu_2118_p2 = ($signed(firPartialRes1_1_V_s_reg_3021) + $signed(sext_ln68_163_fu_2109_p1));

assign add_ln700_fu_1668_p2 = ($signed(sext_ln700_fu_1665_p1) + $signed(sext_ln215_51_fu_1662_p1));

assign add_ln78_22_fu_1844_p2 = (p_Result_i_i_i_i4_s_fu_1822_p4 + zext_ln78_22_fu_1840_p1);

assign add_ln78_23_fu_2057_p2 = ($signed(sext_ln647_fu_2051_p1) + $signed(zext_ln78_23_fu_2054_p1));

assign add_ln78_24_fu_1937_p2 = (p_Result_i_i_i_i2_4_fu_1924_p4 + zext_ln78_24_fu_1934_p1);

assign add_ln78_25_fu_1965_p2 = (p_Result_i_i_i_i4_4_fu_1943_p4 + zext_ln78_25_fu_1961_p1);

assign add_ln78_26_fu_2100_p2 = ($signed(sext_ln647_12_fu_2094_p1) + $signed(zext_ln78_26_fu_2097_p1));

assign add_ln78_fu_1816_p2 = (p_Result_i_i_i_i2_s_fu_1803_p4 + zext_ln78_fu_1813_p1);

assign and_ln393_21_fu_592_p2 = (xor_ln393_fu_580_p2 & icmp_ln395_fu_586_p2);

assign and_ln393_22_fu_604_p2 = (xor_ln393_fu_580_p2 & icmp_ln394_fu_598_p2);

assign and_ln393_23_fu_813_p2 = (or_ln393_6_reg_2655 & and_ln393_fu_759_p2);

assign and_ln393_24_fu_638_p2 = (or_ln393_6_fu_632_p2 & and_ln393_21_fu_592_p2);

assign and_ln393_fu_759_p2 = (xor_ln393_reg_2623 & icmp_ln399_fu_753_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (o_out_reg_2748_pp0_iter7_reg == 1'd1)) | ((vec_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln392_reg_2603_pp0_iter1_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (o_out_reg_2748_pp0_iter7_reg == 1'd1)) | ((vec_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln392_reg_2603_pp0_iter1_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (o_out_reg_2748_pp0_iter7_reg == 1'd1)) | ((vec_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln392_reg_2603_pp0_iter1_reg == 1'd0)));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (reps_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage0_iter8 = ((out_V_V_full_n == 1'b0) & (o_out_reg_2748_pp0_iter7_reg == 1'd1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter2 = ((vec_V_V_empty_n == 1'b0) & (icmp_ln392_reg_2603_pp0_iter1_reg == 1'd0));
end

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bound46_fu_537_p2 = (p_shl232_fu_533_p1 + p_shl_fu_521_p1);

assign conv_7_bias_new_V_0_address0 = zext_ln458_fu_547_p1;

assign conv_7_bias_new_V_0_address1 = zext_ln458_6_fu_806_p1;

assign conv_7_bias_new_V_1_address0 = zext_ln458_fu_547_p1;

assign conv_7_bias_new_V_1_address1 = zext_ln458_6_fu_806_p1;

assign conv_7_inc_new_V_0_address0 = zext_ln458_fu_547_p1;

assign conv_7_inc_new_V_0_address1 = zext_ln458_6_fu_806_p1;

assign conv_7_inc_new_V_1_address0 = zext_ln458_fu_547_p1;

assign conv_7_inc_new_V_1_address1 = zext_ln458_6_fu_806_p1;

assign conv_7_w_new_V_0_0_address0 = zext_ln404_4_fu_868_p1;

assign conv_7_w_new_V_0_1_address0 = zext_ln404_4_fu_868_p1;

assign conv_7_w_new_V_0_2_address0 = zext_ln404_4_fu_868_p1;

assign conv_7_w_new_V_1_0_address0 = zext_ln404_4_fu_868_p1;

assign conv_7_w_new_V_1_1_address0 = zext_ln404_4_fu_868_p1;

assign conv_7_w_new_V_1_2_address0 = zext_ln404_4_fu_868_p1;

assign firPartialRes0_0_V_6_fu_2070_p2 = ($signed(firPartialRes0_V_0_3_6_reg_3006) + $signed(firPartialRes0_0_V_fu_2063_p1));

assign firPartialRes0_0_V_fu_2063_p1 = $signed(add_ln78_22_reg_3034);

assign firPartialRes0_1_V_6_fu_2113_p2 = ($signed(firPartialRes0_V_1_3_6_reg_3011) + $signed(firPartialRes0_1_V_fu_2106_p1));

assign firPartialRes0_1_V_fu_2106_p1 = $signed(add_ln78_25_reg_3059);

assign firPartialRes1_0_V_fu_2087_p3 = ((o_clear_reg_3026[0:0] === 1'b1) ? sext_ln68_159_fu_2066_p1 : add_ln700_78_fu_2075_p2);

assign firPartialRes1_1_V_fu_2130_p3 = ((o_clear_reg_3026[0:0] === 1'b1) ? sext_ln68_163_fu_2109_p1 : add_ln700_84_fu_2118_p2);

assign icmp_ln392_fu_555_p2 = ((indvar_flatten145_reg_431 == bound46_reg_2572) ? 1'b1 : 1'b0);

assign icmp_ln393_fu_566_p2 = ((indvar_flatten33_reg_442 == 16'd16896) ? 1'b1 : 1'b0);

assign icmp_ln394_fu_598_p2 = ((indvar_flatten_reg_464 == 10'd528) ? 1'b1 : 1'b0);

assign icmp_ln395_fu_586_p2 = ((infoldIdx_0_i_reg_475 == 6'd48) ? 1'b1 : 1'b0);

assign icmp_ln399_2_fu_847_p2 = ((select_ln399_reg_2671 == 6'd47) ? 1'b1 : 1'b0);

assign icmp_ln399_9_fu_824_p2 = ((w_fu_818_p2 != 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln399_fu_753_p2 = ((w_0_i_reg_486 != 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_46_fu_2252_p2 = (($signed(ret_V_95_fu_2246_p2) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln895_48_fu_2314_p2 = (($signed(ret_V_96_fu_2308_p2) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln895_50_fu_2376_p2 = (($signed(ret_V_97_fu_2370_p2) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln895_59_fu_2211_p2 = ((tmp_80_fu_2201_p4 != 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_60_fu_2273_p2 = ((tmp_81_fu_2263_p4 != 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_61_fu_2335_p2 = ((tmp_82_fu_2325_p4 != 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_62_fu_2397_p2 = ((tmp_83_fu_2387_p4 != 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_fu_2190_p2 = (($signed(ret_V_94_fu_2184_p2) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign infoldIdx_fu_672_p2 = (select_ln399_fu_664_p3 + 6'd1);

assign ipack_0_V_fu_1566_p4 = {{{p_Result_78_i_i_reg_2817}, {7'd0}}, {trunc_ln647_reg_2812}};

assign ipack_1_V_fu_1574_p4 = {{{p_Result_78_1_i_i_reg_2827}, {7'd0}}, {p_Result_1_i_i_reg_2822}};

assign ipack_2_V_fu_1582_p4 = {{{p_Result_78_2_i_i_reg_2837}, {7'd0}}, {p_Result_2_i_i_reg_2832}};

assign ipack_3_V_fu_1590_p4 = {{{p_Result_78_3_i_i_reg_2847}, {7'd0}}, {p_Result_3_i_i_reg_2842}};

assign mul_ln1352_41_fu_2445_p1 = zext_ln215_36_fu_1608_p1;

assign mul_ln1352_42_fu_2452_p1 = zext_ln215_37_fu_1621_p1;

assign mul_ln1352_43_fu_2459_p1 = zext_ln215_38_fu_1631_p1;

assign mul_ln1352_44_fu_2466_p1 = zext_ln215_fu_1601_p1;

assign mul_ln1352_45_fu_2473_p1 = zext_ln215_36_fu_1608_p1;

assign mul_ln1352_46_fu_2480_p1 = zext_ln215_37_fu_1621_p1;

assign mul_ln1352_47_fu_2487_p1 = zext_ln215_38_fu_1631_p1;

assign mul_ln1352_fu_2438_p1 = zext_ln215_fu_1601_p1;

assign o_clear_fu_1778_p2 = ((select_ln399_reg_2671_pp0_iter4_reg == 6'd0) ? 1'b1 : 1'b0);

assign o_out_fu_852_p2 = (select_ln399_6_fu_830_p3 & icmp_ln399_2_fu_847_p2);

assign or_ln393_6_fu_632_p2 = (xor_ln393_6_fu_626_p2 | icmp_ln393_fu_566_p2);

assign or_ln393_fu_616_p2 = (icmp_ln393_fu_566_p2 | and_ln393_22_fu_604_p2);

assign or_ln399_6_fu_658_p2 = (or_ln399_fu_652_p2 | icmp_ln393_fu_566_p2);

assign or_ln399_fu_652_p2 = (and_ln393_24_fu_638_p2 | and_ln393_22_fu_604_p2);

assign outPartialArr0_0_V_fu_1898_p2 = ($signed(select_ln398_16_fu_1890_p3) + $signed(sext_ln68_156_fu_1868_p1));

assign outPartialArr0_1_V_fu_2019_p2 = ($signed(select_ln398_20_fu_2011_p3) + $signed(sext_ln68_160_fu_1989_p1));

assign out_V_V_din = {{{{res_V_19_reg_3123}, {res_V_17_reg_3113}}, {res_V_18_reg_3118}}, {res_V_reg_3108}};

assign p_Result_1_i25_i_fu_1356_p4 = {{conv_7_w_new_V_1_2_q0[7:4]}};

assign p_Result_1_i8_i_fu_1094_p4 = {{conv_7_w_new_V_0_2_q0[7:4]}};

assign p_Result_2_i35_i_fu_1426_p4 = {{conv_7_w_new_V_1_2_q0[11:8]}};

assign p_Result_2_i9_i_fu_1164_p4 = {{conv_7_w_new_V_0_2_q0[11:8]}};

assign p_Result_3_i10_i_fu_1234_p4 = {{conv_7_w_new_V_0_2_q0[15:12]}};

assign p_Result_3_i45_i_fu_1496_p4 = {{conv_7_w_new_V_1_2_q0[15:12]}};

assign p_Result_i_i_i_i2_4_fu_1924_p4 = {{add_ln700_124_fu_1910_p2[21:11]}};

assign p_Result_i_i_i_i2_s_fu_1803_p4 = {{add_ln700_116_fu_1789_p2[21:11]}};

assign p_Result_i_i_i_i4_4_fu_1943_p4 = {{add_ln700_124_fu_1910_p2[32:22]}};

assign p_Result_i_i_i_i4_s_fu_1822_p4 = {{add_ln700_116_fu_1789_p2[32:22]}};

assign p_shl232_fu_533_p1 = tmp_105_fu_525_p3;

assign p_shl_fu_521_p1 = tmp_104_fu_513_p3;

assign peIdx_fu_610_p2 = (6'd1 + select_ln393_fu_572_p3);

assign res_V_17_fu_2297_p3 = ((icmp_ln895_46_fu_2252_p2[0:0] === 1'b1) ? select_ln192_8_fu_2289_p3 : 4'd0);

assign res_V_18_fu_2359_p3 = ((icmp_ln895_48_fu_2314_p2[0:0] === 1'b1) ? select_ln192_9_fu_2351_p3 : 4'd0);

assign res_V_19_fu_2421_p3 = ((icmp_ln895_50_fu_2376_p2[0:0] === 1'b1) ? select_ln192_10_fu_2413_p3 : 4'd0);

assign res_V_fu_2235_p3 = ((icmp_ln895_fu_2190_p2[0:0] === 1'b1) ? select_ln192_fu_2227_p3 : 4'd0);

assign ret_V_84_fu_2196_p2 = ($signed(ret_V_reg_3084) + $signed(sext_ln393_19_fu_2172_p1));

assign ret_V_85_fu_2500_p0 = zext_ln393_fu_2045_p1;

assign ret_V_87_fu_2258_p2 = ($signed(ret_V_85_reg_3090) + $signed(sext_ln393_19_fu_2172_p1));

assign ret_V_88_fu_2506_p0 = zext_ln393_14_fu_2048_p1;

assign ret_V_90_fu_2320_p2 = ($signed(ret_V_88_reg_3096) + $signed(sext_ln393_21_fu_2178_p1));

assign ret_V_91_fu_2512_p0 = zext_ln393_14_fu_2048_p1;

assign ret_V_93_fu_2382_p2 = ($signed(ret_V_91_reg_3102) + $signed(sext_ln393_21_fu_2178_p1));

assign ret_V_94_fu_2184_p2 = ($signed(sext_ln393_fu_2169_p1) + $signed(sext_ln1352_fu_2181_p1));

assign ret_V_95_fu_2246_p2 = ($signed(sext_ln393_fu_2169_p1) + $signed(sext_ln1352_6_fu_2243_p1));

assign ret_V_96_fu_2308_p2 = ($signed(sext_ln393_20_fu_2175_p1) + $signed(sext_ln1352_7_fu_2305_p1));

assign ret_V_97_fu_2370_p2 = ($signed(sext_ln393_20_fu_2175_p1) + $signed(sext_ln1352_8_fu_2367_p1));

assign ret_V_fu_2494_p0 = zext_ln393_fu_2045_p1;

assign select_ln192_10_fu_2413_p3 = ((icmp_ln895_62_fu_2397_p2[0:0] === 1'b1) ? 4'd15 : trunc_ln214_s_fu_2403_p4);

assign select_ln192_8_fu_2289_p3 = ((icmp_ln895_60_fu_2273_p2[0:0] === 1'b1) ? 4'd15 : trunc_ln214_8_fu_2279_p4);

assign select_ln192_9_fu_2351_p3 = ((icmp_ln895_61_fu_2335_p2[0:0] === 1'b1) ? 4'd15 : trunc_ln214_9_fu_2341_p4);

assign select_ln192_fu_2227_p3 = ((icmp_ln895_59_fu_2211_p2[0:0] === 1'b1) ? 4'd15 : trunc_ln_fu_2217_p4);

assign select_ln393_118_fu_746_p3 = ((icmp_ln393_reg_2612[0:0] === 1'b1) ? 12'd0 : sub_ln404_fu_728_p2);

assign select_ln393_119_fu_878_p3 = ((icmp_ln393_reg_2612_pp0_iter1_reg[0:0] === 1'b1) ? 12'd276 : conv_7_inc_new_V_0_l_reg_2693);

assign select_ln393_120_fu_884_p3 = ((icmp_ln393_reg_2612_pp0_iter1_reg[0:0] === 1'b1) ? 21'd322005 : conv_7_bias_new_V_0_1_reg_2698);

assign select_ln393_121_fu_890_p3 = ((icmp_ln393_reg_2612_pp0_iter1_reg[0:0] === 1'b1) ? 21'd338389 : add_ln1353_reg_2713);

assign select_ln393_122_fu_896_p3 = ((icmp_ln393_reg_2612_pp0_iter1_reg[0:0] === 1'b1) ? 12'd910 : conv_7_inc_new_V_1_l_reg_2703);

assign select_ln393_123_fu_902_p3 = ((icmp_ln393_reg_2612_pp0_iter1_reg[0:0] === 1'b1) ? 22'd4113913 : conv_7_bias_new_V_1_1_reg_2708);

assign select_ln393_124_fu_908_p3 = ((icmp_ln393_reg_2612_pp0_iter1_reg[0:0] === 1'b1) ? 22'd4130297 : add_ln1353_28_reg_2718);

assign select_ln393_125_fu_764_p3 = ((or_ln393_reg_2644[0:0] === 1'b1) ? 5'd0 : w_0_i_reg_486);

assign select_ln393_126_fu_799_p3 = ((and_ln393_22_reg_2628[0:0] === 1'b1) ? sub_ln404_6_fu_793_p2 : select_ln393_118_fu_746_p3);

assign select_ln393_127_fu_914_p3 = ((and_ln393_22_reg_2628_pp0_iter1_reg[0:0] === 1'b1) ? conv_7_inc_new_V_0_q1 : select_ln393_119_fu_878_p3);

assign select_ln393_128_fu_921_p3 = ((and_ln393_22_reg_2628_pp0_iter1_reg[0:0] === 1'b1) ? conv_7_bias_new_V_0_q1 : select_ln393_120_fu_884_p3);

assign select_ln393_129_fu_934_p3 = ((and_ln393_22_reg_2628_pp0_iter1_reg[0:0] === 1'b1) ? add_ln1353_57_fu_928_p2 : select_ln393_121_fu_890_p3);

assign select_ln393_130_fu_941_p3 = ((and_ln393_22_reg_2628_pp0_iter1_reg[0:0] === 1'b1) ? conv_7_inc_new_V_1_q1 : select_ln393_122_fu_896_p3);

assign select_ln393_131_fu_948_p3 = ((and_ln393_22_reg_2628_pp0_iter1_reg[0:0] === 1'b1) ? conv_7_bias_new_V_1_q1 : select_ln393_123_fu_902_p3);

assign select_ln393_132_fu_961_p3 = ((and_ln393_22_reg_2628_pp0_iter1_reg[0:0] === 1'b1) ? add_ln1353_58_fu_955_p2 : select_ln393_124_fu_908_p3);

assign select_ln393_133_fu_644_p3 = ((and_ln393_22_fu_604_p2[0:0] === 1'b1) ? peIdx_fu_610_p2 : select_ln393_fu_572_p3);

assign select_ln393_134_fu_698_p3 = ((icmp_ln393_fu_566_p2[0:0] === 1'b1) ? 16'd1 : add_ln393_6_fu_692_p2);

assign select_ln393_fu_572_p3 = ((icmp_ln393_fu_566_p2[0:0] === 1'b1) ? 6'd0 : peIdx_0_i_reg_453);

assign select_ln394_6_fu_684_p3 = ((or_ln393_fu_616_p2[0:0] === 1'b1) ? 10'd1 : add_ln394_6_fu_678_p2);

assign select_ln394_fu_837_p3 = ((and_ln393_24_reg_2660[0:0] === 1'b1) ? w_fu_818_p2 : select_ln393_125_fu_764_p3);

assign select_ln398_16_fu_1890_p3 = ((o_clear_fu_1778_p2[0:0] === 1'b1) ? ap_sig_allocacmp_firPartialRes0_V_0_3_6 : outPartialArr0_0_V_6_fu_218);

assign select_ln398_17_fu_2080_p3 = ((o_clear_reg_3026[0:0] === 1'b1) ? firPartialRes0_0_V_fu_2063_p1 : firPartialRes0_0_V_6_fu_2070_p2);

assign select_ln398_19_fu_1997_p3 = ((o_clear_fu_1778_p2[0:0] === 1'b1) ? ap_sig_allocacmp_firPartialRes1_1_V_s : outPartialArr1_V_1_3_fu_230);

assign select_ln398_20_fu_2011_p3 = ((o_clear_fu_1778_p2[0:0] === 1'b1) ? ap_sig_allocacmp_firPartialRes0_V_1_3_6 : outPartialArr0_1_V_6_fu_222);

assign select_ln398_21_fu_2123_p3 = ((o_clear_reg_3026[0:0] === 1'b1) ? firPartialRes0_1_V_fu_2106_p1 : firPartialRes0_1_V_6_fu_2113_p2);

assign select_ln398_fu_1876_p3 = ((o_clear_fu_1778_p2[0:0] === 1'b1) ? ap_sig_allocacmp_firPartialRes1_0_V_s : outPartialArr1_V_0_3_fu_226);

assign select_ln399_6_fu_830_p3 = ((and_ln393_24_reg_2660[0:0] === 1'b1) ? icmp_ln399_9_fu_824_p2 : and_ln393_23_fu_813_p2);

assign select_ln399_fu_664_p3 = ((or_ln399_6_fu_658_p2[0:0] === 1'b1) ? 6'd0 : infoldIdx_0_i_reg_475);

assign sext_ln1352_6_fu_2243_p1 = ret_V_85_reg_3090;

assign sext_ln1352_7_fu_2305_p1 = ret_V_88_reg_3096;

assign sext_ln1352_8_fu_2367_p1 = ret_V_91_reg_3102;

assign sext_ln1352_fu_2181_p1 = ret_V_reg_3084;

assign sext_ln215_51_fu_1662_p1 = mul_ln1352_reg_2892;

assign sext_ln215_56_fu_1708_p1 = mul_ln1352_44_reg_2932;

assign sext_ln393_19_fu_2172_p1 = $signed(select_ln393_129_reg_2792_pp0_iter6_reg);

assign sext_ln393_20_fu_2175_p1 = $signed(select_ln393_131_reg_2802_pp0_iter6_reg);

assign sext_ln393_21_fu_2178_p1 = $signed(select_ln393_132_reg_2807_pp0_iter6_reg);

assign sext_ln393_fu_2169_p1 = $signed(select_ln393_128_reg_2787_pp0_iter6_reg);

assign sext_ln404_fu_864_p1 = $signed(add_ln404_fu_858_p2);

assign sext_ln647_12_fu_2094_p1 = $signed(tmp_s_reg_3064);

assign sext_ln647_fu_2051_p1 = $signed(tmp_reg_3039);

assign sext_ln68_133_fu_1074_p1 = $signed(trunc_ln647_25_fu_1042_p1);

assign sext_ln68_134_fu_1084_p1 = $signed(add_ln68_fu_1078_p2);

assign sext_ln68_135_fu_1140_p1 = $signed(shl_ln68_75_fu_1132_p3);

assign sext_ln68_136_fu_1144_p1 = $signed(p_Result_1_i8_i_fu_1094_p4);

assign sext_ln68_137_fu_1154_p1 = $signed(add_ln68_47_fu_1148_p2);

assign sext_ln68_138_fu_1210_p1 = $signed(shl_ln68_77_fu_1202_p3);

assign sext_ln68_139_fu_1214_p1 = $signed(p_Result_2_i9_i_fu_1164_p4);

assign sext_ln68_140_fu_1224_p1 = $signed(add_ln68_49_fu_1218_p2);

assign sext_ln68_141_fu_1280_p1 = $signed(shl_ln68_79_fu_1272_p3);

assign sext_ln68_142_fu_1284_p1 = $signed(p_Result_3_i10_i_fu_1234_p4);

assign sext_ln68_143_fu_1294_p1 = $signed(add_ln68_51_fu_1288_p2);

assign sext_ln68_144_fu_1332_p1 = $signed(shl_ln68_81_fu_1324_p3);

assign sext_ln68_145_fu_1336_p1 = $signed(trunc_ln647_26_fu_1304_p1);

assign sext_ln68_146_fu_1346_p1 = $signed(add_ln68_53_fu_1340_p2);

assign sext_ln68_147_fu_1402_p1 = $signed(shl_ln68_s_fu_1394_p3);

assign sext_ln68_148_fu_1406_p1 = $signed(p_Result_1_i25_i_fu_1356_p4);

assign sext_ln68_149_fu_1416_p1 = $signed(add_ln68_55_fu_1410_p2);

assign sext_ln68_150_fu_1472_p1 = $signed(shl_ln68_84_fu_1464_p3);

assign sext_ln68_151_fu_1476_p1 = $signed(p_Result_2_i35_i_fu_1426_p4);

assign sext_ln68_152_fu_1486_p1 = $signed(add_ln68_57_fu_1480_p2);

assign sext_ln68_153_fu_1542_p1 = $signed(shl_ln68_86_fu_1534_p3);

assign sext_ln68_154_fu_1546_p1 = $signed(p_Result_3_i45_i_fu_1496_p4);

assign sext_ln68_155_fu_1556_p1 = $signed(add_ln68_59_fu_1550_p2);

assign sext_ln68_156_fu_1868_p1 = $signed(trunc_ln647_27_fu_1799_p1);

assign sext_ln68_157_fu_1872_p1 = $signed(add_ln78_fu_1816_p2);

assign sext_ln68_159_fu_2066_p1 = $signed(add_ln78_23_fu_2057_p2);

assign sext_ln68_160_fu_1989_p1 = $signed(trunc_ln647_28_fu_1920_p1);

assign sext_ln68_161_fu_1993_p1 = $signed(add_ln78_24_fu_1937_p2);

assign sext_ln68_163_fu_2109_p1 = $signed(add_ln78_26_fu_2100_p2);

assign sext_ln68_fu_1070_p1 = $signed(shl_ln68_73_fu_1062_p3);

assign sext_ln700_82_fu_1783_p1 = add_ln700_reg_2972;

assign sext_ln700_83_fu_1674_p1 = mul_ln1352_42_reg_2912;

assign sext_ln700_84_fu_1681_p1 = mul_ln1352_43_reg_2922;

assign sext_ln700_85_fu_1786_p1 = add_ln700_115_reg_2978;

assign sext_ln700_86_fu_1711_p1 = mul_ln1352_45_reg_2937;

assign sext_ln700_87_fu_1904_p1 = add_ln700_79_reg_2989;

assign sext_ln700_88_fu_1720_p1 = mul_ln1352_46_reg_2952;

assign sext_ln700_89_fu_1727_p1 = mul_ln1352_47_reg_2962;

assign sext_ln700_90_fu_1907_p1 = add_ln700_123_reg_2995;

assign sext_ln700_fu_1665_p1 = mul_ln1352_41_reg_2897;

assign shl_ln2_fu_1050_p3 = {{trunc_ln68_fu_1046_p1}, {22'd0}};

assign shl_ln392_6_fu_502_p2 = reps_read_reg_2566 << 32'd1;

assign shl_ln392_fu_497_p2 = reps_read_reg_2566 << 32'd3;

assign shl_ln404_2_fu_717_p3 = {{trunc_ln404_reg_2577}, {4'd0}};

assign shl_ln404_2_mid1_fu_782_p3 = {{trunc_ln404_6_reg_2649}, {4'd0}};

assign shl_ln404_mid1_fu_771_p3 = {{trunc_ln404_6_reg_2649}, {6'd0}};

assign shl_ln68_73_fu_1062_p3 = {{trunc_ln68_14_fu_1058_p1}, {11'd0}};

assign shl_ln68_74_fu_1114_p3 = {{tmp_106_fu_1104_p4}, {22'd0}};

assign shl_ln68_75_fu_1132_p3 = {{tmp_107_fu_1122_p4}, {11'd0}};

assign shl_ln68_76_fu_1184_p3 = {{tmp_108_fu_1174_p4}, {22'd0}};

assign shl_ln68_77_fu_1202_p3 = {{tmp_109_fu_1192_p4}, {11'd0}};

assign shl_ln68_78_fu_1254_p3 = {{tmp_110_fu_1244_p4}, {22'd0}};

assign shl_ln68_79_fu_1272_p3 = {{tmp_111_fu_1262_p4}, {11'd0}};

assign shl_ln68_80_fu_1312_p3 = {{trunc_ln68_15_fu_1308_p1}, {22'd0}};

assign shl_ln68_81_fu_1324_p3 = {{trunc_ln68_16_fu_1320_p1}, {11'd0}};

assign shl_ln68_82_fu_1376_p3 = {{tmp_112_fu_1366_p4}, {22'd0}};

assign shl_ln68_83_fu_1446_p3 = {{tmp_114_fu_1436_p4}, {22'd0}};

assign shl_ln68_84_fu_1464_p3 = {{tmp_115_fu_1454_p4}, {11'd0}};

assign shl_ln68_85_fu_1516_p3 = {{tmp_116_fu_1506_p4}, {22'd0}};

assign shl_ln68_86_fu_1534_p3 = {{tmp_117_fu_1524_p4}, {11'd0}};

assign shl_ln68_s_fu_1394_p3 = {{tmp_113_fu_1384_p4}, {11'd0}};

assign shl_ln_fu_706_p3 = {{trunc_ln404_reg_2577}, {6'd0}};

assign sub_ln404_6_fu_793_p2 = (zext_ln404_15_fu_778_p1 - zext_ln404_16_fu_789_p1);

assign sub_ln404_fu_728_p2 = (zext_ln404_fu_713_p1 - zext_ln404_3_fu_724_p1);

assign tmp_104_fu_513_p3 = {{add_ln392_fu_507_p2}, {14'd0}};

assign tmp_105_fu_525_p3 = {{add_ln392_fu_507_p2}, {9'd0}};

assign tmp_106_fu_1104_p4 = {{conv_7_w_new_V_0_0_q0[7:4]}};

assign tmp_107_fu_1122_p4 = {{conv_7_w_new_V_0_1_q0[7:4]}};

assign tmp_108_fu_1174_p4 = {{conv_7_w_new_V_0_0_q0[11:8]}};

assign tmp_109_fu_1192_p4 = {{conv_7_w_new_V_0_1_q0[11:8]}};

assign tmp_110_fu_1244_p4 = {{conv_7_w_new_V_0_0_q0[15:12]}};

assign tmp_111_fu_1262_p4 = {{conv_7_w_new_V_0_1_q0[15:12]}};

assign tmp_112_fu_1366_p4 = {{conv_7_w_new_V_1_0_q0[7:4]}};

assign tmp_113_fu_1384_p4 = {{conv_7_w_new_V_1_1_q0[7:4]}};

assign tmp_114_fu_1436_p4 = {{conv_7_w_new_V_1_0_q0[11:8]}};

assign tmp_115_fu_1454_p4 = {{conv_7_w_new_V_1_1_q0[11:8]}};

assign tmp_116_fu_1506_p4 = {{conv_7_w_new_V_1_0_q0[15:12]}};

assign tmp_117_fu_1524_p4 = {{conv_7_w_new_V_1_1_q0[15:12]}};

assign tmp_75_fu_1832_p3 = add_ln700_116_fu_1789_p2[32'd21];

assign tmp_78_fu_1953_p3 = add_ln700_124_fu_1910_p2[32'd21];

assign tmp_80_fu_2201_p4 = {{ret_V_84_fu_2196_p2[29:19]}};

assign tmp_81_fu_2263_p4 = {{ret_V_87_fu_2258_p2[29:19]}};

assign tmp_82_fu_2325_p4 = {{ret_V_90_fu_2320_p2[29:19]}};

assign tmp_83_fu_2387_p4 = {{ret_V_93_fu_2382_p2[29:19]}};

assign trunc_ln214_8_fu_2279_p4 = {{ret_V_87_fu_2258_p2[18:15]}};

assign trunc_ln214_9_fu_2341_p4 = {{ret_V_90_fu_2320_p2[18:15]}};

assign trunc_ln214_s_fu_2403_p4 = {{ret_V_93_fu_2382_p2[18:15]}};

assign trunc_ln404_6_fu_622_p1 = peIdx_fu_610_p2[4:0];

assign trunc_ln404_fu_543_p1 = peIdx_0_i_reg_453[4:0];

assign trunc_ln647_25_fu_1042_p1 = conv_7_w_new_V_0_2_q0[3:0];

assign trunc_ln647_26_fu_1304_p1 = conv_7_w_new_V_1_2_q0[3:0];

assign trunc_ln647_27_fu_1799_p1 = add_ln700_116_fu_1789_p2[10:0];

assign trunc_ln647_28_fu_1920_p1 = add_ln700_124_fu_1910_p2[10:0];

assign trunc_ln647_fu_968_p1 = vec_V_V_dout[3:0];

assign trunc_ln68_14_fu_1058_p1 = conv_7_w_new_V_0_1_q0[3:0];

assign trunc_ln68_15_fu_1308_p1 = conv_7_w_new_V_1_0_q0[3:0];

assign trunc_ln68_16_fu_1320_p1 = conv_7_w_new_V_1_1_q0[3:0];

assign trunc_ln68_fu_1046_p1 = conv_7_w_new_V_0_0_q0[3:0];

assign trunc_ln700_102_fu_1615_p1 = mul_ln1352_41_fu_2445_p2[20:0];

assign trunc_ln700_103_fu_1625_p1 = mul_ln1352_42_fu_2452_p2[20:0];

assign trunc_ln700_104_fu_1635_p1 = mul_ln1352_43_fu_2459_p2[20:0];

assign trunc_ln700_105_fu_1644_p1 = mul_ln1352_44_fu_2466_p2[20:0];

assign trunc_ln700_106_fu_1647_p1 = mul_ln1352_45_fu_2473_p2[20:0];

assign trunc_ln700_107_fu_1653_p1 = mul_ln1352_46_fu_2480_p2[20:0];

assign trunc_ln700_108_fu_1659_p1 = mul_ln1352_47_fu_2487_p2[20:0];

assign trunc_ln700_fu_1612_p1 = mul_ln1352_fu_2438_p2[20:0];

assign trunc_ln_fu_2217_p4 = {{ret_V_84_fu_2196_p2[18:15]}};

assign w_fu_818_p2 = (5'd2 + select_ln393_125_fu_764_p3);

assign wpacks_0_0_V_fu_1088_p2 = ($signed(shl_ln2_fu_1050_p3) + $signed(sext_ln68_134_fu_1084_p1));

assign wpacks_0_1_V_fu_1158_p2 = ($signed(shl_ln68_74_fu_1114_p3) + $signed(sext_ln68_137_fu_1154_p1));

assign wpacks_0_2_V_fu_1228_p2 = ($signed(shl_ln68_76_fu_1184_p3) + $signed(sext_ln68_140_fu_1224_p1));

assign wpacks_0_3_V_fu_1298_p2 = ($signed(shl_ln68_78_fu_1254_p3) + $signed(sext_ln68_143_fu_1294_p1));

assign wpacks_1_0_V_fu_1350_p2 = ($signed(shl_ln68_80_fu_1312_p3) + $signed(sext_ln68_146_fu_1346_p1));

assign wpacks_1_1_V_fu_1420_p2 = ($signed(shl_ln68_82_fu_1376_p3) + $signed(sext_ln68_149_fu_1416_p1));

assign wpacks_1_2_V_fu_1490_p2 = ($signed(shl_ln68_83_fu_1446_p3) + $signed(sext_ln68_152_fu_1486_p1));

assign wpacks_1_3_V_fu_1560_p2 = ($signed(shl_ln68_85_fu_1516_p3) + $signed(sext_ln68_155_fu_1556_p1));

assign xor_ln393_6_fu_626_p2 = (icmp_ln394_fu_598_p2 ^ 1'd1);

assign xor_ln393_fu_580_p2 = (icmp_ln393_fu_566_p2 ^ 1'd1);

assign zext_ln215_36_fu_1608_p1 = ipack_1_V_fu_1574_p4;

assign zext_ln215_37_fu_1621_p1 = ipack_2_V_fu_1582_p4;

assign zext_ln215_38_fu_1631_p1 = ipack_3_V_fu_1590_p4;

assign zext_ln215_fu_1601_p1 = ipack_0_V_fu_1566_p4;

assign zext_ln393_14_fu_2048_p1 = select_ln393_130_reg_2797_pp0_iter5_reg;

assign zext_ln393_fu_2045_p1 = select_ln393_127_reg_2782_pp0_iter5_reg;

assign zext_ln395_fu_844_p1 = select_ln399_reg_2671;

assign zext_ln404_15_fu_778_p1 = shl_ln404_mid1_fu_771_p3;

assign zext_ln404_16_fu_789_p1 = shl_ln404_2_mid1_fu_782_p3;

assign zext_ln404_3_fu_724_p1 = shl_ln404_2_fu_717_p3;

assign zext_ln404_4_fu_868_p1 = $unsigned(sext_ln404_fu_864_p1);

assign zext_ln404_fu_713_p1 = shl_ln_fu_706_p3;

assign zext_ln458_6_fu_806_p1 = peIdx_reg_2639;

assign zext_ln458_fu_547_p1 = peIdx_0_i_reg_453;

assign zext_ln78_22_fu_1840_p1 = tmp_75_fu_1832_p3;

assign zext_ln78_23_fu_2054_p1 = tmp_76_reg_3044;

assign zext_ln78_24_fu_1934_p1 = tmp_77_reg_3001;

assign zext_ln78_25_fu_1961_p1 = tmp_78_fu_1953_p3;

assign zext_ln78_26_fu_2097_p1 = tmp_79_reg_3069;

assign zext_ln78_fu_1813_p1 = tmp_74_reg_2984;

always @ (posedge ap_clk) begin
    bound46_reg_2572[9:0] <= 10'b0000000000;
end

endmodule //convDSPOpt_1
