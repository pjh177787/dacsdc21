// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module resize (
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [23:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [23:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    stream_to_mat_U0_ap_start;
wire    stream_to_mat_U0_ap_done;
wire    stream_to_mat_U0_ap_continue;
wire    stream_to_mat_U0_ap_idle;
wire    stream_to_mat_U0_ap_ready;
wire    stream_to_mat_U0_start_out;
wire    stream_to_mat_U0_start_write;
wire    stream_to_mat_U0_in_V_V_read;
wire   [7:0] stream_to_mat_U0_raw_img_data_stream_0_V_din;
wire    stream_to_mat_U0_raw_img_data_stream_0_V_write;
wire   [7:0] stream_to_mat_U0_raw_img_data_stream_1_V_din;
wire    stream_to_mat_U0_raw_img_data_stream_1_V_write;
wire   [7:0] stream_to_mat_U0_raw_img_data_stream_2_V_din;
wire    stream_to_mat_U0_raw_img_data_stream_2_V_write;
wire    Resize_opr_linear_U0_ap_start;
wire    Resize_opr_linear_U0_ap_done;
wire    Resize_opr_linear_U0_ap_continue;
wire    Resize_opr_linear_U0_ap_idle;
wire    Resize_opr_linear_U0_ap_ready;
wire    Resize_opr_linear_U0_start_out;
wire    Resize_opr_linear_U0_start_write;
wire    Resize_opr_linear_U0_p_src_data_stream_0_V_read;
wire    Resize_opr_linear_U0_p_src_data_stream_1_V_read;
wire    Resize_opr_linear_U0_p_src_data_stream_2_V_read;
wire   [7:0] Resize_opr_linear_U0_p_dst_data_stream_0_V_din;
wire    Resize_opr_linear_U0_p_dst_data_stream_0_V_write;
wire   [7:0] Resize_opr_linear_U0_p_dst_data_stream_1_V_din;
wire    Resize_opr_linear_U0_p_dst_data_stream_1_V_write;
wire   [7:0] Resize_opr_linear_U0_p_dst_data_stream_2_V_din;
wire    Resize_opr_linear_U0_p_dst_data_stream_2_V_write;
wire    mat_to_stream_U0_ap_start;
wire    mat_to_stream_U0_ap_done;
wire    mat_to_stream_U0_ap_continue;
wire    mat_to_stream_U0_ap_idle;
wire    mat_to_stream_U0_ap_ready;
wire    mat_to_stream_U0_resize_img_data_stream_0_V_read;
wire    mat_to_stream_U0_resize_img_data_stream_1_V_read;
wire    mat_to_stream_U0_resize_img_data_stream_2_V_read;
wire   [23:0] mat_to_stream_U0_out_V_V_din;
wire    mat_to_stream_U0_out_V_V_write;
wire    ap_sync_continue;
wire    raw_img_data_stream_s_full_n;
wire   [7:0] raw_img_data_stream_s_dout;
wire    raw_img_data_stream_s_empty_n;
wire    raw_img_data_stream_1_full_n;
wire   [7:0] raw_img_data_stream_1_dout;
wire    raw_img_data_stream_1_empty_n;
wire    raw_img_data_stream_2_full_n;
wire   [7:0] raw_img_data_stream_2_dout;
wire    raw_img_data_stream_2_empty_n;
wire    resize_img_data_stre_full_n;
wire   [7:0] resize_img_data_stre_dout;
wire    resize_img_data_stre_empty_n;
wire    resize_img_data_stre_1_full_n;
wire   [7:0] resize_img_data_stre_1_dout;
wire    resize_img_data_stre_1_empty_n;
wire    resize_img_data_stre_2_full_n;
wire   [7:0] resize_img_data_stre_2_dout;
wire    resize_img_data_stre_2_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire   [0:0] start_for_Resize_opr_linear_U0_din;
wire    start_for_Resize_opr_linear_U0_full_n;
wire   [0:0] start_for_Resize_opr_linear_U0_dout;
wire    start_for_Resize_opr_linear_U0_empty_n;
wire   [0:0] start_for_mat_to_stream_U0_din;
wire    start_for_mat_to_stream_U0_full_n;
wire   [0:0] start_for_mat_to_stream_U0_dout;
wire    start_for_mat_to_stream_U0_empty_n;
wire    mat_to_stream_U0_start_full_n;
wire    mat_to_stream_U0_start_write;

stream_to_mat stream_to_mat_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(stream_to_mat_U0_ap_start),
    .start_full_n(start_for_Resize_opr_linear_U0_full_n),
    .ap_done(stream_to_mat_U0_ap_done),
    .ap_continue(stream_to_mat_U0_ap_continue),
    .ap_idle(stream_to_mat_U0_ap_idle),
    .ap_ready(stream_to_mat_U0_ap_ready),
    .start_out(stream_to_mat_U0_start_out),
    .start_write(stream_to_mat_U0_start_write),
    .in_V_V_dout(in_V_V_dout),
    .in_V_V_empty_n(in_V_V_empty_n),
    .in_V_V_read(stream_to_mat_U0_in_V_V_read),
    .raw_img_data_stream_0_V_din(stream_to_mat_U0_raw_img_data_stream_0_V_din),
    .raw_img_data_stream_0_V_full_n(raw_img_data_stream_s_full_n),
    .raw_img_data_stream_0_V_write(stream_to_mat_U0_raw_img_data_stream_0_V_write),
    .raw_img_data_stream_1_V_din(stream_to_mat_U0_raw_img_data_stream_1_V_din),
    .raw_img_data_stream_1_V_full_n(raw_img_data_stream_1_full_n),
    .raw_img_data_stream_1_V_write(stream_to_mat_U0_raw_img_data_stream_1_V_write),
    .raw_img_data_stream_2_V_din(stream_to_mat_U0_raw_img_data_stream_2_V_din),
    .raw_img_data_stream_2_V_full_n(raw_img_data_stream_2_full_n),
    .raw_img_data_stream_2_V_write(stream_to_mat_U0_raw_img_data_stream_2_V_write)
);

Resize_opr_linear Resize_opr_linear_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Resize_opr_linear_U0_ap_start),
    .start_full_n(start_for_mat_to_stream_U0_full_n),
    .ap_done(Resize_opr_linear_U0_ap_done),
    .ap_continue(Resize_opr_linear_U0_ap_continue),
    .ap_idle(Resize_opr_linear_U0_ap_idle),
    .ap_ready(Resize_opr_linear_U0_ap_ready),
    .start_out(Resize_opr_linear_U0_start_out),
    .start_write(Resize_opr_linear_U0_start_write),
    .p_src_data_stream_0_V_dout(raw_img_data_stream_s_dout),
    .p_src_data_stream_0_V_empty_n(raw_img_data_stream_s_empty_n),
    .p_src_data_stream_0_V_read(Resize_opr_linear_U0_p_src_data_stream_0_V_read),
    .p_src_data_stream_1_V_dout(raw_img_data_stream_1_dout),
    .p_src_data_stream_1_V_empty_n(raw_img_data_stream_1_empty_n),
    .p_src_data_stream_1_V_read(Resize_opr_linear_U0_p_src_data_stream_1_V_read),
    .p_src_data_stream_2_V_dout(raw_img_data_stream_2_dout),
    .p_src_data_stream_2_V_empty_n(raw_img_data_stream_2_empty_n),
    .p_src_data_stream_2_V_read(Resize_opr_linear_U0_p_src_data_stream_2_V_read),
    .p_dst_data_stream_0_V_din(Resize_opr_linear_U0_p_dst_data_stream_0_V_din),
    .p_dst_data_stream_0_V_full_n(resize_img_data_stre_full_n),
    .p_dst_data_stream_0_V_write(Resize_opr_linear_U0_p_dst_data_stream_0_V_write),
    .p_dst_data_stream_1_V_din(Resize_opr_linear_U0_p_dst_data_stream_1_V_din),
    .p_dst_data_stream_1_V_full_n(resize_img_data_stre_1_full_n),
    .p_dst_data_stream_1_V_write(Resize_opr_linear_U0_p_dst_data_stream_1_V_write),
    .p_dst_data_stream_2_V_din(Resize_opr_linear_U0_p_dst_data_stream_2_V_din),
    .p_dst_data_stream_2_V_full_n(resize_img_data_stre_2_full_n),
    .p_dst_data_stream_2_V_write(Resize_opr_linear_U0_p_dst_data_stream_2_V_write)
);

mat_to_stream mat_to_stream_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(mat_to_stream_U0_ap_start),
    .ap_done(mat_to_stream_U0_ap_done),
    .ap_continue(mat_to_stream_U0_ap_continue),
    .ap_idle(mat_to_stream_U0_ap_idle),
    .ap_ready(mat_to_stream_U0_ap_ready),
    .resize_img_data_stream_0_V_dout(resize_img_data_stre_dout),
    .resize_img_data_stream_0_V_empty_n(resize_img_data_stre_empty_n),
    .resize_img_data_stream_0_V_read(mat_to_stream_U0_resize_img_data_stream_0_V_read),
    .resize_img_data_stream_1_V_dout(resize_img_data_stre_1_dout),
    .resize_img_data_stream_1_V_empty_n(resize_img_data_stre_1_empty_n),
    .resize_img_data_stream_1_V_read(mat_to_stream_U0_resize_img_data_stream_1_V_read),
    .resize_img_data_stream_2_V_dout(resize_img_data_stre_2_dout),
    .resize_img_data_stream_2_V_empty_n(resize_img_data_stre_2_empty_n),
    .resize_img_data_stream_2_V_read(mat_to_stream_U0_resize_img_data_stream_2_V_read),
    .out_V_V_din(mat_to_stream_U0_out_V_V_din),
    .out_V_V_full_n(out_V_V_full_n),
    .out_V_V_write(mat_to_stream_U0_out_V_V_write)
);

fifo_w8_d1024_A raw_img_data_stream_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(stream_to_mat_U0_raw_img_data_stream_0_V_din),
    .if_full_n(raw_img_data_stream_s_full_n),
    .if_write(stream_to_mat_U0_raw_img_data_stream_0_V_write),
    .if_dout(raw_img_data_stream_s_dout),
    .if_empty_n(raw_img_data_stream_s_empty_n),
    .if_read(Resize_opr_linear_U0_p_src_data_stream_0_V_read)
);

fifo_w8_d1024_A raw_img_data_stream_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(stream_to_mat_U0_raw_img_data_stream_1_V_din),
    .if_full_n(raw_img_data_stream_1_full_n),
    .if_write(stream_to_mat_U0_raw_img_data_stream_1_V_write),
    .if_dout(raw_img_data_stream_1_dout),
    .if_empty_n(raw_img_data_stream_1_empty_n),
    .if_read(Resize_opr_linear_U0_p_src_data_stream_1_V_read)
);

fifo_w8_d1024_A raw_img_data_stream_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(stream_to_mat_U0_raw_img_data_stream_2_V_din),
    .if_full_n(raw_img_data_stream_2_full_n),
    .if_write(stream_to_mat_U0_raw_img_data_stream_2_V_write),
    .if_dout(raw_img_data_stream_2_dout),
    .if_empty_n(raw_img_data_stream_2_empty_n),
    .if_read(Resize_opr_linear_U0_p_src_data_stream_2_V_read)
);

fifo_w8_d1024_A resize_img_data_stre_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Resize_opr_linear_U0_p_dst_data_stream_0_V_din),
    .if_full_n(resize_img_data_stre_full_n),
    .if_write(Resize_opr_linear_U0_p_dst_data_stream_0_V_write),
    .if_dout(resize_img_data_stre_dout),
    .if_empty_n(resize_img_data_stre_empty_n),
    .if_read(mat_to_stream_U0_resize_img_data_stream_0_V_read)
);

fifo_w8_d1024_A resize_img_data_stre_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Resize_opr_linear_U0_p_dst_data_stream_1_V_din),
    .if_full_n(resize_img_data_stre_1_full_n),
    .if_write(Resize_opr_linear_U0_p_dst_data_stream_1_V_write),
    .if_dout(resize_img_data_stre_1_dout),
    .if_empty_n(resize_img_data_stre_1_empty_n),
    .if_read(mat_to_stream_U0_resize_img_data_stream_1_V_read)
);

fifo_w8_d1024_A resize_img_data_stre_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Resize_opr_linear_U0_p_dst_data_stream_2_V_din),
    .if_full_n(resize_img_data_stre_2_full_n),
    .if_write(Resize_opr_linear_U0_p_dst_data_stream_2_V_write),
    .if_dout(resize_img_data_stre_2_dout),
    .if_empty_n(resize_img_data_stre_2_empty_n),
    .if_read(mat_to_stream_U0_resize_img_data_stream_2_V_read)
);

start_for_Resize_mb6 start_for_Resize_mb6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Resize_opr_linear_U0_din),
    .if_full_n(start_for_Resize_opr_linear_U0_full_n),
    .if_write(stream_to_mat_U0_start_write),
    .if_dout(start_for_Resize_opr_linear_U0_dout),
    .if_empty_n(start_for_Resize_opr_linear_U0_empty_n),
    .if_read(Resize_opr_linear_U0_ap_ready)
);

start_for_mat_to_ncg start_for_mat_to_ncg_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_mat_to_stream_U0_din),
    .if_full_n(start_for_mat_to_stream_U0_full_n),
    .if_write(Resize_opr_linear_U0_start_write),
    .if_dout(start_for_mat_to_stream_U0_dout),
    .if_empty_n(start_for_mat_to_stream_U0_empty_n),
    .if_read(mat_to_stream_U0_ap_ready)
);

assign Resize_opr_linear_U0_ap_continue = 1'b1;

assign Resize_opr_linear_U0_ap_start = start_for_Resize_opr_linear_U0_empty_n;

assign ap_done = mat_to_stream_U0_ap_done;

assign ap_idle = (stream_to_mat_U0_ap_idle & mat_to_stream_U0_ap_idle & Resize_opr_linear_U0_ap_idle);

assign ap_ready = stream_to_mat_U0_ap_ready;

assign ap_sync_continue = ap_continue;

assign ap_sync_done = mat_to_stream_U0_ap_done;

assign ap_sync_ready = stream_to_mat_U0_ap_ready;

assign in_V_V_read = stream_to_mat_U0_in_V_V_read;

assign mat_to_stream_U0_ap_continue = ap_continue;

assign mat_to_stream_U0_ap_start = start_for_mat_to_stream_U0_empty_n;

assign mat_to_stream_U0_start_full_n = 1'b1;

assign mat_to_stream_U0_start_write = 1'b0;

assign out_V_V_din = mat_to_stream_U0_out_V_V_din;

assign out_V_V_write = mat_to_stream_U0_out_V_V_write;

assign start_for_Resize_opr_linear_U0_din = 1'b1;

assign start_for_mat_to_stream_U0_din = 1'b1;

assign stream_to_mat_U0_ap_continue = 1'b1;

assign stream_to_mat_U0_ap_start = ap_start;

endmodule //resize
