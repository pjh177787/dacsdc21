# This script segment is generated automatically by AutoPilot

set id 735
set name ultra_net_mul_14ndVL
set corename simcore_mul
set op mul
set stage_num 2
set max_latency -1
set registered_input 1
set clk_width 1
set clk_signed 0
set reset_width 1
set reset_signed 0
set in0_width 14
set in0_signed 0
set in1_width 32
set in1_signed 0
set ce_width 1
set ce_signed 0
set out_width 45
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mul] == "ap_gen_simcore_mul"} {
eval "ap_gen_simcore_mul { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_mul, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op mul
set corename MulnS
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_multicycle_mul] == "::AESL_LIB_VIRTEX::xil_gen_multicycle_mul"} {
eval "::AESL_LIB_VIRTEX::xil_gen_multicycle_mul { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    clk_width ${clk_width} \
    clk_signed ${clk_signed} \
    reset_width ${reset_width} \
    reset_signed ${reset_signed} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    ce_width ${ce_width} \
    ce_signed ${ce_signed} \
    out_width ${out_width} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_multicycle_mul, check your platform lib"
}
}


# Memory (RAM/ROM)  definition:
set ID 737
set hasByteEnable 0
set MemName conv1x1DSP2_conv_dRK
set CoreName ap_simcore_mem
set PortList { 1 1 }
set DataWd 13
set AddrRange 18
set AddrWd 5
set TrueReset 0
set IsROM 1
set ROMData { "0000011011101" "1101110011110" "0101110111111" "0000011011110" "1101110011110" "0101111000011" "0000011011110" "1101110011101" "0101111000010" "0000011011111" "1101110011101" "0101111000101" "0000011011110" "1101110011101" "0101111000101" "0000011011110" "1101110011101" "0101111000100" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 1.352
set ClkPeriod 4
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 738
set hasByteEnable 0
set MemName conv1x1DSP2_conv_dSL
set CoreName ap_simcore_mem
set PortList { 1 1 }
set DataWd 10
set AddrRange 18
set AddrWd 5
set TrueReset 0
set IsROM 1
set ROMData { "1101100110" "0111110010" "0001101011" "1101100110" "0111110010" "0010011111" "1101100110" "0111110010" "0010101001" "1101100110" "0111110010" "0001101100" "1101100111" "0111110001" "0010110010" "1101100110" "0111110010" "0000110111" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 1.352
set ClkPeriod 4
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 739
set hasByteEnable 0
set MemName conv1x1DSP2_conv_dTL
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 32
set AddrRange 288
set AddrWd 9
set TrueReset 0
set IsROM 1
set ROMData { "10011000000000010000011100000001" "00101001000000011111010100000001" "00000011000101011111111101001100" "00000000111111100000000111111100" "11111110111111010001101010010101" "00000010000011000000000011110000" "10010101000000001011100100100010" "11100011011111010000000111111111" "00000010111111101111101000000000" "11110110000000110110011100000001" "11111111111110101111111100000011" "11110001000000011111111011111101" "11111100111111100000001000000000" "01011110101110101111110011111101" "10000011000000001111111101101010" "00000011000000100000000000000010" "00000001111111111111111100100001" "11011111001001101100010000000000" "00000001000011010001001011111011" "00000001000101010000000000110000" "11100010000010111111011011111011" "11100011111011001100111100000100" "11110100000011010000100000000000" "00001011000001101111111000000011" "00000000000000110010000011111111" "01011011111100101111111000000000" "11111111111100010000001000000011" "00000000110010110010111100000110" "00000001000010000010011100000000" "00001010111101110000000100011100" "00001000000000001101110011110100" "11110100001000110000000111111101" "10000010100010001000001011110110" "10110100111110111100010110000010" "10000010011001001100101111011010" "10000001110101011000000111110010" "10001111001000000010111010001000" "11110100101000101110001110001101" "00011011111111000100011010000001" "11011010101001001000010010000001" "10000001100000011111010010000001" "10110111111110011000000110000010" "10000001111000001000000100011011" "10001000001111101101010111100000" "10000001100010111110100011101100" "00110110110111111000010000000110" "11101011100000101101011011111010" "00000000000110111000010110000100" "10011000000000010000011100000001" "00101001000000011111010100000001" "00000011000101011111111101001100" "00000000111111100000000111111100" "11111110111111010001101010010101" "00000010000011000000000011110000" "10010101000000001011100100100010" "11100011011111010000000111111111" "00000010111111101111101000000000" "11110110000000110110011100000001" "11111111111110101111111100000011" "11110001000000011111111011111101" "11111100111111100000001000000000" "01011110101110101111110011111101" "10000011000000001111111101101010" "00000011000000100000000000000010" "00000001111111111111111100100001" "11011110001001101100010000000000" "00000001000011010001001111111011" "00000001000101010000000000110000" "11100010000010111111011011111011" "11100011111011001100111100000100" "11110100000011010000100000000000" "00001011000001101111111000000011" "00000000000000110010000011111111" "01011010111100101111111000000000" "11111111111100010000001000000011" "00000000110010110010111100000111" "00000001000010000010011100000000" "00001010111101110000000100011101" "00001000000000001101110011110100" "11110100001000110000000011111101" "10000010100010001000001111110110" "10110100111110111011111110000010" "10000010011000111100101111011010" "10000001110101011000000111110000" "10001111001000000010111010001000" "11110100101001001110001110001100" "00011011111111000100011110000001" "11011011101001001000010010000001" "10000001100000011111010010000001" "10111010111110011000000110000010" "10000001111000001000000100011011" "10001000001111101101010111100000" "10000001100010111110100111101100" "00110110110111111000010000000111" "11101011100000101101011011111010" "00000000000110111000010110000100" "10011000000000010000011100000001" "00101001000000011111010100000001" "00000011000101011111111101001100" "00000000111111100000000111111100" "11111110111111010001101010010101" "00000010000011000000000011110000" "10010101000000001011100100100010" "11100011011111010000000111111111" "00000010111111101111101000000000" "11110101000000110110011100000001" "11111111111110101111111100000011" "11110001000000011111111011111101" "11111100111111100000001000000000" "01011110101110101111110011111101" "10000011000000001111111101101010" "00000011000000100000000000000010" "00000001111111111111111100100001" "11011111001001101100010000000000" "00000001000011010001001011111011" "00000001000101010000000000110000" "11100010000010111111011011111011" "11100011111011001100111100000100" "11110100000011010000100000000000" "00001011000001101111111000000011" "00000000000000110010000011111111" "01011010111100101111111000000001" "11111111111100010000001000000011" "00000000110010110010111100000110" "00000001000010000010011100000000" "00001010111101110000000100011100" "00001000111111111101110011110100" "11110100001000110000000011111101" "10000010100010001000001111110110" "10101110111110111011111010000010" "10000010011000111100101111011010" "10000001110101011000000111110000" "10001111001000000010111010001000" "11110100101001101110001110001100" "00011011111111000100011110000001" "11011011101001001000010010000001" "10000001100000011111010010000001" "10111001111110011000000110000010" "10000001111000001000000100011011" "10000111001111101101010111100000" "10000001100010111110100111101100" "00110110110111111000010000000110" "11101011100000101101011011111010" "00000000000110111000010110000100" "10011000000000010000011100000001" "00101001000000011111010100000001" "00000011000101011111111101001100" "00000000111111100000000111111100" "11111110111111010001101010010101" "00000010000011000000000011110000" "10010101000000011011100100100010" "11100011011111010000000111111111" "00000010111111101111101000000000" "11110101000000110110011100000001" "11111111111110101111111100000011" "11110001000000011111111011111101" "11111100111111100000001000000000" "01011110101110101111110011111101" "10000011000000001111111101101010" "00000011000000100000000000000010" "00000001111111111111111100100001" "11011110001001101100010000000000" "00000001000011010001001011111011" "00000001000101010000000000110000" "11100010000010111111011011111011" "11100011111011001100111100000100" "11110100000011010000100000000000" "00001011000001101111111100000011" "00000000000000110010000000000000" "01011011111100101111111000000000" "11111111111100010000001000000011" "00000000110010110010111100000111" "00000001000010000010011100000000" "00001010111101110000000100011100" "00001000000000001101110011110100" "11110100001000110000000011111101" "10000010100010001000001111110110" "10110111111110111011110110000010" "10000010011000111100101111011010" "10000001110101011000000111110010" "10001111001000000010111010001000" "11110100101000111110001110001100" "00011011111111000100011110000001" "11011011101001001000010010000001" "10000001100000011111010010000001" "10111000111110011000000110000010" "10000001111000001000000100011011" "10001000001111101101010111100000" "10000001100010111110100011101100" "00110110110111111000010000000110" "11101011100000101101011011111010" "00000000000110111000010110000100" "10011000000000010000011100000001" "00101001000000011111010100000001" "00000011000101011111111101001100" "00000000111111100000000111111100" "11111110111111010001101010010101" "00000010000011000000000111110000" "10010101000000001011100100100010" "11100011011111010000000111111111" "00000010111111101111101100000000" "11110110000000110110011100000001" "11111111111110101111111100000011" "11110001000000011111111011111101" "11111100111111100000001000000000" "01011110101110101111110011111101" "10000011000000001111111101101010" "00000011000000100000000000000010" "00000001111111111111111100100001" "11011111001001101100010000000000" "00000001000011010001001011111011" "00000001000101010000000000110000" "11100010000010111111011011111011" "11100011111011001100111100000100" "11110100000011010000100000000000" "00001011000001101111111000000011" "00000000000000110010000000000000" "01011011111100101111111000000001" "11111111111100010000001000000011" "00000000110010110010111100000111" "00000001000010000010011100000000" "00001010111101110000000100011100" "00001000000000001101110011110100" "11110100001000110000000011111101" "10000010100010001000001011110110" "10110010111110111011111010000010" "10000010011000111100101111011010" "10000001110101011000000111110001" "10001111001000000010111010001000" "11110100101001011110001110001100" "00011011111111000100011110000001" "11011011101001001000010010000001" "10000001100000011111010010000001" "10110111111110011000000110000010" "10000001111000001000000100011011" "10001000001111101101010111100000" "10000001100010111110100111101100" "00110110110111111000010000000110" "11101011100000101101011011111011" "00000000000110111000010110000100" "10011000000000010000011100000001" "00101001000000011111010100000001" "00000011000101011111111101001100" "00000000111111100000000111111100" "11111110111111010001101110010101" "00000010000011000000000011110000" "10010101000000001011100100100010" "11100011011111010000000111111111" "00000010111111101111101000000000" "11110101000000110110011100000001" "11111111111110101111111100000011" "11110001000000011111111011111101" "11111100111111100000001000000000" "01011110101110101111110011111101" "10000011000000001111111101101010" "00000011000000100000000000000010" "00000001111111111111111100100001" "11011111001001101100010000000000" "00000001000011010001001011111011" "00000001000101010000000000110000" "11100010000010111111011011111011" "11100011111011001100111100000100" "11110100000011010000100000000000" "00001011000001101111111000000011" "00000000000000110010000011111111" "01011010111100101111111000000000" "11111111111100010000001000000011" "00000000110010110010111100000111" "00000001000010000010011100000000" "00001010111101110000000100011100" "00001000000000001101110011110100" "11110100001000110000000011111101" "10000010100010001000001111110110" "10110011111110111011101110000010" "10000010011000111100101111011010" "10000001110101011000000111110001" "10001111001000000010111010001000" "11110100101001101110001110001100" "00011011111111000100011110000001" "11011010101001001000010010000001" "10000001100000011111010010000001" "10110111111110011000000110000010" "10000001111000001000000100011011" "10000111001111101101010111100000" "10000001100010111110100111101100" "00110110110111111000010000000111" "11101011100000101101011011111011" "00000000000110111000010110000100" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 1.352
set ClkPeriod 4
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 740
set hasByteEnable 0
set MemName conv1x1DSP2_conv_dUL
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 32
set AddrRange 288
set AddrWd 9
set TrueReset 0
set IsROM 1
set ROMData { "11111111111101110111000011111001" "00000000111111111111110110110001" "00000000010000100000001100000100" "00000100111110110000000000001001" "11111111100010001011101011111111" "11111000111111110000001001101110" "11111010111101011111110111111111" "01010101111111001100000111111110" "00000010110010001111001111111111" "00000110011010000000011100101001" "00000000110001011111111101111101" "00000001111111001111111110000100" "11111101000000001111101010000011" "00000011111111010000010111101111" "11111010111111101111110100000011" "01011110000000000101100110101001" "00000000000000011111110011100011" "11111101000111000000100011111101" "00000001000101011101001100000000" "00000000000110100000000100010010" "00000001000110001110110011111110" "11010001110011111110100000001001" "11111010110100100000000100000000" "00010011000000100000000000000001" "00000010000000110010011000000001" "00001000110111010000000100000001" "11111110110111100000000100001011" "00000000111010010000011000010101" "00000001000000100000110111111010" "00000011111111010000010000101001" "00000100111111111110011111111110" "11100111111100111111101100000000" "11111011111100010000101111111001" "11111000111110111111110011111011" "00010000000010000000010011110010" "00001000111110110000001100010000" "00001001000000101111010000010001" "00001100000001111111100000000100" "11111110000011111111000011110011" "11110010111100100000101000001010" "11110100111111110000111011110011" "00001101000010001111101011111111" "11110000000010010000000000000101" "00000111000001111111000111111001" "00000101111110001111011000000100" "00000110111100101111011100000000" "00001110111111011111110011111101" "00000000111111000000011011110101" "11111111111101110111000011111001" "00000000111111111111110110110001" "00000000010000100000001100000100" "00000101111110110000000000001001" "11111111100010001011101011111111" "11111000111111110000001001101110" "11111010111101011111110100000000" "01010101111111001100000111111110" "00000010110010001111001111111111" "00000110011010000000011100101010" "11111111110001011111111101111101" "00000001111111011111111110000100" "11111100000000001111101010000011" "00000011111111010000010111101111" "11111010111111101111110100000011" "01011110000000000101100110101001" "00000000000000011111110011100011" "11111101000111000000100011111101" "00000001000101011101001100000000" "00000000000110100000000100010010" "00000001000110001110110011111110" "11010001110011111110100000001001" "11111010110100100000000100000000" "00010011000000100000000000000001" "00000010000000110010011000000001" "00001000110111010000000100000010" "11111110110111100000000100001011" "00000001111010010000011000010101" "00000001000000100000110111111010" "00000100111111010000010000101001" "00000100111111111110011111111110" "11100111111100111111101100000000" "11110110111101110000101000001100" "00001010111111100000001000001111" "00001110000000100000111100001111" "00001011111100111111010111110100" "11110101111101100000010000000111" "11110110000010101111000011110101" "00000001111100100000111000001101" "00000011000001000000010000010000" "11111010111110110001000011110000" "00001000000001111111001011110100" "00001110000000010000010100000011" "11110000111101010000101100001000" "11111000111110100000010100000101" "00001110000000000000101111111110" "11111011000011010000001111110111" "11110100111111100000000000001111" "11111111111101110111000111111001" "00000000111111111111110110110001" "00000000010000100000001100000100" "00000100111110110000000000001001" "11111111100010001011101011111111" "11111000111111110000001001101110" "11111010111101011111110100000000" "01010101111111001100000011111110" "00000010110010001111001111111111" "00000110011010000000011100101001" "00000000110001011111111101111101" "00000001111111001111111110000100" "11111101000000001111101010000011" "00000011111111010000010111101111" "11111010111111101111110100000011" "01011110000000000101100110101001" "00000000000000011111110011100011" "11111101000111000000100011111101" "00000000000101011101001100000000" "00000000000110100000000100010010" "00000001000110001110110011111110" "11010001110011111110100000001001" "11111010110100100000000100000000" "00010011000000100000000000000001" "00000010000001000010011000000001" "00001000110111010000000100000001" "11111110110111100000000100001011" "00000000111010010000011000010101" "00000001000000100000110111111010" "00000011111111010000010000101001" "00000100111111111110011111111110" "11100111111100111111101100000000" "00000110111101101111101100000011" "11111110111111001111101000001100" "11101111000000010000100111110100" "11110111000011001111001111111101" "11110010000011010000000100000111" "00000110111110000000001000000001" "11110111000001111111001100001011" "00000100000011111111001000001111" "11110010111100011111011111111000" "00010000111111101111110011110110" "00000000000010110000011111110111" "11110101111110010000111100000110" "00001100111110111110111100010000" "00000001000000110001000000001100" "11110001000000001111101000001010" "00000010000010101111011000001100" "11111111111101110111000011111001" "00000000111111111111110110110001" "00000000010000100000001100000100" "00000101111110110000000000001001" "11111111100010001011101011111111" "11111000111111110000001001101110" "11111010111101011111110111111111" "01010101111111001100000111111110" "00000010110010001111001111111111" "00000110011010000000011100101001" "11111111110001011111111101111101" "00000001111111001111111110000100" "11111101000000001111101010000011" "00000011111111010000010111101111" "11111010111111101111110100000011" "01011110000000000101100110101001" "00000000000000011111110011100011" "11111101000111000000100011111101" "00000001000101011101001100000000" "00000000000110100000000100010010" "00000001000110001110110011111110" "11010001110011111110100000001001" "11111010110100100000000100000000" "00010011000000100000000000000001" "00000010000001000010011000000001" "00001000110111010000000100000010" "11111110110111100000000100001011" "00000000111010010000011000010101" "00000001000000100000110111111010" "00000011111111010000010000101001" "00000100000000001110011111111111" "11100111111100111111101100000000" "11111011111100000000000100000100" "11101111000010100000101111111101" "11111001000000110000001000010000" "11110011000001001111001100000110" "00000100000001011111001011111001" "00000000000001100000011100000010" "11111100000000011111100111111110" "11110001111111100000110000000110" "11101111000000100000101111111100" "00001001111100010000110000001010" "11111001111101101111101011110110" "00000101000000000000111011110001" "11110101111111101111111100000110" "11111011000011101110111111111101" "00010001000010100000111000000110" "11111000111101100000110000000010" "11111111111101110110111111111001" "00000000111111111111110110110000" "00000000010000100000001100000011" "00000100111110110000000000001001" "11111111100010001011101011111111" "11111000111111110000001001101100" "11111010111101011111110100000000" "01010100111111001100000111111110" "00000010110010001111001111111111" "00000110011010000000011100101010" "11111111110001011111111101111111" "00000001111111001111111110000100" "11111101000000001111101010000011" "00000011111111010000010111101110" "11111010111111101111110100000011" "01011110000000000101100010101001" "00000000000000011111110011100011" "11111101000111000000100011111101" "00000001000101011101001111111111" "00000000000110100000000100010010" "00000001000110001110110011111110" "11010001110011111110100000001001" "11111010110100100000000100000000" "00010011000000100000000000000001" "00000010000001000010011000000001" "00001000110111010000000100000001" "11111110110111100000000100001011" "00000000111010010000011000010101" "00000001000000100000110111111010" "00000011111111010000010000101001" "00000100111111111110011111111110" "11100111111100111111101100000000" "00000100111110110000111111111101" "11111110000011010000100111110100" "11110100000010110000100100000110" "11111111111100101111101100000101" "00001110111101011111000000000101" "11111110111110010000111011101111" "00000100000010100000110011110010" "11110001000010000000100011111000" "11111010000010011111100111111110" "11101111000001001111000100000000" "11110101111110001111110100001101" "11110111111111111111111011110000" "11110110111011111111010000010001" "11111000000001100000101000000001" "00001000000011101111101000000001" "00001110111101011111111100001110" "11111111111101110111000111111001" "00000000111111111111110110110001" "00000000010000100000001100000100" "00000100111110110000000000001001" "11111111100010001011101011111111" "11111000111111110000001001101110" "11111010111101011111110100000000" "01010101111111001100000111111110" "00000010110010001111001111111111" "00000101011010000000011100101001" "11111111110001011111111101111101" "00000001111111001111111110000100" "11111101000000001111101010000011" "00000011111111010000010111101111" "11111010111111101111110100000011" "01011110000000000101100110101001" "00000001000000011111110011100011" "11111101000111000000100011111101" "00000001000101011101001111111111" "00000000000110100000000100010010" "00000001000110001110110011111110" "11010001110011111110100000001001" "11111011110100100000000100000000" "00010011000000100000000000000001" "00000010000000110010011000000001" "00001000110111010000000100000001" "11111110110111100000000100001011" "00000000111010010000011000010101" "00000001000000100000110111111010" "00000011111111010000010000101001" "00000100111111111110011111111110" "11100111111100111111101100000000" "00001101111110000000001100001000" "00000111111111001111110011111100" "11111100000001001111111011110111" "11111000111110110000100011111110" "00001111111110111111101111110000" "00010001000010000000010111110101" "00001110111111101111001000001101" "00000001000000110000100111110001" "00000000111111100000000011110101" "00000001000000011111010111111000" "11111000111111111110111111111110" "00001001111110101111011000000000" "11110100111101000000010100001111" "00001101111110011111100111111010" "11110000000001011111000100000110" "00000111111101010000010011111001" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 1.352
set ClkPeriod 4
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# clear list
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_begin
    cg_default_interface_gen_bundle_begin
    AESL_LIB_XILADAPTER::native_axis_begin
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id 741 \
    name in_V_V \
    type fifo \
    dir I \
    reset_level 1 \
    sync_rst true \
    corename dc_in_V_V \
    op interface \
    ports { in_V_V_dout { I 16 vector } in_V_V_empty_n { I 1 bit } in_V_V_read { O 1 bit } } \
} "
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id 742 \
    name out_V_V \
    type fifo \
    dir O \
    reset_level 1 \
    sync_rst true \
    corename dc_out_V_V \
    op interface \
    ports { out_V_V_din { O 64 vector } out_V_V_full_n { I 1 bit } out_V_V_write { O 1 bit } } \
} "
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id 743 \
    name reps \
    type fifo \
    dir I \
    reset_level 1 \
    sync_rst true \
    corename dc_reps \
    op interface \
    ports { reps_dout { I 32 vector } reps_empty_n { I 1 bit } reps_read { O 1 bit } } \
} "
}

# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id -1 \
    name ap_ctrl \
    type ap_ctrl \
    reset_level 1 \
    sync_rst true \
    corename ap_ctrl \
    op interface \
    ports { ap_start { I 1 bit } ap_ready { O 1 bit } ap_done { O 1 bit } ap_idle { O 1 bit } ap_continue { I 1 bit } } \
} "
}


# Adapter definition:
set PortName ap_clk
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_clock] == "cg_default_interface_gen_clock"} {
eval "cg_default_interface_gen_clock { \
    id -2 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_clk \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-113\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}


# Adapter definition:
set PortName ap_rst
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_reset] == "cg_default_interface_gen_reset"} {
eval "cg_default_interface_gen_reset { \
    id -3 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_rst \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-114\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}



# merge
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_end
    cg_default_interface_gen_bundle_end
    AESL_LIB_XILADAPTER::native_axis_end
}


