// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module simd_mac9_DSP2 (
        ap_clk,
        ap_rst,
        invec_0_V_read,
        invec_1_V_read,
        invec_2_V_read,
        invec_3_V_read,
        invec_4_V_read,
        invec_5_V_read,
        invec_6_V_read,
        invec_7_V_read,
        invec_8_V_read,
        w0vec_0_V_read,
        w0vec_1_V_read,
        w0vec_2_V_read,
        w0vec_3_V_read,
        w0vec_4_V_read,
        w0vec_5_V_read,
        w0vec_6_V_read,
        w0vec_7_V_read,
        w0vec_8_V_read,
        w1vec_0_V_read,
        w1vec_1_V_read,
        w1vec_2_V_read,
        w1vec_3_V_read,
        w1vec_4_V_read,
        w1vec_5_V_read,
        w1vec_6_V_read,
        w1vec_7_V_read,
        w1vec_8_V_read,
        ap_return_0,
        ap_return_1,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [7:0] invec_0_V_read;
input  [7:0] invec_1_V_read;
input  [7:0] invec_2_V_read;
input  [7:0] invec_3_V_read;
input  [7:0] invec_4_V_read;
input  [7:0] invec_5_V_read;
input  [7:0] invec_6_V_read;
input  [7:0] invec_7_V_read;
input  [7:0] invec_8_V_read;
input  [7:0] w0vec_0_V_read;
input  [7:0] w0vec_1_V_read;
input  [7:0] w0vec_2_V_read;
input  [7:0] w0vec_3_V_read;
input  [7:0] w0vec_4_V_read;
input  [7:0] w0vec_5_V_read;
input  [7:0] w0vec_6_V_read;
input  [7:0] w0vec_7_V_read;
input  [7:0] w0vec_8_V_read;
input  [7:0] w1vec_0_V_read;
input  [7:0] w1vec_1_V_read;
input  [7:0] w1vec_2_V_read;
input  [7:0] w1vec_3_V_read;
input  [7:0] w1vec_4_V_read;
input  [7:0] w1vec_5_V_read;
input  [7:0] w1vec_6_V_read;
input  [7:0] w1vec_7_V_read;
input  [7:0] w1vec_8_V_read;
output  [19:0] ap_return_0;
output  [19:0] ap_return_1;
input   ap_ce;

reg[19:0] ap_return_0;
reg[19:0] ap_return_1;

reg   [7:0] w1vec_8_V_read_1_reg_680;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
reg   [7:0] w0vec_8_V_read_1_reg_685;
reg   [7:0] invec_8_V_read_1_reg_690;
reg   [7:0] invec_8_V_read_1_reg_690_pp0_iter1_reg;
reg   [7:0] invec_7_V_read_1_reg_695;
reg   [7:0] invec_6_V_read_1_reg_700;
reg   [7:0] invec_5_V_read_1_reg_705;
reg   [7:0] invec_4_V_read_1_reg_710;
reg   [7:0] invec_3_V_read_2_reg_715;
reg   [7:0] invec_2_V_read_2_reg_720;
reg   [7:0] invec_1_V_read_2_reg_725;
reg   [7:0] invec_0_V_read_2_reg_730;
wire   [27:0] add_ln68_fu_246_p2;
reg  signed [27:0] add_ln68_reg_735;
wire   [27:0] add_ln68_4_fu_264_p2;
reg  signed [27:0] add_ln68_4_reg_740;
wire   [27:0] add_ln68_5_fu_282_p2;
reg  signed [27:0] add_ln68_5_reg_745;
wire   [27:0] add_ln68_6_fu_300_p2;
reg  signed [27:0] add_ln68_6_reg_750;
wire   [27:0] add_ln68_7_fu_318_p2;
reg  signed [27:0] add_ln68_7_reg_755;
wire   [27:0] add_ln68_8_fu_336_p2;
reg  signed [27:0] add_ln68_8_reg_760;
wire   [27:0] add_ln68_9_fu_354_p2;
reg  signed [27:0] add_ln68_9_reg_765;
wire   [27:0] add_ln68_10_fu_372_p2;
reg  signed [27:0] add_ln68_10_reg_770;
wire  signed [35:0] mul_ln1352_fu_624_p2;
reg  signed [35:0] mul_ln1352_reg_775;
wire  signed [35:0] mul_ln1352_4_fu_630_p2;
reg  signed [35:0] mul_ln1352_4_reg_780;
wire  signed [35:0] mul_ln1352_5_fu_636_p2;
reg  signed [35:0] mul_ln1352_5_reg_785;
wire  signed [35:0] mul_ln1352_6_fu_642_p2;
reg  signed [35:0] mul_ln1352_6_reg_790;
wire  signed [35:0] mul_ln1352_7_fu_648_p2;
reg  signed [35:0] mul_ln1352_7_reg_795;
wire  signed [35:0] mul_ln1352_8_fu_654_p2;
reg  signed [35:0] mul_ln1352_8_reg_800;
wire  signed [35:0] mul_ln1352_9_fu_661_p2;
reg  signed [35:0] mul_ln1352_9_reg_805;
wire  signed [35:0] mul_ln1352_10_fu_667_p2;
reg  signed [35:0] mul_ln1352_10_reg_810;
wire   [19:0] trunc_ln700_1_fu_426_p1;
reg   [19:0] trunc_ln700_1_reg_815;
reg   [19:0] trunc_ln700_1_reg_815_pp0_iter2_reg;
wire   [27:0] add_ln68_11_fu_439_p2;
reg  signed [27:0] add_ln68_11_reg_820;
wire   [19:0] trunc_ln700_fu_505_p1;
reg   [19:0] trunc_ln700_reg_825;
wire   [19:0] trunc_ln700_2_fu_535_p1;
reg   [19:0] trunc_ln700_2_reg_830;
wire   [38:0] add_ln700_8_fu_539_p2;
reg   [38:0] add_ln700_8_reg_835;
wire  signed [35:0] mul_ln1352_11_fu_673_p2;
reg  signed [35:0] mul_ln1352_11_reg_840;
wire   [19:0] trunc_ln700_3_fu_551_p1;
reg   [19:0] trunc_ln700_3_reg_845;
wire    ap_block_pp0_stage0;
wire   [27:0] shl_ln_fu_234_p3;
wire  signed [27:0] sext_ln68_fu_242_p1;
wire   [27:0] shl_ln68_4_fu_252_p3;
wire  signed [27:0] sext_ln68_1_fu_260_p1;
wire   [27:0] shl_ln68_5_fu_270_p3;
wire  signed [27:0] sext_ln68_2_fu_278_p1;
wire   [27:0] shl_ln68_6_fu_288_p3;
wire  signed [27:0] sext_ln68_3_fu_296_p1;
wire   [27:0] shl_ln68_7_fu_306_p3;
wire  signed [27:0] sext_ln68_4_fu_314_p1;
wire   [27:0] shl_ln68_8_fu_324_p3;
wire  signed [27:0] sext_ln68_5_fu_332_p1;
wire   [27:0] shl_ln68_9_fu_342_p3;
wire  signed [27:0] sext_ln68_6_fu_350_p1;
wire   [27:0] shl_ln68_s_fu_360_p3;
wire  signed [27:0] sext_ln68_7_fu_368_p1;
wire   [27:0] shl_ln68_1_fu_429_p3;
wire  signed [27:0] sext_ln68_8_fu_436_p1;
wire  signed [36:0] sext_ln215_4_fu_445_p1;
wire  signed [36:0] sext_ln700_fu_448_p1;
wire  signed [36:0] add_ln700_fu_451_p2;
wire  signed [36:0] sext_ln68_11_fu_461_p1;
wire  signed [36:0] sext_ln700_2_fu_464_p1;
wire  signed [36:0] add_ln700_3_fu_467_p2;
wire  signed [37:0] sext_ln700_3_fu_473_p1;
wire  signed [37:0] sext_ln700_1_fu_457_p1;
wire   [37:0] add_ln700_4_fu_483_p2;
wire   [36:0] add_ln700_12_fu_477_p2;
wire  signed [38:0] sext_ln700_4_fu_489_p1;
wire  signed [38:0] sext_ln700_5_fu_496_p1;
wire  signed [36:0] sext_ln68_12_fu_493_p1;
wire  signed [36:0] sext_ln700_6_fu_502_p1;
wire   [36:0] add_ln700_6_fu_515_p2;
wire  signed [37:0] sext_ln700_7_fu_521_p1;
wire  signed [37:0] sext_ln68_13_fu_499_p1;
wire  signed [37:0] add_ln700_7_fu_525_p2;
wire  signed [38:0] sext_ln700_8_fu_531_p1;
wire   [38:0] add_ln700_5_fu_509_p2;
wire   [19:0] add_ln700_10_fu_554_p2;
wire  signed [39:0] sext_ln700_9_fu_563_p1;
wire  signed [39:0] sext_ln68_10_fu_566_p1;
wire   [19:0] add_ln700_11_fu_558_p2;
wire   [39:0] add_ln700_9_fu_569_p2;
wire   [19:0] add_ln647_fu_575_p2;
wire   [0:0] tmp_fu_594_p3;
wire   [19:0] p_Result_s_fu_584_p4;
wire   [19:0] zext_ln78_fu_602_p1;
wire   [19:0] trunc_ln647_fu_580_p1;
wire   [19:0] add_ln78_fu_606_p2;
wire   [7:0] mul_ln1352_fu_624_p1;
wire   [7:0] mul_ln1352_4_fu_630_p1;
wire   [7:0] mul_ln1352_5_fu_636_p1;
wire   [7:0] mul_ln1352_6_fu_642_p1;
wire   [7:0] mul_ln1352_7_fu_648_p1;
wire   [7:0] mul_ln1352_8_fu_654_p1;
wire   [7:0] mul_ln1352_9_fu_661_p1;
wire   [7:0] mul_ln1352_10_fu_667_p1;
wire   [7:0] mul_ln1352_11_fu_673_p1;
reg    ap_ce_reg;
reg   [7:0] invec_0_V_read_int_reg;
reg   [7:0] invec_1_V_read_int_reg;
reg   [7:0] invec_2_V_read_int_reg;
reg   [7:0] invec_3_V_read_int_reg;
reg   [7:0] invec_4_V_read_int_reg;
reg   [7:0] invec_5_V_read_int_reg;
reg   [7:0] invec_6_V_read_int_reg;
reg   [7:0] invec_7_V_read_int_reg;
reg   [7:0] invec_8_V_read_int_reg;
reg   [7:0] w0vec_0_V_read_int_reg;
reg   [7:0] w0vec_1_V_read_int_reg;
reg   [7:0] w0vec_2_V_read_int_reg;
reg   [7:0] w0vec_3_V_read_int_reg;
reg   [7:0] w0vec_4_V_read_int_reg;
reg   [7:0] w0vec_5_V_read_int_reg;
reg   [7:0] w0vec_6_V_read_int_reg;
reg   [7:0] w0vec_7_V_read_int_reg;
reg   [7:0] w0vec_8_V_read_int_reg;
reg   [7:0] w1vec_0_V_read_int_reg;
reg   [7:0] w1vec_1_V_read_int_reg;
reg   [7:0] w1vec_2_V_read_int_reg;
reg   [7:0] w1vec_3_V_read_int_reg;
reg   [7:0] w1vec_4_V_read_int_reg;
reg   [7:0] w1vec_5_V_read_int_reg;
reg   [7:0] w1vec_6_V_read_int_reg;
reg   [7:0] w1vec_7_V_read_int_reg;
reg   [7:0] w1vec_8_V_read_int_reg;
reg   [19:0] ap_return_0_int_reg;
reg   [19:0] ap_return_1_int_reg;
wire   [35:0] mul_ln1352_10_fu_667_p10;
wire   [35:0] mul_ln1352_11_fu_673_p10;
wire   [35:0] mul_ln1352_4_fu_630_p10;
wire   [35:0] mul_ln1352_5_fu_636_p10;
wire   [35:0] mul_ln1352_6_fu_642_p10;
wire   [35:0] mul_ln1352_7_fu_648_p10;
wire   [35:0] mul_ln1352_8_fu_654_p10;
wire   [35:0] mul_ln1352_9_fu_661_p10;
wire   [35:0] mul_ln1352_fu_624_p10;

ultra_net_mul_multde #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 28 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 36 ))
ultra_net_mul_multde_U104(
    .din0(add_ln68_reg_735),
    .din1(mul_ln1352_fu_624_p1),
    .dout(mul_ln1352_fu_624_p2)
);

ultra_net_mul_multde #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 28 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 36 ))
ultra_net_mul_multde_U105(
    .din0(add_ln68_4_reg_740),
    .din1(mul_ln1352_4_fu_630_p1),
    .dout(mul_ln1352_4_fu_630_p2)
);

ultra_net_mul_multde #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 28 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 36 ))
ultra_net_mul_multde_U106(
    .din0(add_ln68_5_reg_745),
    .din1(mul_ln1352_5_fu_636_p1),
    .dout(mul_ln1352_5_fu_636_p2)
);

ultra_net_mul_multde #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 28 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 36 ))
ultra_net_mul_multde_U107(
    .din0(add_ln68_6_reg_750),
    .din1(mul_ln1352_6_fu_642_p1),
    .dout(mul_ln1352_6_fu_642_p2)
);

ultra_net_mul_multde #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 28 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 36 ))
ultra_net_mul_multde_U108(
    .din0(add_ln68_7_reg_755),
    .din1(mul_ln1352_7_fu_648_p1),
    .dout(mul_ln1352_7_fu_648_p2)
);

ultra_net_mul_multde #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 28 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 36 ))
ultra_net_mul_multde_U109(
    .din0(add_ln68_8_reg_760),
    .din1(mul_ln1352_8_fu_654_p1),
    .dout(mul_ln1352_8_fu_654_p2)
);

ultra_net_mul_multde #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 28 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 36 ))
ultra_net_mul_multde_U110(
    .din0(add_ln68_9_reg_765),
    .din1(mul_ln1352_9_fu_661_p1),
    .dout(mul_ln1352_9_fu_661_p2)
);

ultra_net_mul_multde #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 28 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 36 ))
ultra_net_mul_multde_U111(
    .din0(add_ln68_10_reg_770),
    .din1(mul_ln1352_10_fu_667_p1),
    .dout(mul_ln1352_10_fu_667_p2)
);

ultra_net_mul_multde #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 28 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 36 ))
ultra_net_mul_multde_U112(
    .din0(add_ln68_11_reg_820),
    .din1(mul_ln1352_11_fu_673_p1),
    .dout(mul_ln1352_11_fu_673_p2)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        add_ln68_10_reg_770 <= add_ln68_10_fu_372_p2;
        add_ln68_11_reg_820 <= add_ln68_11_fu_439_p2;
        add_ln68_4_reg_740 <= add_ln68_4_fu_264_p2;
        add_ln68_5_reg_745 <= add_ln68_5_fu_282_p2;
        add_ln68_6_reg_750 <= add_ln68_6_fu_300_p2;
        add_ln68_7_reg_755 <= add_ln68_7_fu_318_p2;
        add_ln68_8_reg_760 <= add_ln68_8_fu_336_p2;
        add_ln68_9_reg_765 <= add_ln68_9_fu_354_p2;
        add_ln68_reg_735 <= add_ln68_fu_246_p2;
        add_ln700_8_reg_835 <= add_ln700_8_fu_539_p2;
        invec_0_V_read_2_reg_730 <= invec_0_V_read_int_reg;
        invec_1_V_read_2_reg_725 <= invec_1_V_read_int_reg;
        invec_2_V_read_2_reg_720 <= invec_2_V_read_int_reg;
        invec_3_V_read_2_reg_715 <= invec_3_V_read_int_reg;
        invec_4_V_read_1_reg_710 <= invec_4_V_read_int_reg;
        invec_5_V_read_1_reg_705 <= invec_5_V_read_int_reg;
        invec_6_V_read_1_reg_700 <= invec_6_V_read_int_reg;
        invec_7_V_read_1_reg_695 <= invec_7_V_read_int_reg;
        invec_8_V_read_1_reg_690 <= invec_8_V_read_int_reg;
        invec_8_V_read_1_reg_690_pp0_iter1_reg <= invec_8_V_read_1_reg_690;
        mul_ln1352_10_reg_810 <= mul_ln1352_10_fu_667_p2;
        mul_ln1352_11_reg_840 <= mul_ln1352_11_fu_673_p2;
        mul_ln1352_4_reg_780 <= mul_ln1352_4_fu_630_p2;
        mul_ln1352_5_reg_785 <= mul_ln1352_5_fu_636_p2;
        mul_ln1352_6_reg_790 <= mul_ln1352_6_fu_642_p2;
        mul_ln1352_7_reg_795 <= mul_ln1352_7_fu_648_p2;
        mul_ln1352_8_reg_800 <= mul_ln1352_8_fu_654_p2;
        mul_ln1352_9_reg_805 <= mul_ln1352_9_fu_661_p2;
        mul_ln1352_reg_775 <= mul_ln1352_fu_624_p2;
        trunc_ln700_1_reg_815 <= trunc_ln700_1_fu_426_p1;
        trunc_ln700_1_reg_815_pp0_iter2_reg <= trunc_ln700_1_reg_815;
        trunc_ln700_2_reg_830 <= trunc_ln700_2_fu_535_p1;
        trunc_ln700_3_reg_845 <= trunc_ln700_3_fu_551_p1;
        trunc_ln700_reg_825 <= trunc_ln700_fu_505_p1;
        w0vec_8_V_read_1_reg_685 <= w0vec_8_V_read_int_reg;
        w1vec_8_V_read_1_reg_680 <= w1vec_8_V_read_int_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_0_int_reg <= trunc_ln647_fu_580_p1;
        ap_return_1_int_reg <= add_ln78_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        invec_0_V_read_int_reg <= invec_0_V_read;
        invec_1_V_read_int_reg <= invec_1_V_read;
        invec_2_V_read_int_reg <= invec_2_V_read;
        invec_3_V_read_int_reg <= invec_3_V_read;
        invec_4_V_read_int_reg <= invec_4_V_read;
        invec_5_V_read_int_reg <= invec_5_V_read;
        invec_6_V_read_int_reg <= invec_6_V_read;
        invec_7_V_read_int_reg <= invec_7_V_read;
        invec_8_V_read_int_reg <= invec_8_V_read;
        w0vec_0_V_read_int_reg <= w0vec_0_V_read;
        w0vec_1_V_read_int_reg <= w0vec_1_V_read;
        w0vec_2_V_read_int_reg <= w0vec_2_V_read;
        w0vec_3_V_read_int_reg <= w0vec_3_V_read;
        w0vec_4_V_read_int_reg <= w0vec_4_V_read;
        w0vec_5_V_read_int_reg <= w0vec_5_V_read;
        w0vec_6_V_read_int_reg <= w0vec_6_V_read;
        w0vec_7_V_read_int_reg <= w0vec_7_V_read;
        w0vec_8_V_read_int_reg <= w0vec_8_V_read;
        w1vec_0_V_read_int_reg <= w1vec_0_V_read;
        w1vec_1_V_read_int_reg <= w1vec_1_V_read;
        w1vec_2_V_read_int_reg <= w1vec_2_V_read;
        w1vec_3_V_read_int_reg <= w1vec_3_V_read;
        w1vec_4_V_read_int_reg <= w1vec_4_V_read;
        w1vec_5_V_read_int_reg <= w1vec_5_V_read;
        w1vec_6_V_read_int_reg <= w1vec_6_V_read;
        w1vec_7_V_read_int_reg <= w1vec_7_V_read;
        w1vec_8_V_read_int_reg <= w1vec_8_V_read;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_0 = ap_return_0_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_0 = trunc_ln647_fu_580_p1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_1 = ap_return_1_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_1 = add_ln78_fu_606_p2;
    end
end

assign add_ln647_fu_575_p2 = (add_ln700_11_fu_558_p2 + trunc_ln700_3_reg_845);

assign add_ln68_10_fu_372_p2 = ($signed(shl_ln68_s_fu_360_p3) + $signed(sext_ln68_7_fu_368_p1));

assign add_ln68_11_fu_439_p2 = ($signed(shl_ln68_1_fu_429_p3) + $signed(sext_ln68_8_fu_436_p1));

assign add_ln68_4_fu_264_p2 = ($signed(shl_ln68_4_fu_252_p3) + $signed(sext_ln68_1_fu_260_p1));

assign add_ln68_5_fu_282_p2 = ($signed(shl_ln68_5_fu_270_p3) + $signed(sext_ln68_2_fu_278_p1));

assign add_ln68_6_fu_300_p2 = ($signed(shl_ln68_6_fu_288_p3) + $signed(sext_ln68_3_fu_296_p1));

assign add_ln68_7_fu_318_p2 = ($signed(shl_ln68_7_fu_306_p3) + $signed(sext_ln68_4_fu_314_p1));

assign add_ln68_8_fu_336_p2 = ($signed(shl_ln68_8_fu_324_p3) + $signed(sext_ln68_5_fu_332_p1));

assign add_ln68_9_fu_354_p2 = ($signed(shl_ln68_9_fu_342_p3) + $signed(sext_ln68_6_fu_350_p1));

assign add_ln68_fu_246_p2 = ($signed(shl_ln_fu_234_p3) + $signed(sext_ln68_fu_242_p1));

assign add_ln700_10_fu_554_p2 = (trunc_ln700_1_reg_815_pp0_iter2_reg + trunc_ln700_reg_825);

assign add_ln700_11_fu_558_p2 = (add_ln700_10_fu_554_p2 + trunc_ln700_2_reg_830);

assign add_ln700_12_fu_477_p2 = ($signed(add_ln700_fu_451_p2) + $signed(add_ln700_3_fu_467_p2));

assign add_ln700_3_fu_467_p2 = ($signed(sext_ln68_11_fu_461_p1) + $signed(sext_ln700_2_fu_464_p1));

assign add_ln700_4_fu_483_p2 = ($signed(sext_ln700_3_fu_473_p1) + $signed(sext_ln700_1_fu_457_p1));

assign add_ln700_5_fu_509_p2 = ($signed(sext_ln700_4_fu_489_p1) + $signed(sext_ln700_5_fu_496_p1));

assign add_ln700_6_fu_515_p2 = ($signed(sext_ln68_12_fu_493_p1) + $signed(sext_ln700_6_fu_502_p1));

assign add_ln700_7_fu_525_p2 = ($signed(sext_ln700_7_fu_521_p1) + $signed(sext_ln68_13_fu_499_p1));

assign add_ln700_8_fu_539_p2 = ($signed(sext_ln700_8_fu_531_p1) + $signed(add_ln700_5_fu_509_p2));

assign add_ln700_9_fu_569_p2 = ($signed(sext_ln700_9_fu_563_p1) + $signed(sext_ln68_10_fu_566_p1));

assign add_ln700_fu_451_p2 = ($signed(sext_ln215_4_fu_445_p1) + $signed(sext_ln700_fu_448_p1));

assign add_ln78_fu_606_p2 = (p_Result_s_fu_584_p4 + zext_ln78_fu_602_p1);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign mul_ln1352_10_fu_667_p1 = mul_ln1352_10_fu_667_p10;

assign mul_ln1352_10_fu_667_p10 = invec_7_V_read_1_reg_695;

assign mul_ln1352_11_fu_673_p1 = mul_ln1352_11_fu_673_p10;

assign mul_ln1352_11_fu_673_p10 = invec_8_V_read_1_reg_690_pp0_iter1_reg;

assign mul_ln1352_4_fu_630_p1 = mul_ln1352_4_fu_630_p10;

assign mul_ln1352_4_fu_630_p10 = invec_1_V_read_2_reg_725;

assign mul_ln1352_5_fu_636_p1 = mul_ln1352_5_fu_636_p10;

assign mul_ln1352_5_fu_636_p10 = invec_2_V_read_2_reg_720;

assign mul_ln1352_6_fu_642_p1 = mul_ln1352_6_fu_642_p10;

assign mul_ln1352_6_fu_642_p10 = invec_3_V_read_2_reg_715;

assign mul_ln1352_7_fu_648_p1 = mul_ln1352_7_fu_648_p10;

assign mul_ln1352_7_fu_648_p10 = invec_4_V_read_1_reg_710;

assign mul_ln1352_8_fu_654_p1 = mul_ln1352_8_fu_654_p10;

assign mul_ln1352_8_fu_654_p10 = invec_5_V_read_1_reg_705;

assign mul_ln1352_9_fu_661_p1 = mul_ln1352_9_fu_661_p10;

assign mul_ln1352_9_fu_661_p10 = invec_6_V_read_1_reg_700;

assign mul_ln1352_fu_624_p1 = mul_ln1352_fu_624_p10;

assign mul_ln1352_fu_624_p10 = invec_0_V_read_2_reg_730;

assign p_Result_s_fu_584_p4 = {{add_ln700_9_fu_569_p2[39:20]}};

assign sext_ln215_4_fu_445_p1 = mul_ln1352_reg_775;

assign sext_ln68_10_fu_566_p1 = mul_ln1352_11_reg_840;

assign sext_ln68_11_fu_461_p1 = mul_ln1352_5_reg_785;

assign sext_ln68_12_fu_493_p1 = mul_ln1352_7_reg_795;

assign sext_ln68_13_fu_499_p1 = mul_ln1352_9_reg_805;

assign sext_ln68_1_fu_260_p1 = $signed(w0vec_1_V_read_int_reg);

assign sext_ln68_2_fu_278_p1 = $signed(w0vec_2_V_read_int_reg);

assign sext_ln68_3_fu_296_p1 = $signed(w0vec_3_V_read_int_reg);

assign sext_ln68_4_fu_314_p1 = $signed(w0vec_4_V_read_int_reg);

assign sext_ln68_5_fu_332_p1 = $signed(w0vec_5_V_read_int_reg);

assign sext_ln68_6_fu_350_p1 = $signed(w0vec_6_V_read_int_reg);

assign sext_ln68_7_fu_368_p1 = $signed(w0vec_7_V_read_int_reg);

assign sext_ln68_8_fu_436_p1 = $signed(w0vec_8_V_read_1_reg_685);

assign sext_ln68_fu_242_p1 = $signed(w0vec_0_V_read_int_reg);

assign sext_ln700_1_fu_457_p1 = add_ln700_fu_451_p2;

assign sext_ln700_2_fu_464_p1 = mul_ln1352_6_reg_790;

assign sext_ln700_3_fu_473_p1 = add_ln700_3_fu_467_p2;

assign sext_ln700_4_fu_489_p1 = $signed(add_ln700_4_fu_483_p2);

assign sext_ln700_5_fu_496_p1 = mul_ln1352_8_reg_800;

assign sext_ln700_6_fu_502_p1 = mul_ln1352_10_reg_810;

assign sext_ln700_7_fu_521_p1 = $signed(add_ln700_6_fu_515_p2);

assign sext_ln700_8_fu_531_p1 = add_ln700_7_fu_525_p2;

assign sext_ln700_9_fu_563_p1 = $signed(add_ln700_8_reg_835);

assign sext_ln700_fu_448_p1 = mul_ln1352_4_reg_780;

assign shl_ln68_1_fu_429_p3 = {{w1vec_8_V_read_1_reg_680}, {20'd0}};

assign shl_ln68_4_fu_252_p3 = {{w1vec_1_V_read_int_reg}, {20'd0}};

assign shl_ln68_5_fu_270_p3 = {{w1vec_2_V_read_int_reg}, {20'd0}};

assign shl_ln68_6_fu_288_p3 = {{w1vec_3_V_read_int_reg}, {20'd0}};

assign shl_ln68_7_fu_306_p3 = {{w1vec_4_V_read_int_reg}, {20'd0}};

assign shl_ln68_8_fu_324_p3 = {{w1vec_5_V_read_int_reg}, {20'd0}};

assign shl_ln68_9_fu_342_p3 = {{w1vec_6_V_read_int_reg}, {20'd0}};

assign shl_ln68_s_fu_360_p3 = {{w1vec_7_V_read_int_reg}, {20'd0}};

assign shl_ln_fu_234_p3 = {{w1vec_0_V_read_int_reg}, {20'd0}};

assign tmp_fu_594_p3 = add_ln647_fu_575_p2[32'd19];

assign trunc_ln647_fu_580_p1 = add_ln700_9_fu_569_p2[19:0];

assign trunc_ln700_1_fu_426_p1 = mul_ln1352_8_fu_654_p2[19:0];

assign trunc_ln700_2_fu_535_p1 = add_ln700_7_fu_525_p2[19:0];

assign trunc_ln700_3_fu_551_p1 = mul_ln1352_11_fu_673_p2[19:0];

assign trunc_ln700_fu_505_p1 = add_ln700_12_fu_477_p2[19:0];

assign zext_ln78_fu_602_p1 = tmp_fu_594_p3;

endmodule //simd_mac9_DSP2
