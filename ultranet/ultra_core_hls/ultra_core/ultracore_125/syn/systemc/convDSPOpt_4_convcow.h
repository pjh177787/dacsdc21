// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __convDSPOpt_4_convcow_H__
#define __convDSPOpt_4_convcow_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct convDSPOpt_4_convcow_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 96;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(convDSPOpt_4_convcow_ram) {
        ram[0] = "0b11111010100100101101110000010000";
        ram[1] = "0b01001100000011110000000011100011";
        ram[2] = "0b11100011001000001111001011110001";
        ram[3] = "0b00000000110100110000111000100010";
        ram[4] = "0b00101111111000000000001000010100";
        ram[5] = "0b11111010000011100110001100010100";
        ram[6] = "0b00011111010000100001010100110011";
        ram[7] = "0b10100000000101000011111000000001";
        ram[8] = "0b00111100000100110000010011010100";
        ram[9] = "0b00000000111111110000101111100000";
        ram[10] = "0b00001001110100010010000000110010";
        ram[11] = "0b10101111001001000010110100000010";
        ram[12] = "0b00110100111100000110010000001110";
        ram[13] = "0b11100001001100100011110101000001";
        ram[14] = "0b11111010011000100001111011111101";
        ram[15] = "0b00101111000111100000110000010001";
        ram[16] = "0b11101100111000011100001111011110";
        ram[17] = "0b00111110101101000000111111100001";
        ram[18] = "0b11101101000000001111111011001100";
        ram[19] = "0b00010100000100001011111100100011";
        ram[20] = "0b00001110000011111100000000100001";
        ram[21] = "0b11111111101001001110111011101010";
        ram[22] = "0b11111110000010110100000110111110";
        ram[23] = "0b11110011111111101110001100110001";
        ram[24] = "0b11011100111001110100110000001010";
        ram[25] = "0b10010110010011111011010011110111";
        ram[26] = "0b00100011001101101101001001100001";
        ram[27] = "0b00000001111101010100001111101111";
        ram[28] = "0b01110010011100101100111011100101";
        ram[29] = "0b11110001111110100111011101011010";
        ram[30] = "0b00001101010000101001010011010011";
        ram[31] = "0b10110110001101110111110100001001";
        ram[32] = "0b11010011010011110000000110110011";
        ram[33] = "0b00010001111111100110000001101100";
        ram[34] = "0b00001011010001001011000111010110";
        ram[35] = "0b10100110111100111011010000001110";
        ram[36] = "0b01000011000011110000011011100010";
        ram[37] = "0b10101101001000010100001100111110";
        ram[38] = "0b11100100001011110001110110111011";
        ram[39] = "0b01011110010000000000111100001110";
        ram[40] = "0b11000010111011100010110000101101";
        ram[41] = "0b11110100011011001111000000011111";
        ram[42] = "0b11100011000100111110111110011100";
        ram[43] = "0b01011100000111011101110100011010";
        ram[44] = "0b11101100000101011110000011110000";
        ram[45] = "0b11101011000000101010001010101101";
        ram[46] = "0b10111110111100110000000111010001";
        ram[47] = "0b00011110111011100000110101001111";
        ram[48] = "0b00111101001111100101000111001111";
        ram[49] = "0b00110000111011000001011010011100";
        ram[50] = "0b01010100010101000000110100100000";
        ram[51] = "0b00110010000100011111000101010101";
        ram[52] = "0b01111010001011000111010111101111";
        ram[53] = "0b11011111010011011110110110011010";
        ram[54] = "0b00000100001100111110111000110101";
        ram[55] = "0b00000011010000111001000111000001";
        ram[56] = "0b11101010101100000001111011001111";
        ram[57] = "0b11001111001111010001110111011100";
        ram[58] = "0b10100011111000011110010001110111";
        ram[59] = "0b00100110101100111011001011111100";
        ram[60] = "0b11010001111001001110001111110000";
        ram[61] = "0b11100000001011111110001100000100";
        ram[62] = "0b01100001010110011111000000111111";
        ram[63] = "0b11110000111010111110010111100001";
        ram[64] = "0b10110001111111010000000100100010";
        ram[65] = "0b00011111000100011010001100000101";
        ram[66] = "0b00100000111111001111111001001111";
        ram[67] = "0b00000001110111101111010011100001";
        ram[68] = "0b11110010110010111110110100000011";
        ram[69] = "0b01001101111000111011000000100110";
        ram[70] = "0b00111110010010101110000000101111";
        ram[71] = "0b00100010110011010100001011110001";
        ram[72] = "0b00010011111100011110111100001110";
        ram[73] = "0b00001001111100011101001000110010";
        ram[74] = "0b00110010000011000001000000001111";
        ram[75] = "0b00001100010111011110000000110000";
        ram[76] = "0b00010010000000100001000111110001";
        ram[77] = "0b11111010111000011111110111100000";
        ram[78] = "0b00101101111010111101000001011110";
        ram[79] = "0b00001110001111101101110101010000";
        ram[80] = "0b00100101111001110001000010100101";
        ram[81] = "0b00011111111100100010111010110001";
        ram[82] = "0b00111011110110010000111000011011";
        ram[83] = "0b11111110001110110000000100100001";
        ram[84] = "0b11011011110111101110000111000010";
        ram[85] = "0b01001110000111100011000000110100";
        ram[86] = "0b00011110110011011011000000000010";
        ram[87] = "0b00000010111111001011001100011111";
        ram[88] = "0b00000001110000000000000000000000";
        ram[89] = "0b00101110000000101111111000110000";
        ram[90] = "0b00110000000011101110110000110100";
        ram[91] = "0b00010010010000011111001100011111";
        ram[92] = "0b00000100100100100011111100111111";
        ram[93] = "0b11110001000011111101111000010000";
        ram[94] = "0b11100000000000111111000100101111";
        ram[95] = "0b00010101111000100011000100001110";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(convDSPOpt_4_convcow) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 96;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


convDSPOpt_4_convcow_ram* meminst;


SC_CTOR(convDSPOpt_4_convcow) {
meminst = new convDSPOpt_4_convcow_ram("convDSPOpt_4_convcow_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~convDSPOpt_4_convcow() {
    delete meminst;
}


};//endmodule
#endif
