// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __convDSPOpt_4_convb8t_H__
#define __convDSPOpt_4_convb8t_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct convDSPOpt_4_convb8t_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 96;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(convDSPOpt_4_convb8t_ram) {
        ram[0] = "0b00100110010100101001010000110000";
        ram[1] = "0b11010010001000010111001101001110";
        ram[2] = "0b11001101111100001110011100011111";
        ram[3] = "0b10011100001001110101000011011101";
        ram[4] = "0b01010100110000011010011011110010";
        ram[5] = "0b00000101000000110111111011111010";
        ram[6] = "0b00101001110000101010011010100000";
        ram[7] = "0b10010011000101101110000111001111";
        ram[8] = "0b00010100111010101101010011110000";
        ram[9] = "0b11110110001001001111001011011101";
        ram[10] = "0b11011011110011111010000110100001";
        ram[11] = "0b11000100111100101011011011100100";
        ram[12] = "0b00100001111100000001000101010110";
        ram[13] = "0b00110100000100000001000100100100";
        ram[14] = "0b01010001000011110101110110110010";
        ram[15] = "0b11010101000000010000111100100011";
        ram[16] = "0b11110010111000010010111000001110";
        ram[17] = "0b11100010000000100010001000010100";
        ram[18] = "0b01110010000111100000000011011110";
        ram[19] = "0b11101100001000111111001100010010";
        ram[20] = "0b00111111111001011111111100011101";
        ram[21] = "0b11110010111101010001001100001110";
        ram[22] = "0b01100101110110110001110111001011";
        ram[23] = "0b10101011000000110000010000010001";
        ram[24] = "0b01011110011001110000000000110010";
        ram[25] = "0b11010011111010111101011001011100";
        ram[26] = "0b00001001001111011100001010111101";
        ram[27] = "0b11100011110101111111110101001010";
        ram[28] = "0b11010001110101001111111111100011";
        ram[29] = "0b00011111000111101001010001111110";
        ram[30] = "0b00111001111111101100111111100011";
        ram[31] = "0b10010011111001101101000011101110";
        ram[32] = "0b11010100101100000010111111011111";
        ram[33] = "0b11111111001000101100111100101101";
        ram[34] = "0b00011001001011110010000100000010";
        ram[35] = "0b10100010110100001010001111101111";
        ram[36] = "0b00101110111010100011001011100000";
        ram[37] = "0b10110111111000011101010011101010";
        ram[38] = "0b00010001001100001111001101110101";
        ram[39] = "0b01000100000111100011010111111001";
        ram[40] = "0b11110000011100000001111111001111";
        ram[41] = "0b00011111111000000111111001111011";
        ram[42] = "0b01010000100100011111010111111101";
        ram[43] = "0b00100000111101010011100111101001";
        ram[44] = "0b11100111011100000100000011101011";
        ram[45] = "0b00111110000111100010110101111010";
        ram[46] = "0b00001101111101001110011111110001";
        ram[47] = "0b10110010111100000000000011011110";
        ram[48] = "0b00001011000111111111001010111011";
        ram[49] = "0b11100100000000001001010111000100";
        ram[50] = "0b00010001001000100000000101100001";
        ram[51] = "0b11101110111110110101011100011111";
        ram[52] = "0b01011101011111001110111011101101";
        ram[53] = "0b11010011000111110110010001110000";
        ram[54] = "0b11010101000101011001111111100010";
        ram[55] = "0b11100101101001000011110000001001";
        ram[56] = "0b10010000010011100100111010101100";
        ram[57] = "0b11010000111100000101001001011011";
        ram[58] = "0b00010000011100101001001111000101";
        ram[59] = "0b11100110101111101001010000011101";
        ram[60] = "0b11111110111111111010000111110000";
        ram[61] = "0b00101011110010011100110000010110";
        ram[62] = "0b11100011001100011101111011010000";
        ram[63] = "0b01101111111100001110111000101110";
        ram[64] = "0b01001001110111111001111100001111";
        ram[65] = "0b00001101001110010001000101011100";
        ram[66] = "0b00100110110000011010011111010100";
        ram[67] = "0b00100110101001011111001111111110";
        ram[68] = "0b11101001111010101001110111111110";
        ram[69] = "0b00111100111110111111110111010100";
        ram[70] = "0b11110000111000011111000000100011";
        ram[71] = "0b01111101111010110000100110010000";
        ram[72] = "0b10100001111000111111111010110011";
        ram[73] = "0b01010101111011110010001011100101";
        ram[74] = "0b11110010001011110101110100111111";
        ram[75] = "0b01011100001011000001011011110011";
        ram[76] = "0b11011110001010111100001011010100";
        ram[77] = "0b00010100111001000001001011110010";
        ram[78] = "0b00000000000011010001001000011010";
        ram[79] = "0b01001011111111101101110011010010";
        ram[80] = "0b00011110110111100110011001011110";
        ram[81] = "0b10111111110000101001111000001111";
        ram[82] = "0b00101011101000111100001100011101";
        ram[83] = "0b01000000011001101111001011010010";
        ram[84] = "0b10011101110111111100000111110000";
        ram[85] = "0b11111111001011100010000100011111";
        ram[86] = "0b11100000111100000001000100011111";
        ram[87] = "0b11110001000011001010111111110000";
        ram[88] = "0b10011010001000111111111111111111";
        ram[89] = "0b11011101111011000001101100100000";
        ram[90] = "0b00010010111000000001111100010000";
        ram[91] = "0b11110000111011101010110000101110";
        ram[92] = "0b10011111000011101011110000010001";
        ram[93] = "0b00001110000000111101110101010000";
        ram[94] = "0b01000011110011110011000000011111";
        ram[95] = "0b11010010110100001011011001011111";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(convDSPOpt_4_convb8t) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 96;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


convDSPOpt_4_convb8t_ram* meminst;


SC_CTOR(convDSPOpt_4_convb8t) {
meminst = new convDSPOpt_4_convb8t_ram("convDSPOpt_4_convb8t_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~convDSPOpt_4_convb8t() {
    delete meminst;
}


};//endmodule
#endif
