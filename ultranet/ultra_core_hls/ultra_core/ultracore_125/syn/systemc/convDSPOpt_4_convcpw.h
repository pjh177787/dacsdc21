// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __convDSPOpt_4_convcpw_H__
#define __convDSPOpt_4_convcpw_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct convDSPOpt_4_convcpw_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 96;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(convDSPOpt_4_convcpw_ram) {
        ram[0] = "0b11111101000011011100111001001111";
        ram[1] = "0b00011111110100100011000100000001";
        ram[2] = "0b10011110000000000000000000011111";
        ram[3] = "0b11101011000000100000100100000100";
        ram[4] = "0b10011101110111100001101111001110";
        ram[5] = "0b00111110111110101110010000110011";
        ram[6] = "0b00100011111000010011110011011110";
        ram[7] = "0b00010011010111101111100111111111";
        ram[8] = "0b00100000001001010001111000001111";
        ram[9] = "0b11010001111111000010001000111101";
        ram[10] = "0b01110100101100001111000110101110";
        ram[11] = "0b00010100010000101111011111111101";
        ram[12] = "0b00101111011111110001010111010100";
        ram[13] = "0b00001110000100010101000001000010";
        ram[14] = "0b00111101000110011101111100100001";
        ram[15] = "0b01001111000010011110000100110011";
        ram[16] = "0b11000000001111010000111011101111";
        ram[17] = "0b00011101110000100100110111001011";
        ram[18] = "0b11001011010010111111111000001011";
        ram[19] = "0b11111100111010010000001000110001";
        ram[20] = "0b01001111000101010001111111111111";
        ram[21] = "0b00001110111011111111111011111111";
        ram[22] = "0b01001110111111001110110110101011";
        ram[23] = "0b00000101000010011110000100010001";
        ram[24] = "0b00010101111111010000111011010001";
        ram[25] = "0b00000010110100010001000111101100";
        ram[26] = "0b00000000001011110010000000010001";
        ram[27] = "0b00001100001000000001111100110000";
        ram[28] = "0b11101110001000110001111110101111";
        ram[29] = "0b00000011010011011110111111011101";
        ram[30] = "0b00001001000111110001110110101011";
        ram[31] = "0b00100000010111111100111100100001";
        ram[32] = "0b11111110111101001101111111000010";
        ram[33] = "0b11010010001011101101111000000111";
        ram[34] = "0b11010101111111100010111011010010";
        ram[35] = "0b00110001000100111100000100100110";
        ram[36] = "0b11101100111010111110001110100001";
        ram[37] = "0b11101111001000111111010101010100";
        ram[38] = "0b11101111111100001110111111101100";
        ram[39] = "0b00001010000000100000111100101111";
        ram[40] = "0b00001111101100101100000011101111";
        ram[41] = "0b00000000110001001011110101010101";
        ram[42] = "0b00011101110011111010000011101010";
        ram[43] = "0b00001101000100101100001000001001";
        ram[44] = "0b01000001101101100011111100001010";
        ram[45] = "0b00100011111100011011111101000010";
        ram[46] = "0b00000000111111011100000111111011";
        ram[47] = "0b10111011111100101011111011111010";
        ram[48] = "0b11110000110100101111111111111110";
        ram[49] = "0b10110010001000011100000111100100";
        ram[50] = "0b00000000111000101110111100111111";
        ram[51] = "0b11010000111100100010010111110011";
        ram[52] = "0b11010000000100000010110000101100";
        ram[53] = "0b11110010111111110001001100000010";
        ram[54] = "0b00101110101100010000111001100001";
        ram[55] = "0b11001111111100011111001111110001";
        ram[56] = "0b00001101110000101010000100001101";
        ram[57] = "0b11110010110100101101111101100010";
        ram[58] = "0b11101100000000010110001000100011";
        ram[59] = "0b11010001110000111110111100001110";
        ram[60] = "0b00100000110011010001001000000011";
        ram[61] = "0b00000001000100001101000110101110";
        ram[62] = "0b00101100111011011110111101000010";
        ram[63] = "0b00000000000100111101010000100001";
        ram[64] = "0b11101101100100000100000100001100";
        ram[65] = "0b11110001001000001101001111001110";
        ram[66] = "0b00001111110111111111110100100010";
        ram[67] = "0b00010001000000001111110100100001";
        ram[68] = "0b11100010100111011110001000000000";
        ram[69] = "0b11101111001111111111000000000001";
        ram[70] = "0b11110001000111110000111100100001";
        ram[71] = "0b00000001000100100000001000010011";
        ram[72] = "0b00111011001110010000010111100111";
        ram[73] = "0b11010000001000100001111100110010";
        ram[74] = "0b00010110111000011100011101010011";
        ram[75] = "0b10011101111100000111000111000001";
        ram[76] = "0b01000000011111111001001000110100";
        ram[77] = "0b11100010001011010111001000101001";
        ram[78] = "0b00111001110010110000011100010100";
        ram[79] = "0b10011011111100110111111111000100";
        ram[80] = "0b00000010001111111100000000100001";
        ram[81] = "0b01000000111111000110110111011110";
        ram[82] = "0b11001101111011100001010011000011";
        ram[83] = "0b10101111111000110010110011000100";
        ram[84] = "0b01101001011101000000111111011010";
        ram[85] = "0b00100001000010110000011100010011";
        ram[86] = "0b01001011101011101110001100101001";
        ram[87] = "0b10100100110000100111111111001001";
        ram[88] = "0b00100101011111111010001011100001";
        ram[89] = "0b00011111000011000001011101111011";
        ram[90] = "0b11111011100111111011011010010011";
        ram[91] = "0b10010111101001110001001011011110";
        ram[92] = "0b10100100111010110110111011001101";
        ram[93] = "0b11000010000100111101110100010001";
        ram[94] = "0b00001101001101111110000011100010";
        ram[95] = "0b10010011000000001011001111010001";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(convDSPOpt_4_convcpw) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 96;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


convDSPOpt_4_convcpw_ram* meminst;


SC_CTOR(convDSPOpt_4_convcpw) {
meminst = new convDSPOpt_4_convcpw_ram("convDSPOpt_4_convcpw_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~convDSPOpt_4_convcpw() {
    delete meminst;
}


};//endmodule
#endif
