// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __convDSPOpt_4_convcmv_H__
#define __convDSPOpt_4_convcmv_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct convDSPOpt_4_convcmv_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 96;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(convDSPOpt_4_convcmv_ram) {
        ram[0] = "0b00101110110010101110110100110010";
        ram[1] = "0b11001110000011111110000011111110";
        ram[2] = "0b11000011111010011110001101010110";
        ram[3] = "0b11001011110111110010000011110001";
        ram[4] = "0b00000011001100101101110000100010";
        ram[5] = "0b11111110000111101110111111111110";
        ram[6] = "0b00000000110011001111000000010100";
        ram[7] = "0b11110001110000011101110000011010";
        ram[8] = "0b11101110001011110001010011100001";
        ram[9] = "0b11101111110110110001100111111111";
        ram[10] = "0b00011011110000111110101011010000";
        ram[11] = "0b11110110000000010101111011101110";
        ram[12] = "0b01010000011100001001110100100011";
        ram[13] = "0b11100000011110110011010000101110";
        ram[14] = "0b00011110100111000010011000100101";
        ram[15] = "0b11010011101111100100001110101111";
        ram[16] = "0b11011011000000001110110111101101";
        ram[17] = "0b00101011110110010100000011000111";
        ram[18] = "0b10100001111011101101100111101110";
        ram[19] = "0b11101110101111000001101011011100";
        ram[20] = "0b00001111110000101101000110010100";
        ram[21] = "0b01000000100110010000110111011101";
        ram[22] = "0b00000000111010011110111010011101";
        ram[23] = "0b11011101001011001100110011110010";
        ram[24] = "0b00000000111011101101111100011101";
        ram[25] = "0b00000000111000011011111011010001";
        ram[26] = "0b00101111000011010001111100010000";
        ram[27] = "0b11100000111111010000000100010100";
        ram[28] = "0b11110001111111001110111000101110";
        ram[29] = "0b11010001000000011110110111110010";
        ram[30] = "0b11101111000111001101111100010000";
        ram[31] = "0b00011100111110101111000100010100";
        ram[32] = "0b00101111111011011010000011110000";
        ram[33] = "0b00000001111011110000110000011101";
        ram[34] = "0b11000011000011010100001100010010";
        ram[35] = "0b00101111111010111110000000110011";
        ram[36] = "0b00101001000011111110111010100011";
        ram[37] = "0b10011111000000010100111100110000";
        ram[38] = "0b01110010101110110001001100101101";
        ram[39] = "0b00001111101111101101011111010111";
        ram[40] = "0b10101100110100010100111110011101";
        ram[41] = "0b11011101010011111110110100010111";
        ram[42] = "0b10110000110011000001111001010011";
        ram[43] = "0b00101111111011001110110111100011";
        ram[44] = "0b11110000010000100011111000100000";
        ram[45] = "0b01011101101011010000111110111110";
        ram[46] = "0b11100100110111000100111000010001";
        ram[47] = "0b11111011000111101101111000101111";
        ram[48] = "0b00111111110100001101001111111110";
        ram[49] = "0b11010000000011001111110000011111";
        ram[50] = "0b11101101111111110010000101110101";
        ram[51] = "0b11110010000001001111110100101101";
        ram[52] = "0b11110010101100101101000000000001";
        ram[53] = "0b00011101110111100001101111110100";
        ram[54] = "0b11101011110110110000111111110001";
        ram[55] = "0b11100000101011100011001110111101";
        ram[56] = "0b11100011101001100000000100000001";
        ram[57] = "0b00011110000011010001110100010010";
        ram[58] = "0b11011100110100000001111111101110";
        ram[59] = "0b11101100111100001111000100101101";
        ram[60] = "0b11101110110000101111111111010000";
        ram[61] = "0b11111101000011010010000011110010";
        ram[62] = "0b10011111000111001111000111101101";
        ram[63] = "0b11111110000010110000110111110101";
        ram[64] = "0b11011111111100000001001100011111";
        ram[65] = "0b10111111000010111110111111110100";
        ram[66] = "0b11010000111000000000111100001111";
        ram[67] = "0b11011011000011111110000111100011";
        ram[68] = "0b11001111111011010100010001001011";
        ram[69] = "0b10100000111110111110110100000010";
        ram[70] = "0b11011100000111110001000001001111";
        ram[71] = "0b11111100010011111111111100000101";
        ram[72] = "0b11100001100111100001111100100001";
        ram[73] = "0b00111111111000000001010011100110";
        ram[74] = "0b11010101000011111111000111010011";
        ram[75] = "0b11111111000011100000111001001011";
        ram[76] = "0b11110001101111000000111111110000";
        ram[77] = "0b11100011111010100011000100000001";
        ram[78] = "0b11110110001000011011001010100001";
        ram[79] = "0b00010110110101001101001000111001";
        ram[80] = "0b11000000111011101101110011111111";
        ram[81] = "0b00000010110110101100010101001100";
        ram[82] = "0b00010010000000100001001011000011";
        ram[83] = "0b00010011110101001101000111111001";
        ram[84] = "0b11101111011111101111111001000010";
        ram[85] = "0b11110001001011011111001000010001";
        ram[86] = "0b11110001110111111101111111001111";
        ram[87] = "0b00010010111111011011111011111010";
        ram[88] = "0b00110111010111110000111001010000";
        ram[89] = "0b11110010111111111101111011101111";
        ram[90] = "0b11111110001111101110110111100001";
        ram[91] = "0b00000111000100001011000111111011";
        ram[92] = "0b11000011100111000000111000011111";
        ram[93] = "0b10110010000001000001000000010001";
        ram[94] = "0b00011111001001001110000100010010";
        ram[95] = "0b00001111111000000011010100001100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(convDSPOpt_4_convcmv) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 96;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


convDSPOpt_4_convcmv_ram* meminst;


SC_CTOR(convDSPOpt_4_convcmv) {
meminst = new convDSPOpt_4_convcmv_ram("convDSPOpt_4_convcmv_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~convDSPOpt_4_convcmv() {
    delete meminst;
}


};//endmodule
#endif
