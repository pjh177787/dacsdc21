// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __convDSPOpt_4_convccu_H__
#define __convDSPOpt_4_convccu_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct convDSPOpt_4_convccu_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 96;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(convDSPOpt_4_convccu_ram) {
        ram[0] = "0b00100000101111100000000101011110";
        ram[1] = "0b00100010001100001101110001000010";
        ram[2] = "0b01001011001100101111001111110001";
        ram[3] = "0b00000000001100110101111100011001";
        ram[4] = "0b01000011110001000000000111110001";
        ram[5] = "0b00010100001011110100110011001111";
        ram[6] = "0b01001110000000100000000011011111";
        ram[7] = "0b00010010000000000010001011011100";
        ram[8] = "0b11111101111000110011111100011101";
        ram[9] = "0b00110001000111111110000011101101";
        ram[10] = "0b00100001001011100000110110110000";
        ram[11] = "0b11010010111011101110111011000000";
        ram[12] = "0b11111101000111110001111100001100";
        ram[13] = "0b11011100111011001100111111010011";
        ram[14] = "0b11000001000001101111000111111100";
        ram[15] = "0b00010000111101011111111100100010";
        ram[16] = "0b11100000000011111100000000000000";
        ram[17] = "0b11011110110011100000111000101100";
        ram[18] = "0b10011100110000011110110011001011";
        ram[19] = "0b00011111000011111111101111111110";
        ram[20] = "0b11010011000000100010000100000100";
        ram[21] = "0b00100010110100010011111100101111";
        ram[22] = "0b11011111111101100000000000001100";
        ram[23] = "0b11110100111001011101000000010011";
        ram[24] = "0b00111011001111110011011101000010";
        ram[25] = "0b00011011110000101111111100100100";
        ram[26] = "0b11001111011011111111000000110011";
        ram[27] = "0b00001100001000110010101000000110";
        ram[28] = "0b00101101001111001111001110010010";
        ram[29] = "0b11111100101100000000110101011110";
        ram[30] = "0b11001101000100010000000101100011";
        ram[31] = "0b11001011001000110100100111110101";
        ram[32] = "0b11110010000011110011110110010000";
        ram[33] = "0b00001100110000010001000100101101";
        ram[34] = "0b11011110000001010010010101000001";
        ram[35] = "0b11000000110000100101101011110001";
        ram[36] = "0b00111110101111110010010011100010";
        ram[37] = "0b11001110101100101001101000101111";
        ram[38] = "0b11100000000011010000101100101100";
        ram[39] = "0b10011101010100001100000011101010";
        ram[40] = "0b01000011111011010000010000010001";
        ram[41] = "0b11101110000100110000101111011110";
        ram[42] = "0b11100000000011101100111000101110";
        ram[43] = "0b10100000011011011100001000000111";
        ram[44] = "0b11011011101010100001110101000000";
        ram[45] = "0b10100000011100110101111111010010";
        ram[46] = "0b11010010101111000000110011100100";
        ram[47] = "0b10110100001011100011001111110100";
        ram[48] = "0b11011110000000100110011110010101";
        ram[49] = "0b00010111010000011100110110010100";
        ram[50] = "0b00101111011110111110011101110100";
        ram[51] = "0b00101110010011000100011011010100";
        ram[52] = "0b00100001011000000001010111100010";
        ram[53] = "0b11110100000011111110001010011110";
        ram[54] = "0b00000010000000010001000100101110";
        ram[55] = "0b00010001010100101110111000010010";
        ram[56] = "0b11001101001111000011001100101111";
        ram[57] = "0b00000001111111111111000011101001";
        ram[58] = "0b11000011110000000011110100000100";
        ram[59] = "0b11100110000111101111000000011110";
        ram[60] = "0b00001111110111010010101110111110";
        ram[61] = "0b01001111011010011100111100100000";
        ram[62] = "0b11010001001000000010000011100101";
        ram[63] = "0b11000010001011100101110000000000";
        ram[64] = "0b00010010000111110010000010010000";
        ram[65] = "0b11111101110111110010110001001101";
        ram[66] = "0b11000000000111100000000110010011";
        ram[67] = "0b10110001110111110101000111101101";
        ram[68] = "0b11110010001100101111001010110010";
        ram[69] = "0b11001111111111110001100100010011";
        ram[70] = "0b10111101110011010011100110010011";
        ram[71] = "0b00100001000011010011011000011111";
        ram[72] = "0b10110001101101011011001111111111";
        ram[73] = "0b00001110111000100000101000100000";
        ram[74] = "0b11101110111100000000000000000000";
        ram[75] = "0b11100000001000011110110100001111";
        ram[76] = "0b10110101100100101110000000010100";
        ram[77] = "0b11011110111000110010110001000010";
        ram[78] = "0b11101110110111000000111011110001";
        ram[79] = "0b11101111001100011001110100011100";
        ram[80] = "0b11011101100100011101110100000001";
        ram[81] = "0b00110000000100011100110101110001";
        ram[82] = "0b11110011110100000001000000000000";
        ram[83] = "0b11110001001001011100000100101010";
        ram[84] = "0b11111100100101001011111100001110";
        ram[85] = "0b00011101001011110000101011000000";
        ram[86] = "0b00011100111010110100000111111110";
        ram[87] = "0b00001011111111001101111100100000";
        ram[88] = "0b11100010101100001100001111011010";
        ram[89] = "0b00101110001111010001001111000111";
        ram[90] = "0b11100010000100000001001000111010";
        ram[91] = "0b11001100111011100011010010110001";
        ram[92] = "0b00101110011110011011111100110010";
        ram[93] = "0b10011101000011000111011101001111";
        ram[94] = "0b11110001100100011010011000001111";
        ram[95] = "0b10010100110101110011101110011111";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(convDSPOpt_4_convccu) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 96;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


convDSPOpt_4_convccu_ram* meminst;


SC_CTOR(convDSPOpt_4_convccu) {
meminst = new convDSPOpt_4_convccu_ram("convDSPOpt_4_convccu_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~convDSPOpt_4_convccu() {
    delete meminst;
}


};//endmodule
#endif
