// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __convDSPOpt_4_convcrw_H__
#define __convDSPOpt_4_convcrw_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct convDSPOpt_4_convcrw_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 96;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(convDSPOpt_4_convcrw_ram) {
        ram[0] = "0b00010010001111101111110100110000";
        ram[1] = "0b00100010000000011111001011110000";
        ram[2] = "0b11100010111100110000001011110000";
        ram[3] = "0b11110000111000100010110100010000";
        ram[4] = "0b10111101001100101101110010110001";
        ram[5] = "0b11111010000000001100001000101011";
        ram[6] = "0b11001001001000010011110100011100";
        ram[7] = "0b11111001110011000000100100110010";
        ram[8] = "0b00100000001100010111001011010001";
        ram[9] = "0b00100000110100010010000000010000";
        ram[10] = "0b00011100011111100010110111111101";
        ram[11] = "0b01001011010011111110100100101010";
        ram[12] = "0b01011111101111110010000000011110";
        ram[13] = "0b01001110001010101010111100001111";
        ram[14] = "0b01000010110110101110111100011011";
        ram[15] = "0b00001110000010100010111100010010";
        ram[16] = "0b11011110111000110010101011001111";
        ram[17] = "0b00011001111100101110001011101111";
        ram[18] = "0b10011011111011001110110011111011";
        ram[19] = "0b10111100110111101111101000111101";
        ram[20] = "0b00010100110000110001011110010011";
        ram[21] = "0b11010001110100101111000110110100";
        ram[22] = "0b10111011001011011110111001100000";
        ram[23] = "0b11111110000110111111000000101111";
        ram[24] = "0b00010101000101001111000000100000";
        ram[25] = "0b11111100111011111110110111011011";
        ram[26] = "0b00001111110111010000111011111110";
        ram[27] = "0b00011101101111100000111000100001";
        ram[28] = "0b10101100000100111111001110011111";
        ram[29] = "0b00011101010000111111110110010101";
        ram[30] = "0b11111011010011011111111011010000";
        ram[31] = "0b01001110111110101111111100110000";
        ram[32] = "0b10010001111010111100001011110001";
        ram[33] = "0b11100000000111110001011000000011";
        ram[34] = "0b11100111001111101010000011111111";
        ram[35] = "0b00101011010011001111001111000000";
        ram[36] = "0b00011110010111010011111100001101";
        ram[37] = "0b00111110111000000011000010011001";
        ram[38] = "0b11100010000011001111110110110000";
        ram[39] = "0b11011101110011111100101111101111";
        ram[40] = "0b00101110010110010000000100010001";
        ram[41] = "0b00010000000100010000010110011001";
        ram[42] = "0b11110000001110101100000011010010";
        ram[43] = "0b11100001111011101110010111000010";
        ram[44] = "0b00000100010010011110000000100001";
        ram[45] = "0b10111101000000101111001110011010";
        ram[46] = "0b00001111001010111100110011110011";
        ram[47] = "0b00010010111011011010011110111111";
        ram[48] = "0b11110000001000000001110011001111";
        ram[49] = "0b11110110000111011001001111100011";
        ram[50] = "0b00110000111000011110000001000001";
        ram[51] = "0b11111110001111110000010100010100";
        ram[52] = "0b11110000110111110001111111111100";
        ram[53] = "0b10110111111110101001010011011110";
        ram[54] = "0b00010000101100011101000100110001";
        ram[55] = "0b00001110000011101111001111110001";
        ram[56] = "0b11010000100100101111000100111010";
        ram[57] = "0b11010111110110111001010111010001";
        ram[58] = "0b00000101100101010010111111110010";
        ram[59] = "0b00001101001100101100001011101101";
        ram[60] = "0b00011100011000010000000111000010";
        ram[61] = "0b10110001001011110110111101101011";
        ram[62] = "0b00111011110110110000000101011111";
        ram[63] = "0b11101110110100010001000011111010";
        ram[64] = "0b11100100011111100011001011001100";
        ram[65] = "0b00110001110000000111101101111101";
        ram[66] = "0b00111101100111011010000010111111";
        ram[67] = "0b11010001111100011101111011111101";
        ram[68] = "0b00000011101111110001001000011100";
        ram[69] = "0b11010010110100000011111111111101";
        ram[70] = "0b11110000001011011100010011100001";
        ram[71] = "0b11110000000111101001011000010000";
        ram[72] = "0b00111110000000010010000111001101";
        ram[73] = "0b11111110111100011100001100001011";
        ram[74] = "0b00101110110000010011111011111111";
        ram[75] = "0b11100001110111011100111111110010";
        ram[76] = "0b00001111111100010100000111001111";
        ram[77] = "0b00010000110011111110000000010000";
        ram[78] = "0b00000001001000100011101111000010";
        ram[79] = "0b00101110000111011011111111011110";
        ram[80] = "0b00111100110011010001111111101111";
        ram[81] = "0b11101110000010101101110111110011";
        ram[82] = "0b11010001001000011101000110110010";
        ram[83] = "0b00101110010011010000110100010000";
        ram[84] = "0b11110011000000011111111100001110";
        ram[85] = "0b11010001000100110001000011010101";
        ram[86] = "0b11100101110111101111111000010000";
        ram[87] = "0b00011111111011010000000100000100";
        ram[88] = "0b11101101110000011110111000110001";
        ram[89] = "0b11111111001000011101000011000000";
        ram[90] = "0b11010011000111010000000100001111";
        ram[91] = "0b00001101110111010000001100000011";
        ram[92] = "0b11110000110000001011001001001111";
        ram[93] = "0b10111110010000011110001011001011";
        ram[94] = "0b11110010110111011101000011110010";
        ram[95] = "0b00011110111011101101010000100001";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(convDSPOpt_4_convcrw) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 96;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


convDSPOpt_4_convcrw_ram* meminst;


SC_CTOR(convDSPOpt_4_convcrw) {
meminst = new convDSPOpt_4_convcrw_ram("convDSPOpt_4_convcrw_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~convDSPOpt_4_convcrw() {
    delete meminst;
}


};//endmodule
#endif
