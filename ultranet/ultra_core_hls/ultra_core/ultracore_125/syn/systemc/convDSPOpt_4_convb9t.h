// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __convDSPOpt_4_convb9t_H__
#define __convDSPOpt_4_convb9t_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct convDSPOpt_4_convb9t_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 96;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(convDSPOpt_4_convb9t_ram) {
        ram[0] = "0b00000011101100110011010011110001";
        ram[1] = "0b00010100000000100000111100111100";
        ram[2] = "0b11100101111011000001000000011111";
        ram[3] = "0b11111101010101011100001000100001";
        ram[4] = "0b01001111101100111111010000001111";
        ram[5] = "0b00101110000100101010111100101110";
        ram[6] = "0b11010001111110111100101011001100";
        ram[7] = "0b11011101110111111101000111111111";
        ram[8] = "0b00011101000000001111001000001101";
        ram[9] = "0b00110010111000011001110100000001";
        ram[10] = "0b00001111110111011101110011111110";
        ram[11] = "0b00111110111100000000001100001100";
        ram[12] = "0b00000100011110110001110011110001";
        ram[13] = "0b11100001110100000110100100001110";
        ram[14] = "0b10110000111111110101110111110100";
        ram[15] = "0b11101111110100001111110011111101";
        ram[16] = "0b00110101101111100000110111111111";
        ram[17] = "0b00100011110001010001100100111100";
        ram[18] = "0b00001101010011010000010100111111";
        ram[19] = "0b11110100000101101011111100011111";
        ram[20] = "0b00000001110000101001110011011110";
        ram[21] = "0b01001110100101011100110000011110";
        ram[22] = "0b00011011000011011010010111001001";
        ram[23] = "0b11001111111001011110000100000001";
        ram[24] = "0b00001110011110111110001100001111";
        ram[25] = "0b11101111000000000111011001010100";
        ram[26] = "0b00001110110111011100011000000010";
        ram[27] = "0b00010000001001000111000100101001";
        ram[28] = "0b11010000010100001101111100001110";
        ram[29] = "0b11000001111111010111000101001111";
        ram[30] = "0b11111111111100001111000111000110";
        ram[31] = "0b10011100000000101010000000001110";
        ram[32] = "0b11100100100111110001111000010001";
        ram[33] = "0b11001111000011110001110111100001";
        ram[34] = "0b11101111000100111111000100000011";
        ram[35] = "0b11100001111101001011010000100001";
        ram[36] = "0b00010000110011101101001100001111";
        ram[37] = "0b10110010111100101101001010111111";
        ram[38] = "0b11101001000011001111111000101111";
        ram[39] = "0b00000000000011100000000011011101";
        ram[40] = "0b00000101001100010001000111100001";
        ram[41] = "0b00111110000100000000111001000000";
        ram[42] = "0b00111010110000001110110111101011";
        ram[43] = "0b11001101000100010010111111000001";
        ram[44] = "0b11111111101100010000001111101111";
        ram[45] = "0b01000010001000000001010011101110";
        ram[46] = "0b00010010111001001101001011100000";
        ram[47] = "0b00010000111000001111111100011111";
        ram[48] = "0b11101111110011011110001011111110";
        ram[49] = "0b00000010111000011011111011000110";
        ram[50] = "0b00100001111010100010111100110010";
        ram[51] = "0b11101101110110010100001000110011";
        ram[52] = "0b00001100000010110000000111101111";
        ram[53] = "0b11100000101000010100000000000100";
        ram[54] = "0b00100000110111100000000000100011";
        ram[55] = "0b00101101001011000010111111111011";
        ram[56] = "0b10101111111000100001001011011111";
        ram[57] = "0b00011110110011100110000110111101";
        ram[58] = "0b00010000010000001011110110110000";
        ram[59] = "0b00000000010011011011111000001011";
        ram[60] = "0b00011100000011110001000111110010";
        ram[61] = "0b11001110101111001110000011110011";
        ram[62] = "0b11010000010011110000111111100000";
        ram[63] = "0b00011011001111110010000100010000";
        ram[64] = "0b11000010000011110000011001010000";
        ram[65] = "0b10101110001010100010011111100001";
        ram[66] = "0b11001111110101011101011111001110";
        ram[67] = "0b11011101011001010001111100001101";
        ram[68] = "0b11100000000000100000000001101101";
        ram[69] = "0b11000011010100100010010010101100";
        ram[70] = "0b11110010111101011100111010011111";
        ram[71] = "0b00001010000111111111000011111111";
        ram[72] = "0b11000001110000111101000010100001";
        ram[73] = "0b00000101110000000000000111010101";
        ram[74] = "0b11010011001110110001110100001111";
        ram[75] = "0b01011001001010101011001111100011";
        ram[76] = "0b10111111111110011010000011000111";
        ram[77] = "0b00010001111101011110001100110001";
        ram[78] = "0b00001110110110011001000111011110";
        ram[79] = "0b00011010110110011111101111001111";
        ram[80] = "0b11001010110010011111001100010000";
        ram[81] = "0b11101100101111111001000000101101";
        ram[82] = "0b01001010100111101001011111010011";
        ram[83] = "0b00101101111100101110111100010000";
        ram[84] = "0b10011101111011111101000111111110";
        ram[85] = "0b11101100001011101111110111101101";
        ram[86] = "0b11011110111011100010000000111111";
        ram[87] = "0b00001010001011011001111111100001";
        ram[88] = "0b10011111000011110000001011100001";
        ram[89] = "0b11011111110011111011101101000010";
        ram[90] = "0b00010100000100000001111100110011";
        ram[91] = "0b00001111111111111010001000010001";
        ram[92] = "0b10100100111011000000111100010100";
        ram[93] = "0b00110001110000111010101001011111";
        ram[94] = "0b11100100001000100010111001010001";
        ram[95] = "0b11101111111000011010001100010010";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(convDSPOpt_4_convb9t) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 96;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


convDSPOpt_4_convb9t_ram* meminst;


SC_CTOR(convDSPOpt_4_convb9t) {
meminst = new convDSPOpt_4_convb9t_ram("convDSPOpt_4_convb9t_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~convDSPOpt_4_convb9t() {
    delete meminst;
}


};//endmodule
#endif
