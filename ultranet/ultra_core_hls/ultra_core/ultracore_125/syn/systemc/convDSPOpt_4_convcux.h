// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __convDSPOpt_4_convcux_H__
#define __convDSPOpt_4_convcux_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct convDSPOpt_4_convcux_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 96;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(convDSPOpt_4_convcux_ram) {
        ram[0] = "0b11000011110111101101110100100001";
        ram[1] = "0b11011111110100010111101100010000";
        ram[2] = "0b10110000111011001101111000000000";
        ram[3] = "0b00001101001111100100001100010000";
        ram[4] = "0b11100010100100011010000111100001";
        ram[5] = "0b11110000110000100100000001001111";
        ram[6] = "0b10111100110100000000010001101111";
        ram[7] = "0b00001111000000011111001000101110";
        ram[8] = "0b00110000101111001110101111100010";
        ram[9] = "0b01000010000011011100110111110000";
        ram[10] = "0b11100001000111000011001100101111";
        ram[11] = "0b00110000111011000000000111100000";
        ram[12] = "0b11110001000010110011111100110001";
        ram[13] = "0b11101111000111011101000011101101";
        ram[14] = "0b11101110111000100101000000100001";
        ram[15] = "0b00111011001111110010111100010011";
        ram[16] = "0b10010000000010100001110001001011";
        ram[17] = "0b11011110001110110000000100111010";
        ram[18] = "0b10100010001100010110111000101101";
        ram[19] = "0b01010000000111010110111010110111";
        ram[20] = "0b10100010111011101101110100001101";
        ram[21] = "0b11011101101100001111001000101100";
        ram[22] = "0b10101111010000110011000011011100";
        ram[23] = "0b00101111110000010000111000010010";
        ram[24] = "0b11101111000001010001001000100011";
        ram[25] = "0b01011111000010010100110111100000";
        ram[26] = "0b01010001001111110010000111101011";
        ram[27] = "0b00010001111111100000001001000000";
        ram[28] = "0b00100000001001010010000111011111";
        ram[29] = "0b00110010001011000100000000010000";
        ram[30] = "0b01110011000000000011000011011110";
        ram[31] = "0b11110101111000011010010100100000";
        ram[32] = "0b01111111001001100001001111100100";
        ram[33] = "0b00000010001011000111001000100000";
        ram[34] = "0b01110000001000101101011000100000";
        ram[35] = "0b11010110111001000011011000010010";
        ram[36] = "0b00010010111111100101110100110000";
        ram[37] = "0b00010010010100001110110100010010";
        ram[38] = "0b00010010000001101111101100100011";
        ram[39] = "0b00010001000100000011110111110000";
        ram[40] = "0b00000011110010101101000000100000";
        ram[41] = "0b10100100001011110001111111111110";
        ram[42] = "0b00010001000000111110000100100100";
        ram[43] = "0b00011011000000100100000100001110";
        ram[44] = "0b01000001001010011011110000101111";
        ram[45] = "0b10110100111100011101110011101101";
        ram[46] = "0b11100110110101001101011101010011";
        ram[47] = "0b00001110111000010011000100001111";
        ram[48] = "0b11101101000010010001000110100011";
        ram[49] = "0b01001111111011111011110100010110";
        ram[50] = "0b00110001010010011011110011110100";
        ram[51] = "0b00100000011111110001000000011111";
        ram[52] = "0b01000000111010111101001111111110";
        ram[53] = "0b01101101000000100011111000010100";
        ram[54] = "0b00101110000010011101010011000001";
        ram[55] = "0b10011101111111100000111111111100";
        ram[56] = "0b01101110100101111101000000111001";
        ram[57] = "0b01000010001110110000101111100001";
        ram[58] = "0b10100000111110100011111111110001";
        ram[59] = "0b10011011000011110001111111111001";
        ram[60] = "0b11100001000111110000000100000011";
        ram[61] = "0b11110001111100100111000100001010";
        ram[62] = "0b11111100011011001011000011000011";
        ram[63] = "0b00000010101111100110000100001100";
        ram[64] = "0b00111101111111101100000000010010";
        ram[65] = "0b00011101111011110111010011001001";
        ram[66] = "0b11100011001111111101111111100010";
        ram[67] = "0b00111101110011000101000111010000";
        ram[68] = "0b00110110111011011100000000110001";
        ram[69] = "0b00110001110111110111011011001010";
        ram[70] = "0b01010111000000011101000100100001";
        ram[71] = "0b00100000000001011110000111110010";
        ram[72] = "0b00011110001100000000111011110010";
        ram[73] = "0b11110000111110101111011011100001";
        ram[74] = "0b00001110000100010010101000111110";
        ram[75] = "0b00011110000111100100110000110000";
        ram[76] = "0b11101010010100100101111011001110";
        ram[77] = "0b00001010001000011101011111100011";
        ram[78] = "0b11100010110001010011110011011001";
        ram[79] = "0b00011011001011100001100100101110";
        ram[80] = "0b10010000111011110111100111111110";
        ram[81] = "0b01111001110101100010010011110100";
        ram[82] = "0b10010011110011110101100111000011";
        ram[83] = "0b11111110111011010000100100111011";
        ram[84] = "0b00011011111011001101111010010000";
        ram[85] = "0b11010011000000001111110100101110";
        ram[86] = "0b11100101111100001100101111010110";
        ram[87] = "0b11110000111111111100010011111100";
        ram[88] = "0b11111100110011111011111010101110";
        ram[89] = "0b11000101111000101100010111101010";
        ram[90] = "0b11100011111011111110111110110100";
        ram[91] = "0b00000001000100011110011000011110";
        ram[92] = "0b11000010111111011100101011110001";
        ram[93] = "0b11110001001000001101111000001101";
        ram[94] = "0b00000000101100011111111010100101";
        ram[95] = "0b00010010110100010010010100011011";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(convDSPOpt_4_convcux) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 96;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


convDSPOpt_4_convcux_ram* meminst;


SC_CTOR(convDSPOpt_4_convcux) {
meminst = new convDSPOpt_4_convcux_ram("convDSPOpt_4_convcux_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~convDSPOpt_4_convcux() {
    delete meminst;
}


};//endmodule
#endif
