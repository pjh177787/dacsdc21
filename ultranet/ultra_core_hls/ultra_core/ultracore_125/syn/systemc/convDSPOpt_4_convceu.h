// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __convDSPOpt_4_convceu_H__
#define __convDSPOpt_4_convceu_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct convDSPOpt_4_convceu_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 96;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(convDSPOpt_4_convceu_ram) {
        ram[0] = "0b11101110101001011110111111111111";
        ram[1] = "0b00011111001011111011010010100100";
        ram[2] = "0b11110010001100100000011100111100";
        ram[3] = "0b11111010101000010100000111011011";
        ram[4] = "0b00101100011111001110010011110000";
        ram[5] = "0b11110001000110110111011100110000";
        ram[6] = "0b00111001101010111011011000000000";
        ram[7] = "0b10110000010100100111010010111110";
        ram[8] = "0b11011001011111100000000011010100";
        ram[9] = "0b10110011001111010011010001111111";
        ram[10] = "0b00011101100100100010000111010111";
        ram[11] = "0b10010100111101001010001111001111";
        ram[12] = "0b11001111111000011101111100001100";
        ram[13] = "0b00111101111000001101110111101110";
        ram[14] = "0b01001011010000000001110100011101";
        ram[15] = "0b00011100000011011001010000110001";
        ram[16] = "0b11100000110001000010000011101110";
        ram[17] = "0b11111101101000011110111100001111";
        ram[18] = "0b00001010010111010010101011101010";
        ram[19] = "0b01011010001111001011110000100000";
        ram[20] = "0b11100101110001110100111111111101";
        ram[21] = "0b00010000111100100010111111011101";
        ram[22] = "0b11101111001011100010101111011001";
        ram[23] = "0b00101101001110011101000011111111";
        ram[24] = "0b01000010000100110111001111100010";
        ram[25] = "0b11001101000100011111001000100100";
        ram[26] = "0b01010110111111100010001000110000";
        ram[27] = "0b11100001101000000010010000000000";
        ram[28] = "0b01000000010100111111011100100110";
        ram[29] = "0b11101101011100111110001111011111";
        ram[30] = "0b01010011000111110100010100001111";
        ram[31] = "0b11110011101101010010011000011110";
        ram[32] = "0b11000011111100001111000100000011";
        ram[33] = "0b11101101010111101101000111101110";
        ram[34] = "0b11110010000110110011110011001111";
        ram[35] = "0b11010011110111001111010100111100";
        ram[36] = "0b11010101011100010001000000000000";
        ram[37] = "0b10111110111011110010111011010011";
        ram[38] = "0b11110000010100111101111010110010";
        ram[39] = "0b11110000001000100011110111011110";
        ram[40] = "0b01010010000100111101010011110011";
        ram[41] = "0b10100010000011110001100110100110";
        ram[42] = "0b00110000000011101010111111010110";
        ram[43] = "0b00001101001100000000101111100010";
        ram[44] = "0b00011011000100100000001011011101";
        ram[45] = "0b00000000010000011010101111001111";
        ram[46] = "0b11110000110000101011001011111111";
        ram[47] = "0b00111110111100010001110100001111";
        ram[48] = "0b11001110110000001101000111111011";
        ram[49] = "0b10110001110100000000111000000001";
        ram[50] = "0b00010011001100100001110100001111";
        ram[51] = "0b00000000001100101101111100010001";
        ram[52] = "0b00100001011100100010000111101001";
        ram[53] = "0b11010100000011101001011011110001";
        ram[54] = "0b01100001101000011100000101010000";
        ram[55] = "0b00011110000011101111010111100000";
        ram[56] = "0b01011110011111111111001010110110";
        ram[57] = "0b00100001110110100001011000011011";
        ram[58] = "0b00011010110111011101111111010101";
        ram[59] = "0b10010001111001000010111111001101";
        ram[60] = "0b00110001000001011110111000001101";
        ram[61] = "0b00001111000010011111111100111110";
        ram[62] = "0b11111110110100001111111111101101";
        ram[63] = "0b00100010000000100001110100011110";
        ram[64] = "0b11100101110111010000111001000001";
        ram[65] = "0b00011111000011010011000000011111";
        ram[66] = "0b11100110110101011111101111100011";
        ram[67] = "0b00010100000000100000101100001011";
        ram[68] = "0b10010101001110100110101100000011";
        ram[69] = "0b00000001000000101110101011111110";
        ram[70] = "0b11100111100100111101111000100101";
        ram[71] = "0b00100010111110110001000000000101";
        ram[72] = "0b11110001001100111110110111111111";
        ram[73] = "0b00010100000011101010110011101001";
        ram[74] = "0b11111111100111101111111000100000";
        ram[75] = "0b11110010101111000010111000101111";
        ram[76] = "0b11001111011111000000001011001110";
        ram[77] = "0b00001110101111101101111110011001";
        ram[78] = "0b11110011100100111110110011010010";
        ram[79] = "0b00000011111011000000111011100101";
        ram[80] = "0b11111011001111011100111110101101";
        ram[81] = "0b11000000101111100010110011111110";
        ram[82] = "0b11110000110011101110001011101111";
        ram[83] = "0b00100001110010110011101111110000";
        ram[84] = "0b10110001111110110111000000011101";
        ram[85] = "0b00111110111011110100001110011001";
        ram[86] = "0b11110000101011101100111001000010";
        ram[87] = "0b00000010111010110010000000010010";
        ram[88] = "0b10100010111111101111111100001111";
        ram[89] = "0b11010001111110100101101010110011";
        ram[90] = "0b11000011111000010000111011010010";
        ram[91] = "0b11101110110011011100111100000001";
        ram[92] = "0b01000100110100001001000111100000";
        ram[93] = "0b00000001000011011010101001110101";
        ram[94] = "0b10010011111100010001111000001110";
        ram[95] = "0b00011100000101011110110111001100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(convDSPOpt_4_convceu) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 96;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


convDSPOpt_4_convceu_ram* meminst;


SC_CTOR(convDSPOpt_4_convceu) {
meminst = new convDSPOpt_4_convceu_ram("convDSPOpt_4_convceu_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~convDSPOpt_4_convceu() {
    delete meminst;
}


};//endmodule
#endif
