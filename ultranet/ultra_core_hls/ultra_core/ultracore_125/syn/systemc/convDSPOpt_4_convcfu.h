// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __convDSPOpt_4_convcfu_H__
#define __convDSPOpt_4_convcfu_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct convDSPOpt_4_convcfu_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 96;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(convDSPOpt_4_convcfu_ram) {
        ram[0] = "0b11100011111000011111001000000010";
        ram[1] = "0b11001101000100010010111011001110";
        ram[2] = "0b00001100101100001110111111111110";
        ram[3] = "0b00011110110001001111000100111111";
        ram[4] = "0b11011111111111010001111000010000";
        ram[5] = "0b11111111110011110011111011011111";
        ram[6] = "0b00100001101100011110111000011111";
        ram[7] = "0b00111100001100001100001100100010";
        ram[8] = "0b00010010101100011111111000011101";
        ram[9] = "0b10110000001000101101111100001110";
        ram[10] = "0b11010001101000111101111011101110";
        ram[11] = "0b10101110110011101011000001001110";
        ram[12] = "0b11111111111011011111000100011100";
        ram[13] = "0b01010010111000011010000111011101";
        ram[14] = "0b11010000111011110011001011101111";
        ram[15] = "0b00000001110111010000110011110011";
        ram[16] = "0b11111110000011010000111000011101";
        ram[17] = "0b00100000111011111100000000111101";
        ram[18] = "0b11011111110111100011000011100000";
        ram[19] = "0b00011111111111010010101011100011";
        ram[20] = "0b11110000000010011110111000100001";
        ram[21] = "0b00100011110000110000000111110001";
        ram[22] = "0b11011111000011000100000011101101";
        ram[23] = "0b00101101100111011111111000000100";
        ram[24] = "0b11101111101101000111110111011111";
        ram[25] = "0b11101110000011100100110100010111";
        ram[26] = "0b00010111111111111101110111100010";
        ram[27] = "0b11110001111000110000001011101011";
        ram[28] = "0b00101111001100111110001100010101";
        ram[29] = "0b00001100010000100001001010100000";
        ram[30] = "0b00100001001000101111010100000010";
        ram[31] = "0b11110001110101000001001100011111";
        ram[32] = "0b11100010001100001100111100000001";
        ram[33] = "0b00001011001100001101111110011110";
        ram[34] = "0b10111110111111000100110011011110";
        ram[35] = "0b00001110110010101011001000000001";
        ram[36] = "0b11111110011000110001111000100100";
        ram[37] = "0b00010001111000011110110100100110";
        ram[38] = "0b11101101000001000001111110100010";
        ram[39] = "0b11100100000001000100001000011101";
        ram[40] = "0b00101100101000101011000111010100";
        ram[41] = "0b00011101101000001110110010100111";
        ram[42] = "0b11101101000011101110000110100100";
        ram[43] = "0b00011110111011100011000011111111";
        ram[44] = "0b11111010101100011111111011101110";
        ram[45] = "0b01000000001011011101101100010101";
        ram[46] = "0b11011100110011110100001011000100";
        ram[47] = "0b11010000101111111111001111111011";
        ram[48] = "0b11011111111100111111111100001011";
        ram[49] = "0b10111111110101001011111111100000";
        ram[50] = "0b11100001000100111111000000100000";
        ram[51] = "0b00110001111100011001000011100000";
        ram[52] = "0b11100100000111000100001100101100";
        ram[53] = "0b11010101111111110011001111000011";
        ram[54] = "0b00111010110000011101010101110010";
        ram[55] = "0b00101111010000010001011000001100";
        ram[56] = "0b00001101011100100001001111001111";
        ram[57] = "0b00010001111111010111100101101101";
        ram[58] = "0b01001001101111010000000010100010";
        ram[59] = "0b10010000111100110001111100001011";
        ram[60] = "0b01011111000100011101010011011111";
        ram[61] = "0b00101101111111010011000100000100";
        ram[62] = "0b00101100000111101010000111000011";
        ram[63] = "0b11010001111100000100000000111101";
        ram[64] = "0b00000011110100010000111100000001";
        ram[65] = "0b00111111000111110110000011110010";
        ram[66] = "0b00000101110101001110101111110100";
        ram[67] = "0b11110001000001000100111100111011";
        ram[68] = "0b11110010001100010110111000101111";
        ram[69] = "0b11000001000000010000101110111111";
        ram[70] = "0b11100111101100010000010000100100";
        ram[71] = "0b00011110000011110100111111110101";
        ram[72] = "0b01000001111001110010111011101110";
        ram[73] = "0b11010011000100000001001111111101";
        ram[74] = "0b00111010010000101101010000110100";
        ram[75] = "0b00100101110001000001111000010000";
        ram[76] = "0b00000001001100110001111000010000";
        ram[77] = "0b11110010000011100010111010011001";
        ram[78] = "0b00000011000101101100000011100001";
        ram[79] = "0b01000011000001100011111011110010";
        ram[80] = "0b11101110000001010011000111111100";
        ram[81] = "0b11000100101100100010110000100100";
        ram[82] = "0b11110001111100101011111100011111";
        ram[83] = "0b01000000110100110001110000101101";
        ram[84] = "0b11011101001111110010011000111111";
        ram[85] = "0b00010011001001000001111011011011";
        ram[86] = "0b00101100110111001101111000010000";
        ram[87] = "0b11100001000100000010001100110010";
        ram[88] = "0b00011111001100010100011000101101";
        ram[89] = "0b00100111111111111111000111111111";
        ram[90] = "0b11110101000000011101000000010100";
        ram[91] = "0b00011101000100011111010100110010";
        ram[92] = "0b00010010001000110010000100101110";
        ram[93] = "0b00000011000011001001111100100101";
        ram[94] = "0b11010001010000101111010011100010";
        ram[95] = "0b00001110001100111011001000011110";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(convDSPOpt_4_convcfu) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 96;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


convDSPOpt_4_convcfu_ram* meminst;


SC_CTOR(convDSPOpt_4_convcfu) {
meminst = new convDSPOpt_4_convcfu_ram("convDSPOpt_4_convcfu_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~convDSPOpt_4_convcfu() {
    delete meminst;
}


};//endmodule
#endif
