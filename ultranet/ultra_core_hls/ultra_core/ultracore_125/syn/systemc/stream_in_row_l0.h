// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _stream_in_row_l0_HH_
#define _stream_in_row_l0_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct stream_in_row_l0 : public sc_module {
    // Port declarations 27
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<24> > in_V_V_dout;
    sc_in< sc_logic > in_V_V_empty_n;
    sc_out< sc_logic > in_V_V_read;
    sc_out< sc_lv<9> > row_buffer_0_V_address1;
    sc_out< sc_logic > row_buffer_0_V_ce1;
    sc_out< sc_logic > row_buffer_0_V_we1;
    sc_out< sc_lv<24> > row_buffer_0_V_d1;
    sc_out< sc_lv<9> > row_buffer_1_V_address1;
    sc_out< sc_logic > row_buffer_1_V_ce1;
    sc_out< sc_logic > row_buffer_1_V_we1;
    sc_out< sc_lv<24> > row_buffer_1_V_d1;
    sc_out< sc_lv<9> > row_buffer_2_V_address1;
    sc_out< sc_logic > row_buffer_2_V_ce1;
    sc_out< sc_logic > row_buffer_2_V_we1;
    sc_out< sc_lv<24> > row_buffer_2_V_d1;
    sc_out< sc_lv<9> > row_buffer_3_V_address1;
    sc_out< sc_logic > row_buffer_3_V_ce1;
    sc_out< sc_logic > row_buffer_3_V_we1;
    sc_out< sc_lv<24> > row_buffer_3_V_d1;
    sc_in< sc_logic > skip_flag;
    sc_in< sc_lv<2> > rowBufferIdx_V;


    // Module declarations
    stream_in_row_l0(sc_module_name name);
    SC_HAS_PROCESS(stream_in_row_l0);

    ~stream_in_row_l0();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > in_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln22_reg_231;
    sc_signal< sc_lv<1> > empty_82_reg_240;
    sc_signal< sc_lv<9> > w_0_reg_158;
    sc_signal< sc_lv<9> > w_0_reg_158_pp0_iter1_reg;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_predicate_op22_read_state3;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<2> > rowBufferIdx_V_read_read_fu_72_p2;
    sc_signal< sc_lv<1> > skip_flag_read_read_fu_78_p2;
    sc_signal< sc_lv<1> > icmp_ln22_fu_185_p2;
    sc_signal< sc_lv<9> > w_fu_191_p2;
    sc_signal< sc_lv<9> > w_reg_235;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > empty_82_fu_209_p2;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<9> > ap_phi_mux_w_0_phi_fu_162_p4;
    sc_signal< sc_lv<24> > ap_phi_reg_pp0_iter0_p_016_0_reg_170;
    sc_signal< sc_lv<24> > ap_phi_reg_pp0_iter1_p_016_0_reg_170;
    sc_signal< sc_lv<24> > ap_phi_reg_pp0_iter2_p_016_0_reg_170;
    sc_signal< sc_lv<64> > zext_ln30_fu_215_p1;
    sc_signal< sc_lv<1> > empty_81_fu_203_p2;
    sc_signal< sc_lv<1> > empty_80_fu_197_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_109;
    sc_signal< bool > ap_condition_132;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state5;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<24> ap_const_lv24_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<9> ap_const_lv9_142;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<9> ap_const_lv9_141;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_condition_109();
    void thread_ap_condition_132();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_w_0_phi_fu_162_p4();
    void thread_ap_phi_reg_pp0_iter0_p_016_0_reg_170();
    void thread_ap_predicate_op22_read_state3();
    void thread_ap_ready();
    void thread_empty_80_fu_197_p2();
    void thread_empty_81_fu_203_p2();
    void thread_empty_82_fu_209_p2();
    void thread_icmp_ln22_fu_185_p2();
    void thread_in_V_V_blk_n();
    void thread_in_V_V_read();
    void thread_rowBufferIdx_V_read_read_fu_72_p2();
    void thread_row_buffer_0_V_address1();
    void thread_row_buffer_0_V_ce1();
    void thread_row_buffer_0_V_d1();
    void thread_row_buffer_0_V_we1();
    void thread_row_buffer_1_V_address1();
    void thread_row_buffer_1_V_ce1();
    void thread_row_buffer_1_V_d1();
    void thread_row_buffer_1_V_we1();
    void thread_row_buffer_2_V_address1();
    void thread_row_buffer_2_V_ce1();
    void thread_row_buffer_2_V_d1();
    void thread_row_buffer_2_V_we1();
    void thread_row_buffer_3_V_address1();
    void thread_row_buffer_3_V_ce1();
    void thread_row_buffer_3_V_d1();
    void thread_row_buffer_3_V_we1();
    void thread_skip_flag_read_read_fu_78_p2();
    void thread_w_fu_191_p2();
    void thread_zext_ln30_fu_215_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
