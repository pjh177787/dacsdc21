// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _bn_qurelu_fixed_HH_
#define _bn_qurelu_fixed_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "ultra_net_mac_mulbgk.h"

namespace ap_rtl {

struct bn_qurelu_fixed : public sc_module {
    // Port declarations 7
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<26> > in_V;
    sc_in< sc_lv<15> > inc_V;
    sc_in< sc_lv<32> > bias_V;
    sc_out< sc_lv<4> > ap_return;
    sc_in< sc_logic > ap_ce;


    // Module declarations
    bn_qurelu_fixed(sc_module_name name);
    SC_HAS_PROCESS(bn_qurelu_fixed);

    ~bn_qurelu_fixed();

    sc_trace_file* mVcdFile;

    ultra_net_mac_mulbgk<1,1,15,26,32,40>* ultra_net_mac_mulbgk_U193;
    sc_signal< sc_lv<40> > grp_fu_116_p3;
    sc_signal< sc_lv<40> > ret_V_133_reg_124;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<40> > ret_V_fu_69_p2;
    sc_signal< sc_lv<13> > tmp_fu_74_p4;
    sc_signal< sc_lv<1> > icmp_ln895_72_fu_84_p2;
    sc_signal< sc_lv<4> > trunc_ln_fu_90_p4;
    sc_signal< sc_lv<1> > icmp_ln895_fu_64_p2;
    sc_signal< sc_lv<4> > select_ln192_fu_100_p3;
    sc_signal< sc_lv<15> > grp_fu_116_p0;
    sc_signal< sc_lv<4> > res_V_fu_108_p3;
    sc_signal< sc_logic > ap_ce_reg;
    sc_signal< sc_lv<4> > ap_return_int_reg;
    sc_signal< sc_lv<40> > grp_fu_116_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<40> ap_const_lv40_0;
    static const sc_lv<40> ap_const_lv40_400000;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<4> ap_const_lv4_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_return();
    void thread_grp_fu_116_p0();
    void thread_grp_fu_116_p00();
    void thread_icmp_ln895_72_fu_84_p2();
    void thread_icmp_ln895_fu_64_p2();
    void thread_res_V_fu_108_p3();
    void thread_ret_V_fu_69_p2();
    void thread_select_ln192_fu_100_p3();
    void thread_tmp_fu_74_p4();
    void thread_trunc_ln_fu_90_p4();
};

}

using namespace ap_rtl;

#endif
