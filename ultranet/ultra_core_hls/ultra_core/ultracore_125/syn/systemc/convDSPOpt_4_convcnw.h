// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __convDSPOpt_4_convcnw_H__
#define __convDSPOpt_4_convcnw_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct convDSPOpt_4_convcnw_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 96;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(convDSPOpt_4_convcnw_ram) {
        ram[0] = "0b00101010111011110001101011110001";
        ram[1] = "0b10101100111010111011000010010001";
        ram[2] = "0b11010001001111101101001101000011";
        ram[3] = "0b11101101000011110000110000000110";
        ram[4] = "0b00100001011100110000001000110010";
        ram[5] = "0b10101101000000010001001111011111";
        ram[6] = "0b11101111100111001011010000100101";
        ram[7] = "0b10100010001000011101101000011011";
        ram[8] = "0b00101111001000010000001111110010";
        ram[9] = "0b10110001110010111110100111111100";
        ram[10] = "0b11111001100100111111110000000010";
        ram[11] = "0b11110100000000000000100111110001";
        ram[12] = "0b00110000010111011100001000101101";
        ram[13] = "0b10110001011011000011010100000001";
        ram[14] = "0b11010010110101001011001001010010";
        ram[15] = "0b00000000001100100000111011101101";
        ram[16] = "0b11101010000001010001111001011011";
        ram[17] = "0b00011111001111100101001111110111";
        ram[18] = "0b00010001000000111111111011101111";
        ram[19] = "0b00000010111000000000110101011111";
        ram[20] = "0b11101110000100011111001011100010";
        ram[21] = "0b00101011100100101101000111111111";
        ram[22] = "0b00010000000111010101111010111100";
        ram[23] = "0b11110010111000001011001001100001";
        ram[24] = "0b11110000111000111110000111011001";
        ram[25] = "0b11100001111111011110111111111110";
        ram[26] = "0b00111100110000000011111000011010";
        ram[27] = "0b00010000001011111011000000100000";
        ram[28] = "0b00001110000001110011000111110001";
        ram[29] = "0b11100101110111001010111110100000";
        ram[30] = "0b00011101111000000001110011111010";
        ram[31] = "0b00010011111011111001001001001100";
        ram[32] = "0b00011011100101111111111111011110";
        ram[33] = "0b11110001111100001010111111011101";
        ram[34] = "0b00001001110100010000110100101111";
        ram[35] = "0b00100100000011011100000100100000";
        ram[36] = "0b01101111101110101011010111110111";
        ram[37] = "0b10010010010100000110110111101011";
        ram[38] = "0b00101110001011011011011110110000";
        ram[39] = "0b11000101000101011011011110110110";
        ram[40] = "0b11101100110010101111101111111011";
        ram[41] = "0b10100100011111100010001000000101";
        ram[42] = "0b10100000110000011011000011010011";
        ram[43] = "0b00100010101111100001111111110000";
        ram[44] = "0b11001100000101000011111101010010";
        ram[45] = "0b01011011110111011111000110110010";
        ram[46] = "0b11010100111100010011110000000011";
        ram[47] = "0b00011110111111110001111001001111";
        ram[48] = "0b01001011001000011100010100001111";
        ram[49] = "0b00110010111111111111111111100001";
        ram[50] = "0b00011110001000100000001000110010";
        ram[51] = "0b11101110000101000001111001111101";
        ram[52] = "0b00011110111001001101001011100001";
        ram[53] = "0b11000010111010101110100100110000";
        ram[54] = "0b10101001000111011111010001100001";
        ram[55] = "0b10100001000100101111000000000001";
        ram[56] = "0b11110101110000111001000010100010";
        ram[57] = "0b00001111111000001101111100100001";
        ram[58] = "0b11101011111111100011000101000010";
        ram[59] = "0b11110110111000000001001001001111";
        ram[60] = "0b10111110110000001111000110101111";
        ram[61] = "0b00101110111111110001000011010100";
        ram[62] = "0b11101110000111011110111000001100";
        ram[63] = "0b00000010111011001110001111010001";
        ram[64] = "0b10110001101111110011001011100001";
        ram[65] = "0b00011101000011101010000011100111";
        ram[66] = "0b11100000111111110000111000001101";
        ram[67] = "0b00010000111111100000001111110000";
        ram[68] = "0b11010011101111000101000000000000";
        ram[69] = "0b11111101111111101011111011010111";
        ram[70] = "0b00011110010111101111000000101110";
        ram[71] = "0b00100001111111100011000000001110";
        ram[72] = "0b00110001111000101110000110110000";
        ram[73] = "0b00001010111101011110001011100101";
        ram[74] = "0b00001111010011001111000111000000";
        ram[75] = "0b11001011010111001101000101101110";
        ram[76] = "0b00001110001100001110010111010011";
        ram[77] = "0b10101110110100001111010010110111";
        ram[78] = "0b10111011000010111011110100001110";
        ram[79] = "0b11001111010100000001000101001001";
        ram[80] = "0b10010101001000001110010000010000";
        ram[81] = "0b11110011001011010101011100001111";
        ram[82] = "0b00011111111100011100111110101110";
        ram[83] = "0b10111101001100111110001011111001";
        ram[84] = "0b11111110011111001011000000110001";
        ram[85] = "0b00001110000011100111001101100011";
        ram[86] = "0b00010000110000001011110100011111";
        ram[87] = "0b00000000110000000101101011101010";
        ram[88] = "0b00000111011111011110111100111110";
        ram[89] = "0b00010000100100100111101011011001";
        ram[90] = "0b00001111000000111101001111110111";
        ram[91] = "0b00000011000000010000000011011110";
        ram[92] = "0b11110111100110111011111000100010";
        ram[93] = "0b11100110100100001011100111011100";
        ram[94] = "0b10100001001001001100010001110100";
        ram[95] = "0b00010011111100101011010011111111";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(convDSPOpt_4_convcnw) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 96;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


convDSPOpt_4_convcnw_ram* meminst;


SC_CTOR(convDSPOpt_4_convcnw) {
meminst = new convDSPOpt_4_convcnw_ram("convDSPOpt_4_convcnw_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~convDSPOpt_4_convcnw() {
    delete meminst;
}


};//endmodule
#endif
