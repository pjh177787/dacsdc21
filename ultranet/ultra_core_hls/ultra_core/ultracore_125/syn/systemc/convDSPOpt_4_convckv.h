// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __convDSPOpt_4_convckv_H__
#define __convDSPOpt_4_convckv_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct convDSPOpt_4_convckv_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 96;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(convDSPOpt_4_convckv_ram) {
        ram[0] = "0b11101100101111000010001100000000";
        ram[1] = "0b11110011111000110000001111001100";
        ram[2] = "0b00100011111000110000111000010001";
        ram[3] = "0b00101100001000000001000111001110";
        ram[4] = "0b11001110101110100000110111011110";
        ram[5] = "0b11010010111111110100001111011110";
        ram[6] = "0b11100110010000110000001111100000";
        ram[7] = "0b01011010000100000000000011111111";
        ram[8] = "0b11101101000000011110111001011010";
        ram[9] = "0b11010100010011000010001000010111";
        ram[10] = "0b00000101110011010000001111010011";
        ram[11] = "0b11101111000011110100111000001111";
        ram[12] = "0b11110010101111011100000011110100";
        ram[13] = "0b11110101000010100010110000011011";
        ram[14] = "0b00010010110000011110011100110100";
        ram[15] = "0b11101110001001010100010010101101";
        ram[16] = "0b01010011100110011001001011000011";
        ram[17] = "0b10100111011111000001010100101110";
        ram[18] = "0b01111011101111111101011101110110";
        ram[19] = "0b11111110000100100011011110010111";
        ram[20] = "0b00011101000000010010111011101111";
        ram[21] = "0b11010101011011001110000001000011";
        ram[22] = "0b11010001001011111101000100000000";
        ram[23] = "0b00010001000101000011100100011110";
        ram[24] = "0b10011111000111110000011010110001";
        ram[25] = "0b00110001000100110110001011110011";
        ram[26] = "0b11110001001011111101000011110100";
        ram[27] = "0b00001111000000000100111000000010";
        ram[28] = "0b00111111101110011100001100000101";
        ram[29] = "0b00000100001111010011001000010001";
        ram[30] = "0b00010010111011000000000100100010";
        ram[31] = "0b00010001110101010010010011111100";
        ram[32] = "0b01011111111110111011001001100100";
        ram[33] = "0b00100010000011111011000101110000";
        ram[34] = "0b01000011111011100010010100100001";
        ram[35] = "0b11110001100101010010110000101110";
        ram[36] = "0b10010000001101010001110011001010";
        ram[37] = "0b11011010000000111111110111110100";
        ram[38] = "0b11011101001000100011110100001101";
        ram[39] = "0b00011100101000001110101100001101";
        ram[40] = "0b11010001111000110010011011101100";
        ram[41] = "0b11000011000100000100110110110100";
        ram[42] = "0b10110100001011101110010000100010";
        ram[43] = "0b11101100000011110011000011111111";
        ram[44] = "0b00011101000010011001001111010111";
        ram[45] = "0b01011100101001000011010011010011";
        ram[46] = "0b01101100001011001101001000010000";
        ram[47] = "0b11111110000011010110111111100101";
        ram[48] = "0b10011111110000100011110110011110";
        ram[49] = "0b00010001001000001111000110100101";
        ram[50] = "0b11110111111001010011111011110011";
        ram[51] = "0b00011111101111011100111000101101";
        ram[52] = "0b00011111001111011011111111100111";
        ram[53] = "0b10100111010111100000010000000011";
        ram[54] = "0b00010110000000001110000101110010";
        ram[55] = "0b10110001111000010111011000010000";
        ram[56] = "0b01100001011100011110111100100011";
        ram[57] = "0b00100000101100000100001100011100";
        ram[58] = "0b11111011001011011101010100010001";
        ram[59] = "0b10100011001100110110110100100011";
        ram[60] = "0b00100110110100100011111100010001";
        ram[61] = "0b00110110001100101111010111010100";
        ram[62] = "0b00110100000101101111000010101111";
        ram[63] = "0b11010010111001000011110011100010";
        ram[64] = "0b00100011010000011111000000110000";
        ram[65] = "0b11110111001011010010110000111111";
        ram[66] = "0b00001111010000011011001110011011";
        ram[67] = "0b11010011111100000010111011110001";
        ram[68] = "0b00100101010100010011001000001011";
        ram[69] = "0b00110111111100010001111101000000";
        ram[70] = "0b00100000001000100001111010101011";
        ram[71] = "0b11010010001000011110001100011100";
        ram[72] = "0b00010100011100111010111011101110";
        ram[73] = "0b00001111110111010111111101111010";
        ram[74] = "0b00111011101011000010000110111010";
        ram[75] = "0b11010010000100001011110100010001";
        ram[76] = "0b00000100010111001100000011001101";
        ram[77] = "0b11110011101000010110101100101101";
        ram[78] = "0b11001010000000001110111111000101";
        ram[79] = "0b10010011111111001001001100101111";
        ram[80] = "0b11101111110000010000001011111101";
        ram[81] = "0b10100000110000010001101011011101";
        ram[82] = "0b01001010000000001111000111101010";
        ram[83] = "0b00000001001011111010011001011111";
        ram[84] = "0b10010000000000001101110111011011";
        ram[85] = "0b00100001111011110000010111110101";
        ram[86] = "0b10010001000111100001111100011101";
        ram[87] = "0b00000000110111001010111000000000";
        ram[88] = "0b10101101000111011001111011011001";
        ram[89] = "0b00011111111111110001000111100000";
        ram[90] = "0b11011101101111100001000010101100";
        ram[91] = "0b11101110111100001001110011100000";
        ram[92] = "0b10101111111011111110111000011110";
        ram[93] = "0b00000000001111110011001111011100";
        ram[94] = "0b10111110000000101111001000001111";
        ram[95] = "0b11110100110101011001001000010000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(convDSPOpt_4_convckv) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 96;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


convDSPOpt_4_convckv_ram* meminst;


SC_CTOR(convDSPOpt_4_convckv) {
meminst = new convDSPOpt_4_convckv_ram("convDSPOpt_4_convckv_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~convDSPOpt_4_convckv() {
    delete meminst;
}


};//endmodule
#endif
