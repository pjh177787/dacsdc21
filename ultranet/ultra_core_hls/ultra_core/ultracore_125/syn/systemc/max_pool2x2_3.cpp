// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "max_pool2x2_3.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic max_pool2x2_3::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic max_pool2x2_3::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> max_pool2x2_3::ap_ST_fsm_state1 = "1";
const sc_lv<4> max_pool2x2_3::ap_ST_fsm_state2 = "10";
const sc_lv<4> max_pool2x2_3::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> max_pool2x2_3::ap_ST_fsm_state7 = "1000";
const bool max_pool2x2_3::ap_const_boolean_1 = true;
const sc_lv<32> max_pool2x2_3::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> max_pool2x2_3::ap_const_lv32_2 = "10";
const bool max_pool2x2_3::ap_const_boolean_0 = false;
const sc_lv<1> max_pool2x2_3::ap_const_lv1_0 = "0";
const sc_lv<1> max_pool2x2_3::ap_const_lv1_1 = "1";
const sc_lv<32> max_pool2x2_3::ap_const_lv32_1 = "1";
const sc_lv<40> max_pool2x2_3::ap_const_lv40_0 = "0000000000000000000000000000000000000000";
const sc_lv<8> max_pool2x2_3::ap_const_lv8_0 = "00000000";
const sc_lv<32> max_pool2x2_3::ap_const_lv32_7 = "111";
const sc_lv<32> max_pool2x2_3::ap_const_lv32_5 = "101";
const sc_lv<7> max_pool2x2_3::ap_const_lv7_0 = "0000000";
const sc_lv<5> max_pool2x2_3::ap_const_lv5_0 = "00000";
const sc_lv<40> max_pool2x2_3::ap_const_lv40_1 = "1";
const sc_lv<8> max_pool2x2_3::ap_const_lv8_A0 = "10100000";
const sc_lv<8> max_pool2x2_3::ap_const_lv8_1 = "1";
const sc_lv<32> max_pool2x2_3::ap_const_lv32_40 = "1000000";
const sc_lv<32> max_pool2x2_3::ap_const_lv32_7F = "1111111";
const sc_lv<32> max_pool2x2_3::ap_const_lv32_3 = "11";

max_pool2x2_3::max_pool2x2_3(sc_module_name name) : sc_module(name), mVcdFile(0) {
    row_store_V_U = new max_pool2x2_3_rowbjl("row_store_V_U");
    row_store_V_U->clk(ap_clk);
    row_store_V_U->reset(ap_rst);
    row_store_V_U->address0(row_store_V_address0);
    row_store_V_U->ce0(row_store_V_ce0);
    row_store_V_U->q0(row_store_V_q0);
    row_store_V_U->address1(row_store_V_addr_reg_394);
    row_store_V_U->ce1(row_store_V_ce1);
    row_store_V_U->we1(row_store_V_we1);
    row_store_V_U->d1(p_01_i_max2_PE_4u_16u_s_fu_166_ap_return);
    p_01_i_max2_PE_4u_16u_s_fu_166 = new max2_PE_4u_16u_s("p_01_i_max2_PE_4u_16u_s_fu_166");
    p_01_i_max2_PE_4u_16u_s_fu_166->ap_ready(p_01_i_max2_PE_4u_16u_s_fu_166_ap_ready);
    p_01_i_max2_PE_4u_16u_s_fu_166->data0_V(trunc_ln96_reg_389);
    p_01_i_max2_PE_4u_16u_s_fu_166->data1_V(p_Result_i_reg_384);
    p_01_i_max2_PE_4u_16u_s_fu_166->ap_return(p_01_i_max2_PE_4u_16u_s_fu_166_ap_return);
    op2_V_assign_5_0_i_max2_PE_4u_16u_s_fu_173 = new max2_PE_4u_16u_s("op2_V_assign_5_0_i_max2_PE_4u_16u_s_fu_173");
    op2_V_assign_5_0_i_max2_PE_4u_16u_s_fu_173->ap_ready(op2_V_assign_5_0_i_max2_PE_4u_16u_s_fu_173_ap_ready);
    op2_V_assign_5_0_i_max2_PE_4u_16u_s_fu_173->data0_V(p_01_i_max2_PE_4u_16u_s_fu_166_ap_return);
    op2_V_assign_5_0_i_max2_PE_4u_16u_s_fu_173->data1_V(row_store_V_q0);
    op2_V_assign_5_0_i_max2_PE_4u_16u_s_fu_173->ap_return(op2_V_assign_5_0_i_max2_PE_4u_16u_s_fu_173_ap_return);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln35_1_fu_232_p2);
    sensitive << ( indvar_flatten_reg_133 );

    SC_METHOD(thread_add_ln35_fu_191_p2);
    sensitive << ( shl_ln35_1_fu_186_p2 );
    sensitive << ( shl_ln35_fu_181_p2 );

    SC_METHOD(thread_add_ln37_fu_280_p2);
    sensitive << ( select_ln35_fu_250_p3 );

    SC_METHOD(thread_and_ln51_fu_274_p2);
    sensitive << ( trunc_ln35_fu_266_p1 );
    sensitive << ( trunc_ln37_fu_270_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( vec_V_V_empty_n );
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln35_reg_352 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( and_ln51_reg_375_pp0_iter2_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( vec_V_V_empty_n );
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln35_reg_352 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( and_ln51_reg_375_pp0_iter2_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( vec_V_V_empty_n );
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln35_reg_352 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( and_ln51_reg_375_pp0_iter2_reg );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( reps_empty_n );
    sensitive << ( reps_out_full_n );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);
    sensitive << ( vec_V_V_empty_n );
    sensitive << ( icmp_ln35_reg_352 );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter3);
    sensitive << ( out_V_V_full_n );
    sensitive << ( and_ln51_reg_375_pp0_iter2_reg );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( icmp_ln35_fu_227_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_phi_mux_h_0_i_phi_fu_148_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln35_reg_352 );
    sensitive << ( h_0_i_reg_144 );
    sensitive << ( select_ln35_1_reg_366 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_bound_fu_221_p2);
    sensitive << ( p_shl4_fu_217_p1 );
    sensitive << ( p_shl_fu_205_p1 );

    SC_METHOD(thread_h_fu_238_p2);
    sensitive << ( ap_phi_mux_h_0_i_phi_fu_148_p4 );

    SC_METHOD(thread_icmp_ln35_fu_227_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_133 );
    sensitive << ( bound_reg_347 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln37_fu_244_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( addr_0_i_reg_155 );
    sensitive << ( icmp_ln35_fu_227_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_out_V_V_blk_n);
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( and_ln51_reg_375_pp0_iter2_reg );

    SC_METHOD(thread_out_V_V_din);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( and_ln51_reg_375_pp0_iter2_reg );
    sensitive << ( p_037_2_0_i_fu_78 );
    sensitive << ( v2_V_0_i_fu_82 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_out_V_V_write);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( and_ln51_reg_375_pp0_iter2_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_p_shl4_fu_217_p1);
    sensitive << ( tmp_57_fu_209_p3 );

    SC_METHOD(thread_p_shl_fu_205_p1);
    sensitive << ( tmp_s_fu_197_p3 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_reps_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( reps_empty_n );

    SC_METHOD(thread_reps_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( reps_out_full_n );

    SC_METHOD(thread_reps_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( reps_dout );
    sensitive << ( reps_empty_n );
    sensitive << ( reps_out_full_n );

    SC_METHOD(thread_reps_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( reps_empty_n );
    sensitive << ( reps_out_full_n );

    SC_METHOD(thread_reps_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( reps_empty_n );
    sensitive << ( reps_out_full_n );

    SC_METHOD(thread_row_store_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln49_fu_300_p1 );

    SC_METHOD(thread_row_store_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_row_store_V_ce1);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_row_store_V_we1);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( trunc_ln35_reg_371_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_select_ln35_1_fu_258_p3);
    sensitive << ( ap_phi_mux_h_0_i_phi_fu_148_p4 );
    sensitive << ( icmp_ln37_fu_244_p2 );
    sensitive << ( h_fu_238_p2 );

    SC_METHOD(thread_select_ln35_fu_250_p3);
    sensitive << ( addr_0_i_reg_155 );
    sensitive << ( icmp_ln37_fu_244_p2 );

    SC_METHOD(thread_shl_ln35_1_fu_186_p2);
    sensitive << ( reps_read_reg_341 );

    SC_METHOD(thread_shl_ln35_fu_181_p2);
    sensitive << ( reps_read_reg_341 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_tmp_57_fu_209_p3);
    sensitive << ( add_ln35_fu_191_p2 );

    SC_METHOD(thread_tmp_s_fu_197_p3);
    sensitive << ( add_ln35_fu_191_p2 );

    SC_METHOD(thread_trunc_ln35_fu_266_p1);
    sensitive << ( select_ln35_1_fu_258_p3 );

    SC_METHOD(thread_trunc_ln37_fu_270_p1);
    sensitive << ( select_ln35_fu_250_p3 );

    SC_METHOD(thread_trunc_ln96_fu_296_p1);
    sensitive << ( vec_V_V_dout );

    SC_METHOD(thread_vec_V_V_blk_n);
    sensitive << ( vec_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln35_reg_352 );

    SC_METHOD(thread_vec_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln35_reg_352 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_zext_ln49_fu_300_p1);
    sensitive << ( select_ln35_reg_361 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( reps_empty_n );
    sensitive << ( reps_out_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( icmp_ln35_fu_227_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "max_pool2x2_3_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, vec_V_V_dout, "(port)vec_V_V_dout");
    sc_trace(mVcdFile, vec_V_V_empty_n, "(port)vec_V_V_empty_n");
    sc_trace(mVcdFile, vec_V_V_read, "(port)vec_V_V_read");
    sc_trace(mVcdFile, out_V_V_din, "(port)out_V_V_din");
    sc_trace(mVcdFile, out_V_V_full_n, "(port)out_V_V_full_n");
    sc_trace(mVcdFile, out_V_V_write, "(port)out_V_V_write");
    sc_trace(mVcdFile, reps_dout, "(port)reps_dout");
    sc_trace(mVcdFile, reps_empty_n, "(port)reps_empty_n");
    sc_trace(mVcdFile, reps_read, "(port)reps_read");
    sc_trace(mVcdFile, reps_out_din, "(port)reps_out_din");
    sc_trace(mVcdFile, reps_out_full_n, "(port)reps_out_full_n");
    sc_trace(mVcdFile, reps_out_write, "(port)reps_out_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, vec_V_V_blk_n, "vec_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln35_reg_352, "icmp_ln35_reg_352");
    sc_trace(mVcdFile, out_V_V_blk_n, "out_V_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, and_ln51_reg_375, "and_ln51_reg_375");
    sc_trace(mVcdFile, and_ln51_reg_375_pp0_iter2_reg, "and_ln51_reg_375_pp0_iter2_reg");
    sc_trace(mVcdFile, reps_blk_n, "reps_blk_n");
    sc_trace(mVcdFile, reps_out_blk_n, "reps_out_blk_n");
    sc_trace(mVcdFile, indvar_flatten_reg_133, "indvar_flatten_reg_133");
    sc_trace(mVcdFile, h_0_i_reg_144, "h_0_i_reg_144");
    sc_trace(mVcdFile, addr_0_i_reg_155, "addr_0_i_reg_155");
    sc_trace(mVcdFile, reps_read_reg_341, "reps_read_reg_341");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, bound_fu_221_p2, "bound_fu_221_p2");
    sc_trace(mVcdFile, bound_reg_347, "bound_reg_347");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln35_fu_227_p2, "icmp_ln35_fu_227_p2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter2, "ap_block_state5_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter3, "ap_block_state6_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln35_reg_352_pp0_iter1_reg, "icmp_ln35_reg_352_pp0_iter1_reg");
    sc_trace(mVcdFile, add_ln35_1_fu_232_p2, "add_ln35_1_fu_232_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, select_ln35_fu_250_p3, "select_ln35_fu_250_p3");
    sc_trace(mVcdFile, select_ln35_reg_361, "select_ln35_reg_361");
    sc_trace(mVcdFile, select_ln35_1_fu_258_p3, "select_ln35_1_fu_258_p3");
    sc_trace(mVcdFile, select_ln35_1_reg_366, "select_ln35_1_reg_366");
    sc_trace(mVcdFile, trunc_ln35_fu_266_p1, "trunc_ln35_fu_266_p1");
    sc_trace(mVcdFile, trunc_ln35_reg_371, "trunc_ln35_reg_371");
    sc_trace(mVcdFile, trunc_ln35_reg_371_pp0_iter1_reg, "trunc_ln35_reg_371_pp0_iter1_reg");
    sc_trace(mVcdFile, and_ln51_fu_274_p2, "and_ln51_fu_274_p2");
    sc_trace(mVcdFile, and_ln51_reg_375_pp0_iter1_reg, "and_ln51_reg_375_pp0_iter1_reg");
    sc_trace(mVcdFile, add_ln37_fu_280_p2, "add_ln37_fu_280_p2");
    sc_trace(mVcdFile, p_Result_i_reg_384, "p_Result_i_reg_384");
    sc_trace(mVcdFile, trunc_ln96_fu_296_p1, "trunc_ln96_fu_296_p1");
    sc_trace(mVcdFile, trunc_ln96_reg_389, "trunc_ln96_reg_389");
    sc_trace(mVcdFile, row_store_V_addr_reg_394, "row_store_V_addr_reg_394");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, row_store_V_address0, "row_store_V_address0");
    sc_trace(mVcdFile, row_store_V_ce0, "row_store_V_ce0");
    sc_trace(mVcdFile, row_store_V_q0, "row_store_V_q0");
    sc_trace(mVcdFile, row_store_V_ce1, "row_store_V_ce1");
    sc_trace(mVcdFile, row_store_V_we1, "row_store_V_we1");
    sc_trace(mVcdFile, p_01_i_max2_PE_4u_16u_s_fu_166_ap_ready, "p_01_i_max2_PE_4u_16u_s_fu_166_ap_ready");
    sc_trace(mVcdFile, p_01_i_max2_PE_4u_16u_s_fu_166_ap_return, "p_01_i_max2_PE_4u_16u_s_fu_166_ap_return");
    sc_trace(mVcdFile, op2_V_assign_5_0_i_max2_PE_4u_16u_s_fu_173_ap_ready, "op2_V_assign_5_0_i_max2_PE_4u_16u_s_fu_173_ap_ready");
    sc_trace(mVcdFile, op2_V_assign_5_0_i_max2_PE_4u_16u_s_fu_173_ap_return, "op2_V_assign_5_0_i_max2_PE_4u_16u_s_fu_173_ap_return");
    sc_trace(mVcdFile, ap_phi_mux_h_0_i_phi_fu_148_p4, "ap_phi_mux_h_0_i_phi_fu_148_p4");
    sc_trace(mVcdFile, zext_ln49_fu_300_p1, "zext_ln49_fu_300_p1");
    sc_trace(mVcdFile, p_037_2_0_i_fu_78, "p_037_2_0_i_fu_78");
    sc_trace(mVcdFile, v2_V_0_i_fu_82, "v2_V_0_i_fu_82");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, shl_ln35_1_fu_186_p2, "shl_ln35_1_fu_186_p2");
    sc_trace(mVcdFile, shl_ln35_fu_181_p2, "shl_ln35_fu_181_p2");
    sc_trace(mVcdFile, add_ln35_fu_191_p2, "add_ln35_fu_191_p2");
    sc_trace(mVcdFile, tmp_s_fu_197_p3, "tmp_s_fu_197_p3");
    sc_trace(mVcdFile, tmp_57_fu_209_p3, "tmp_57_fu_209_p3");
    sc_trace(mVcdFile, p_shl4_fu_217_p1, "p_shl4_fu_217_p1");
    sc_trace(mVcdFile, p_shl_fu_205_p1, "p_shl_fu_205_p1");
    sc_trace(mVcdFile, icmp_ln37_fu_244_p2, "icmp_ln37_fu_244_p2");
    sc_trace(mVcdFile, h_fu_238_p2, "h_fu_238_p2");
    sc_trace(mVcdFile, trunc_ln37_fu_270_p1, "trunc_ln37_fu_270_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

max_pool2x2_3::~max_pool2x2_3() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete row_store_V_U;
    delete p_01_i_max2_PE_4u_16u_s_fu_166;
    delete op2_V_assign_5_0_i_max2_PE_4u_16u_s_fu_173;
}

void max_pool2x2_3::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln35_fu_227_p2.read()))) {
        addr_0_i_reg_155 = add_ln37_fu_280_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        addr_0_i_reg_155 = ap_const_lv8_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            ap_enable_reg_pp0_iter3 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln35_reg_352.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        h_0_i_reg_144 = select_ln35_1_reg_366.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        h_0_i_reg_144 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln35_fu_227_p2.read()))) {
        indvar_flatten_reg_133 = add_ln35_1_fu_232_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        indvar_flatten_reg_133 = ap_const_lv40_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln35_fu_227_p2.read()))) {
        and_ln51_reg_375 = and_ln51_fu_274_p2.read();
        select_ln35_reg_361 = select_ln35_fu_250_p3.read();
        trunc_ln35_reg_371 = trunc_ln35_fu_266_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        and_ln51_reg_375_pp0_iter1_reg = and_ln51_reg_375.read();
        icmp_ln35_reg_352 = icmp_ln35_fu_227_p2.read();
        icmp_ln35_reg_352_pp0_iter1_reg = icmp_ln35_reg_352.read();
        trunc_ln35_reg_371_pp0_iter1_reg = trunc_ln35_reg_371.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        and_ln51_reg_375_pp0_iter2_reg = and_ln51_reg_375_pp0_iter1_reg.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        bound_reg_347 = bound_fu_221_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, trunc_ln35_reg_371_pp0_iter1_reg.read()))) {
        p_037_2_0_i_fu_78 = op2_V_assign_5_0_i_max2_PE_4u_16u_s_fu_173_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(icmp_ln35_reg_352.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        p_Result_i_reg_384 = vec_V_V_dout.read().range(127, 64);
        row_store_V_addr_reg_394 =  (sc_lv<8>) (zext_ln49_fu_300_p1.read());
        trunc_ln96_reg_389 = trunc_ln96_fu_296_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, reps_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, reps_out_full_n.read())))) {
        reps_read_reg_341 = reps_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln35_fu_227_p2.read()))) {
        select_ln35_1_reg_366 = select_ln35_1_fu_258_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, and_ln51_reg_375_pp0_iter2_reg.read()))) {
        v2_V_0_i_fu_82 = p_037_2_0_i_fu_78.read();
    }
}

void max_pool2x2_3::thread_add_ln35_1_fu_232_p2() {
    add_ln35_1_fu_232_p2 = (!indvar_flatten_reg_133.read().is_01() || !ap_const_lv40_1.is_01())? sc_lv<40>(): (sc_biguint<40>(indvar_flatten_reg_133.read()) + sc_biguint<40>(ap_const_lv40_1));
}

void max_pool2x2_3::thread_add_ln35_fu_191_p2() {
    add_ln35_fu_191_p2 = (!shl_ln35_1_fu_186_p2.read().is_01() || !shl_ln35_fu_181_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(shl_ln35_1_fu_186_p2.read()) + sc_biguint<32>(shl_ln35_fu_181_p2.read()));
}

void max_pool2x2_3::thread_add_ln37_fu_280_p2() {
    add_ln37_fu_280_p2 = (!select_ln35_fu_250_p3.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(select_ln35_fu_250_p3.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void max_pool2x2_3::thread_and_ln51_fu_274_p2() {
    and_ln51_fu_274_p2 = (trunc_ln35_fu_266_p1.read() & trunc_ln37_fu_270_p1.read());
}

void max_pool2x2_3::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void max_pool2x2_3::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void max_pool2x2_3::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void max_pool2x2_3::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[3];
}

void max_pool2x2_3::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool2x2_3::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(icmp_ln35_reg_352.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, vec_V_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(and_ln51_reg_375_pp0_iter2_reg.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())));
}

void max_pool2x2_3::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(icmp_ln35_reg_352.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, vec_V_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(and_ln51_reg_375_pp0_iter2_reg.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())));
}

void max_pool2x2_3::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(icmp_ln35_reg_352.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, vec_V_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(and_ln51_reg_375_pp0_iter2_reg.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read())));
}

void max_pool2x2_3::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, reps_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, reps_out_full_n.read()));
}

void max_pool2x2_3::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool2x2_3::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = (esl_seteq<1,1,1>(icmp_ln35_reg_352.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, vec_V_V_empty_n.read()));
}

void max_pool2x2_3::thread_ap_block_state5_pp0_stage0_iter2() {
    ap_block_state5_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool2x2_3::thread_ap_block_state6_pp0_stage0_iter3() {
    ap_block_state6_pp0_stage0_iter3 = (esl_seteq<1,1,1>(and_ln51_reg_375_pp0_iter2_reg.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()));
}

void max_pool2x2_3::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln35_fu_227_p2.read())) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void max_pool2x2_3::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void max_pool2x2_3::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void max_pool2x2_3::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void max_pool2x2_3::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void max_pool2x2_3::thread_ap_phi_mux_h_0_i_phi_fu_148_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln35_reg_352.read(), ap_const_lv1_0))) {
        ap_phi_mux_h_0_i_phi_fu_148_p4 = select_ln35_1_reg_366.read();
    } else {
        ap_phi_mux_h_0_i_phi_fu_148_p4 = h_0_i_reg_144.read();
    }
}

void max_pool2x2_3::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void max_pool2x2_3::thread_bound_fu_221_p2() {
    bound_fu_221_p2 = (!p_shl4_fu_217_p1.read().is_01() || !p_shl_fu_205_p1.read().is_01())? sc_lv<40>(): (sc_biguint<40>(p_shl4_fu_217_p1.read()) + sc_biguint<40>(p_shl_fu_205_p1.read()));
}

void max_pool2x2_3::thread_h_fu_238_p2() {
    h_fu_238_p2 = (!ap_const_lv32_1.is_01() || !ap_phi_mux_h_0_i_phi_fu_148_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(ap_phi_mux_h_0_i_phi_fu_148_p4.read()));
}

void max_pool2x2_3::thread_icmp_ln35_fu_227_p2() {
    icmp_ln35_fu_227_p2 = (!indvar_flatten_reg_133.read().is_01() || !bound_reg_347.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_133.read() == bound_reg_347.read());
}

void max_pool2x2_3::thread_icmp_ln37_fu_244_p2() {
    icmp_ln37_fu_244_p2 = (!addr_0_i_reg_155.read().is_01() || !ap_const_lv8_A0.is_01())? sc_lv<1>(): sc_lv<1>(addr_0_i_reg_155.read() == ap_const_lv8_A0);
}

void max_pool2x2_3::thread_internal_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void max_pool2x2_3::thread_out_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(and_ln51_reg_375_pp0_iter2_reg.read(), ap_const_lv1_1))) {
        out_V_V_blk_n = out_V_V_full_n.read();
    } else {
        out_V_V_blk_n = ap_const_logic_1;
    }
}

void max_pool2x2_3::thread_out_V_V_din() {
    out_V_V_din = esl_concat<64,64>(p_037_2_0_i_fu_78.read(), v2_V_0_i_fu_82.read());
}

void max_pool2x2_3::thread_out_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(and_ln51_reg_375_pp0_iter2_reg.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        out_V_V_write = ap_const_logic_1;
    } else {
        out_V_V_write = ap_const_logic_0;
    }
}

void max_pool2x2_3::thread_p_shl4_fu_217_p1() {
    p_shl4_fu_217_p1 = esl_zext<40,37>(tmp_57_fu_209_p3.read());
}

void max_pool2x2_3::thread_p_shl_fu_205_p1() {
    p_shl_fu_205_p1 = esl_zext<40,39>(tmp_s_fu_197_p3.read());
}

void max_pool2x2_3::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void max_pool2x2_3::thread_reps_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        reps_blk_n = reps_empty_n.read();
    } else {
        reps_blk_n = ap_const_logic_1;
    }
}

void max_pool2x2_3::thread_reps_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        reps_out_blk_n = reps_out_full_n.read();
    } else {
        reps_out_blk_n = ap_const_logic_1;
    }
}

void max_pool2x2_3::thread_reps_out_din() {
    reps_out_din = reps_dout.read();
}

void max_pool2x2_3::thread_reps_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, reps_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, reps_out_full_n.read())))) {
        reps_out_write = ap_const_logic_1;
    } else {
        reps_out_write = ap_const_logic_0;
    }
}

void max_pool2x2_3::thread_reps_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, reps_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, reps_out_full_n.read())))) {
        reps_read = ap_const_logic_1;
    } else {
        reps_read = ap_const_logic_0;
    }
}

void max_pool2x2_3::thread_row_store_V_address0() {
    row_store_V_address0 =  (sc_lv<8>) (zext_ln49_fu_300_p1.read());
}

void max_pool2x2_3::thread_row_store_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        row_store_V_ce0 = ap_const_logic_1;
    } else {
        row_store_V_ce0 = ap_const_logic_0;
    }
}

void max_pool2x2_3::thread_row_store_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        row_store_V_ce1 = ap_const_logic_1;
    } else {
        row_store_V_ce1 = ap_const_logic_0;
    }
}

void max_pool2x2_3::thread_row_store_V_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, trunc_ln35_reg_371_pp0_iter1_reg.read()))) {
        row_store_V_we1 = ap_const_logic_1;
    } else {
        row_store_V_we1 = ap_const_logic_0;
    }
}

void max_pool2x2_3::thread_select_ln35_1_fu_258_p3() {
    select_ln35_1_fu_258_p3 = (!icmp_ln37_fu_244_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln37_fu_244_p2.read()[0].to_bool())? h_fu_238_p2.read(): ap_phi_mux_h_0_i_phi_fu_148_p4.read());
}

void max_pool2x2_3::thread_select_ln35_fu_250_p3() {
    select_ln35_fu_250_p3 = (!icmp_ln37_fu_244_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_ln37_fu_244_p2.read()[0].to_bool())? ap_const_lv8_0: addr_0_i_reg_155.read());
}

void max_pool2x2_3::thread_shl_ln35_1_fu_186_p2() {
    shl_ln35_1_fu_186_p2 = (!ap_const_lv32_5.is_01())? sc_lv<32>(): reps_read_reg_341.read() << (unsigned short)ap_const_lv32_5.to_uint();
}

void max_pool2x2_3::thread_shl_ln35_fu_181_p2() {
    shl_ln35_fu_181_p2 = (!ap_const_lv32_7.is_01())? sc_lv<32>(): reps_read_reg_341.read() << (unsigned short)ap_const_lv32_7.to_uint();
}

void max_pool2x2_3::thread_start_out() {
    start_out = real_start.read();
}

void max_pool2x2_3::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void max_pool2x2_3::thread_tmp_57_fu_209_p3() {
    tmp_57_fu_209_p3 = esl_concat<32,5>(add_ln35_fu_191_p2.read(), ap_const_lv5_0);
}

void max_pool2x2_3::thread_tmp_s_fu_197_p3() {
    tmp_s_fu_197_p3 = esl_concat<32,7>(add_ln35_fu_191_p2.read(), ap_const_lv7_0);
}

void max_pool2x2_3::thread_trunc_ln35_fu_266_p1() {
    trunc_ln35_fu_266_p1 = select_ln35_1_fu_258_p3.read().range(1-1, 0);
}

void max_pool2x2_3::thread_trunc_ln37_fu_270_p1() {
    trunc_ln37_fu_270_p1 = select_ln35_fu_250_p3.read().range(1-1, 0);
}

void max_pool2x2_3::thread_trunc_ln96_fu_296_p1() {
    trunc_ln96_fu_296_p1 = vec_V_V_dout.read().range(64-1, 0);
}

void max_pool2x2_3::thread_vec_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln35_reg_352.read(), ap_const_lv1_0))) {
        vec_V_V_blk_n = vec_V_V_empty_n.read();
    } else {
        vec_V_V_blk_n = ap_const_logic_1;
    }
}

void max_pool2x2_3::thread_vec_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln35_reg_352.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        vec_V_V_read = ap_const_logic_1;
    } else {
        vec_V_V_read = ap_const_logic_0;
    }
}

void max_pool2x2_3::thread_zext_ln49_fu_300_p1() {
    zext_ln49_fu_300_p1 = esl_zext<64,8>(select_ln35_reg_361.read());
}

void max_pool2x2_3::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, reps_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, reps_out_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln35_fu_227_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln35_fu_227_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

