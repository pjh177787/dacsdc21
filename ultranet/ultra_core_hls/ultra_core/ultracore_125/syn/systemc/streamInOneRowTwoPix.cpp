// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "streamInOneRowTwoPix.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic streamInOneRowTwoPix::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic streamInOneRowTwoPix::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> streamInOneRowTwoPix::ap_ST_fsm_state1 = "1";
const sc_lv<4> streamInOneRowTwoPix::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<4> streamInOneRowTwoPix::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<4> streamInOneRowTwoPix::ap_ST_fsm_state5 = "1000";
const bool streamInOneRowTwoPix::ap_const_boolean_1 = true;
const sc_lv<32> streamInOneRowTwoPix::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> streamInOneRowTwoPix::ap_const_lv32_2 = "10";
const bool streamInOneRowTwoPix::ap_const_boolean_0 = false;
const sc_lv<1> streamInOneRowTwoPix::ap_const_lv1_0 = "0";
const sc_lv<32> streamInOneRowTwoPix::ap_const_lv32_1 = "1";
const sc_lv<1> streamInOneRowTwoPix::ap_const_lv1_1 = "1";
const sc_lv<9> streamInOneRowTwoPix::ap_const_lv9_0 = "000000000";
const sc_lv<5> streamInOneRowTwoPix::ap_const_lv5_0 = "00000";
const sc_lv<6> streamInOneRowTwoPix::ap_const_lv6_0 = "000000";
const sc_lv<2> streamInOneRowTwoPix::ap_const_lv2_0 = "00";
const sc_lv<4> streamInOneRowTwoPix::ap_const_lv4_0 = "0000";
const sc_lv<9> streamInOneRowTwoPix::ap_const_lv9_A0 = "10100000";
const sc_lv<3> streamInOneRowTwoPix::ap_const_lv3_1 = "1";
const sc_lv<7> streamInOneRowTwoPix::ap_const_lv7_0 = "0000000";
const sc_lv<5> streamInOneRowTwoPix::ap_const_lv5_1 = "1";
const sc_lv<9> streamInOneRowTwoPix::ap_const_lv9_140 = "101000000";
const sc_lv<9> streamInOneRowTwoPix::ap_const_lv9_1 = "1";
const sc_lv<6> streamInOneRowTwoPix::ap_const_lv6_14 = "10100";
const sc_lv<4> streamInOneRowTwoPix::ap_const_lv4_A = "1010";
const sc_lv<2> streamInOneRowTwoPix::ap_const_lv2_1 = "1";
const sc_lv<6> streamInOneRowTwoPix::ap_const_lv6_1 = "1";
const sc_lv<32> streamInOneRowTwoPix::ap_const_lv32_8 = "1000";
const sc_lv<32> streamInOneRowTwoPix::ap_const_lv32_F = "1111";
const sc_lv<4> streamInOneRowTwoPix::ap_const_lv4_1 = "1";
const sc_lv<32> streamInOneRowTwoPix::ap_const_lv32_3 = "11";

streamInOneRowTwoPix::streamInOneRowTwoPix(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Part2_V_fu_380_p1);
    sensitive << ( in_V_V_dout );

    SC_METHOD(thread_add_ln29_fu_259_p2);
    sensitive << ( ap_phi_mux_indvar_flatten13_phi_fu_168_p4 );

    SC_METHOD(thread_add_ln30_1_fu_361_p2);
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_190_p4 );

    SC_METHOD(thread_add_ln321_2_fu_407_p2);
    sensitive << ( select_ln321_reg_443 );
    sensitive << ( zext_ln321_15_fu_403_p1 );

    SC_METHOD(thread_add_ln321_3_fu_418_p2);
    sensitive << ( add_ln321_reg_448 );
    sensitive << ( zext_ln321_fu_399_p1 );

    SC_METHOD(thread_add_ln321_fu_247_p2);
    sensitive << ( p_shl1_cast_fu_237_p4 );
    sensitive << ( p_shl_cast_fu_227_p4 );

    SC_METHOD(thread_add_ln36_fu_393_p2);
    sensitive << ( zext_ln29_fu_367_p1 );
    sensitive << ( shl_ln_fu_386_p3 );

    SC_METHOD(thread_and_ln29_1_fu_315_p2);
    sensitive << ( xor_ln29_fu_293_p2 );
    sensitive << ( icmp_ln31_fu_309_p2 );

    SC_METHOD(thread_and_ln29_fu_303_p2);
    sensitive << ( trunc_ln321_fu_299_p1 );
    sensitive << ( xor_ln29_fu_293_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln29_reg_453 );

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln29_reg_453 );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( icmp_ln29_reg_453 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln29_fu_253_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_indvar_flatten13_phi_fu_168_p4);
    sensitive << ( icmp_ln29_reg_453 );
    sensitive << ( indvar_flatten13_reg_164 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( add_ln29_reg_457 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_indvar_flatten_phi_fu_190_p4);
    sensitive << ( icmp_ln29_reg_453 );
    sensitive << ( indvar_flatten_reg_186 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln30_1_reg_509 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_p_0_phi_fu_201_p4);
    sensitive << ( icmp_ln29_reg_453 );
    sensitive << ( p_0_reg_197 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln30_reg_483 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_s_0_phi_fu_179_p4);
    sensitive << ( icmp_ln29_reg_453 );
    sensitive << ( s_0_reg_175 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln29_1_reg_467 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_w_0_phi_fu_212_p4);
    sensitive << ( icmp_ln29_reg_453 );
    sensitive << ( w_0_reg_208 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( w_reg_504 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_icmp_ln29_fu_253_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_indvar_flatten13_phi_fu_168_p4 );

    SC_METHOD(thread_icmp_ln30_fu_271_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln29_fu_253_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_190_p4 );

    SC_METHOD(thread_icmp_ln31_fu_309_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln29_fu_253_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_w_0_phi_fu_212_p4 );

    SC_METHOD(thread_in_V_V_blk_n);
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( icmp_ln29_reg_453 );

    SC_METHOD(thread_in_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln29_reg_453 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_or_ln321_fu_327_p2);
    sensitive << ( icmp_ln30_fu_271_p2 );
    sensitive << ( and_ln29_1_fu_315_p2 );

    SC_METHOD(thread_p_fu_321_p2);
    sensitive << ( select_ln29_fu_277_p3 );

    SC_METHOD(thread_p_shl1_cast_fu_237_p4);
    sensitive << ( rowBufferIdx_V );

    SC_METHOD(thread_p_shl_cast_fu_227_p4);
    sensitive << ( rowBufferIdx_V );

    SC_METHOD(thread_row_buffer_0_V_address1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln321_16_fu_412_p1 );
    sensitive << ( zext_ln321_17_fu_434_p1 );

    SC_METHOD(thread_row_buffer_0_V_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_row_buffer_0_V_d1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( Part1_V_reg_493 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( Part2_V_fu_380_p1 );

    SC_METHOD(thread_row_buffer_0_V_we1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln29_reg_453 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( select_ln321_2_reg_479 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_row_buffer_1_V_address1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln321_16_fu_412_p1 );
    sensitive << ( zext_ln321_17_fu_434_p1 );

    SC_METHOD(thread_row_buffer_1_V_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_row_buffer_1_V_d1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( Part1_V_reg_493 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( Part2_V_fu_380_p1 );

    SC_METHOD(thread_row_buffer_1_V_we1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln29_reg_453 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( select_ln321_2_reg_479 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_s_fu_265_p2);
    sensitive << ( ap_phi_mux_s_0_phi_fu_179_p4 );

    SC_METHOD(thread_select_ln29_1_fu_285_p3);
    sensitive << ( icmp_ln30_fu_271_p2 );
    sensitive << ( ap_phi_mux_s_0_phi_fu_179_p4 );
    sensitive << ( s_fu_265_p2 );

    SC_METHOD(thread_select_ln29_fu_277_p3);
    sensitive << ( icmp_ln30_fu_271_p2 );
    sensitive << ( ap_phi_mux_p_0_phi_fu_201_p4 );

    SC_METHOD(thread_select_ln30_1_fu_428_p3);
    sensitive << ( icmp_ln30_reg_462 );
    sensitive << ( add_ln30_1_reg_488 );

    SC_METHOD(thread_select_ln30_fu_353_p3);
    sensitive << ( select_ln29_fu_277_p3 );
    sensitive << ( and_ln29_1_fu_315_p2 );
    sensitive << ( p_fu_321_p2 );

    SC_METHOD(thread_select_ln321_1_fu_333_p3);
    sensitive << ( ap_phi_mux_w_0_phi_fu_212_p4 );
    sensitive << ( or_ln321_fu_327_p2 );

    SC_METHOD(thread_select_ln321_2_fu_345_p3);
    sensitive << ( and_ln29_1_fu_315_p2 );
    sensitive << ( trunc_ln321_1_fu_341_p1 );
    sensitive << ( and_ln29_fu_303_p2 );

    SC_METHOD(thread_select_ln321_fu_219_p3);
    sensitive << ( rowBufferIdx_V );

    SC_METHOD(thread_shl_ln_fu_386_p3);
    sensitive << ( select_ln321_1_reg_473 );

    SC_METHOD(thread_skip_flag_read_read_fu_102_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( skip_flag );

    SC_METHOD(thread_trunc_ln321_1_fu_341_p1);
    sensitive << ( p_fu_321_p2 );

    SC_METHOD(thread_trunc_ln321_fu_299_p1);
    sensitive << ( ap_phi_mux_p_0_phi_fu_201_p4 );

    SC_METHOD(thread_w_fu_423_p2);
    sensitive << ( select_ln321_1_reg_473 );

    SC_METHOD(thread_xor_ln29_fu_293_p2);
    sensitive << ( icmp_ln30_fu_271_p2 );

    SC_METHOD(thread_zext_ln29_fu_367_p1);
    sensitive << ( select_ln29_1_reg_467 );

    SC_METHOD(thread_zext_ln321_15_fu_403_p1);
    sensitive << ( add_ln36_fu_393_p2 );

    SC_METHOD(thread_zext_ln321_16_fu_412_p1);
    sensitive << ( add_ln321_2_fu_407_p2 );

    SC_METHOD(thread_zext_ln321_17_fu_434_p1);
    sensitive << ( add_ln321_3_reg_499 );

    SC_METHOD(thread_zext_ln321_fu_399_p1);
    sensitive << ( add_ln36_fu_393_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( skip_flag_read_read_fu_102_p2 );
    sensitive << ( icmp_ln29_fu_253_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );

    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "streamInOneRowTwoPix_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_V_V_dout, "(port)in_V_V_dout");
    sc_trace(mVcdFile, in_V_V_empty_n, "(port)in_V_V_empty_n");
    sc_trace(mVcdFile, in_V_V_read, "(port)in_V_V_read");
    sc_trace(mVcdFile, row_buffer_0_V_address1, "(port)row_buffer_0_V_address1");
    sc_trace(mVcdFile, row_buffer_0_V_ce1, "(port)row_buffer_0_V_ce1");
    sc_trace(mVcdFile, row_buffer_0_V_we1, "(port)row_buffer_0_V_we1");
    sc_trace(mVcdFile, row_buffer_0_V_d1, "(port)row_buffer_0_V_d1");
    sc_trace(mVcdFile, row_buffer_1_V_address1, "(port)row_buffer_1_V_address1");
    sc_trace(mVcdFile, row_buffer_1_V_ce1, "(port)row_buffer_1_V_ce1");
    sc_trace(mVcdFile, row_buffer_1_V_we1, "(port)row_buffer_1_V_we1");
    sc_trace(mVcdFile, row_buffer_1_V_d1, "(port)row_buffer_1_V_d1");
    sc_trace(mVcdFile, skip_flag, "(port)skip_flag");
    sc_trace(mVcdFile, rowBufferIdx_V, "(port)rowBufferIdx_V");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, in_V_V_blk_n, "in_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, icmp_ln29_reg_453, "icmp_ln29_reg_453");
    sc_trace(mVcdFile, indvar_flatten13_reg_164, "indvar_flatten13_reg_164");
    sc_trace(mVcdFile, s_0_reg_175, "s_0_reg_175");
    sc_trace(mVcdFile, indvar_flatten_reg_186, "indvar_flatten_reg_186");
    sc_trace(mVcdFile, p_0_reg_197, "p_0_reg_197");
    sc_trace(mVcdFile, w_0_reg_208, "w_0_reg_208");
    sc_trace(mVcdFile, skip_flag_read_read_fu_102_p2, "skip_flag_read_read_fu_102_p2");
    sc_trace(mVcdFile, select_ln321_fu_219_p3, "select_ln321_fu_219_p3");
    sc_trace(mVcdFile, select_ln321_reg_443, "select_ln321_reg_443");
    sc_trace(mVcdFile, add_ln321_fu_247_p2, "add_ln321_fu_247_p2");
    sc_trace(mVcdFile, add_ln321_reg_448, "add_ln321_reg_448");
    sc_trace(mVcdFile, icmp_ln29_fu_253_p2, "icmp_ln29_fu_253_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, add_ln29_fu_259_p2, "add_ln29_fu_259_p2");
    sc_trace(mVcdFile, add_ln29_reg_457, "add_ln29_reg_457");
    sc_trace(mVcdFile, icmp_ln30_fu_271_p2, "icmp_ln30_fu_271_p2");
    sc_trace(mVcdFile, icmp_ln30_reg_462, "icmp_ln30_reg_462");
    sc_trace(mVcdFile, select_ln29_1_fu_285_p3, "select_ln29_1_fu_285_p3");
    sc_trace(mVcdFile, select_ln29_1_reg_467, "select_ln29_1_reg_467");
    sc_trace(mVcdFile, select_ln321_1_fu_333_p3, "select_ln321_1_fu_333_p3");
    sc_trace(mVcdFile, select_ln321_1_reg_473, "select_ln321_1_reg_473");
    sc_trace(mVcdFile, select_ln321_2_fu_345_p3, "select_ln321_2_fu_345_p3");
    sc_trace(mVcdFile, select_ln321_2_reg_479, "select_ln321_2_reg_479");
    sc_trace(mVcdFile, select_ln30_fu_353_p3, "select_ln30_fu_353_p3");
    sc_trace(mVcdFile, select_ln30_reg_483, "select_ln30_reg_483");
    sc_trace(mVcdFile, add_ln30_1_fu_361_p2, "add_ln30_1_fu_361_p2");
    sc_trace(mVcdFile, add_ln30_1_reg_488, "add_ln30_1_reg_488");
    sc_trace(mVcdFile, Part1_V_reg_493, "Part1_V_reg_493");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, add_ln321_3_fu_418_p2, "add_ln321_3_fu_418_p2");
    sc_trace(mVcdFile, add_ln321_3_reg_499, "add_ln321_3_reg_499");
    sc_trace(mVcdFile, w_fu_423_p2, "w_fu_423_p2");
    sc_trace(mVcdFile, w_reg_504, "w_reg_504");
    sc_trace(mVcdFile, select_ln30_1_fu_428_p3, "select_ln30_1_fu_428_p3");
    sc_trace(mVcdFile, select_ln30_1_reg_509, "select_ln30_1_reg_509");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_phi_mux_indvar_flatten13_phi_fu_168_p4, "ap_phi_mux_indvar_flatten13_phi_fu_168_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_s_0_phi_fu_179_p4, "ap_phi_mux_s_0_phi_fu_179_p4");
    sc_trace(mVcdFile, ap_phi_mux_indvar_flatten_phi_fu_190_p4, "ap_phi_mux_indvar_flatten_phi_fu_190_p4");
    sc_trace(mVcdFile, ap_phi_mux_p_0_phi_fu_201_p4, "ap_phi_mux_p_0_phi_fu_201_p4");
    sc_trace(mVcdFile, ap_phi_mux_w_0_phi_fu_212_p4, "ap_phi_mux_w_0_phi_fu_212_p4");
    sc_trace(mVcdFile, zext_ln321_16_fu_412_p1, "zext_ln321_16_fu_412_p1");
    sc_trace(mVcdFile, zext_ln321_17_fu_434_p1, "zext_ln321_17_fu_434_p1");
    sc_trace(mVcdFile, Part2_V_fu_380_p1, "Part2_V_fu_380_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_237_p4, "p_shl1_cast_fu_237_p4");
    sc_trace(mVcdFile, p_shl_cast_fu_227_p4, "p_shl_cast_fu_227_p4");
    sc_trace(mVcdFile, s_fu_265_p2, "s_fu_265_p2");
    sc_trace(mVcdFile, trunc_ln321_fu_299_p1, "trunc_ln321_fu_299_p1");
    sc_trace(mVcdFile, xor_ln29_fu_293_p2, "xor_ln29_fu_293_p2");
    sc_trace(mVcdFile, icmp_ln31_fu_309_p2, "icmp_ln31_fu_309_p2");
    sc_trace(mVcdFile, select_ln29_fu_277_p3, "select_ln29_fu_277_p3");
    sc_trace(mVcdFile, and_ln29_1_fu_315_p2, "and_ln29_1_fu_315_p2");
    sc_trace(mVcdFile, or_ln321_fu_327_p2, "or_ln321_fu_327_p2");
    sc_trace(mVcdFile, p_fu_321_p2, "p_fu_321_p2");
    sc_trace(mVcdFile, trunc_ln321_1_fu_341_p1, "trunc_ln321_1_fu_341_p1");
    sc_trace(mVcdFile, and_ln29_fu_303_p2, "and_ln29_fu_303_p2");
    sc_trace(mVcdFile, zext_ln29_fu_367_p1, "zext_ln29_fu_367_p1");
    sc_trace(mVcdFile, shl_ln_fu_386_p3, "shl_ln_fu_386_p3");
    sc_trace(mVcdFile, add_ln36_fu_393_p2, "add_ln36_fu_393_p2");
    sc_trace(mVcdFile, zext_ln321_15_fu_403_p1, "zext_ln321_15_fu_403_p1");
    sc_trace(mVcdFile, add_ln321_2_fu_407_p2, "add_ln321_2_fu_407_p2");
    sc_trace(mVcdFile, zext_ln321_fu_399_p1, "zext_ln321_fu_399_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

streamInOneRowTwoPix::~streamInOneRowTwoPix() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void streamInOneRowTwoPix::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, skip_flag_read_read_fu_102_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, skip_flag_read_read_fu_102_p2.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(icmp_ln29_reg_453.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        indvar_flatten13_reg_164 = add_ln29_reg_457.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, skip_flag_read_read_fu_102_p2.read()))) {
        indvar_flatten13_reg_164 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(icmp_ln29_reg_453.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        indvar_flatten_reg_186 = select_ln30_1_reg_509.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, skip_flag_read_read_fu_102_p2.read()))) {
        indvar_flatten_reg_186 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(icmp_ln29_reg_453.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        p_0_reg_197 = select_ln30_reg_483.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, skip_flag_read_read_fu_102_p2.read()))) {
        p_0_reg_197 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(icmp_ln29_reg_453.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        s_0_reg_175 = select_ln29_1_reg_467.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, skip_flag_read_read_fu_102_p2.read()))) {
        s_0_reg_175 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(icmp_ln29_reg_453.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        w_0_reg_208 = w_reg_504.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, skip_flag_read_read_fu_102_p2.read()))) {
        w_0_reg_208 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(icmp_ln29_reg_453.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        Part1_V_reg_493 = in_V_V_dout.read().range(15, 8);
        add_ln321_3_reg_499 = add_ln321_3_fu_418_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        add_ln29_reg_457 = add_ln29_fu_259_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln29_fu_253_p2.read()))) {
        add_ln30_1_reg_488 = add_ln30_1_fu_361_p2.read();
        icmp_ln30_reg_462 = icmp_ln30_fu_271_p2.read();
        select_ln321_1_reg_473 = select_ln321_1_fu_333_p3.read();
        select_ln321_2_reg_479 = select_ln321_2_fu_345_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, skip_flag_read_read_fu_102_p2.read()))) {
        add_ln321_reg_448 = add_ln321_fu_247_p2.read();
        select_ln321_reg_443 = select_ln321_fu_219_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln29_reg_453 = icmp_ln29_fu_253_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln29_fu_253_p2.read()))) {
        select_ln29_1_reg_467 = select_ln29_1_fu_285_p3.read();
        select_ln30_reg_483 = select_ln30_fu_353_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln29_reg_453.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        select_ln30_1_reg_509 = select_ln30_1_fu_428_p3.read();
        w_reg_504 = w_fu_423_p2.read();
    }
}

void streamInOneRowTwoPix::thread_Part2_V_fu_380_p1() {
    Part2_V_fu_380_p1 = in_V_V_dout.read().range(8-1, 0);
}

void streamInOneRowTwoPix::thread_add_ln29_fu_259_p2() {
    add_ln29_fu_259_p2 = (!ap_phi_mux_indvar_flatten13_phi_fu_168_p4.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(ap_phi_mux_indvar_flatten13_phi_fu_168_p4.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void streamInOneRowTwoPix::thread_add_ln30_1_fu_361_p2() {
    add_ln30_1_fu_361_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_190_p4.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(ap_phi_mux_indvar_flatten_phi_fu_190_p4.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void streamInOneRowTwoPix::thread_add_ln321_2_fu_407_p2() {
    add_ln321_2_fu_407_p2 = (!select_ln321_reg_443.read().is_01() || !zext_ln321_15_fu_403_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(select_ln321_reg_443.read()) + sc_biguint<9>(zext_ln321_15_fu_403_p1.read()));
}

void streamInOneRowTwoPix::thread_add_ln321_3_fu_418_p2() {
    add_ln321_3_fu_418_p2 = (!add_ln321_reg_448.read().is_01() || !zext_ln321_fu_399_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(add_ln321_reg_448.read()) + sc_biguint<11>(zext_ln321_fu_399_p1.read()));
}

void streamInOneRowTwoPix::thread_add_ln321_fu_247_p2() {
    add_ln321_fu_247_p2 = (!p_shl1_cast_fu_237_p4.read().is_01() || !p_shl_cast_fu_227_p4.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_shl1_cast_fu_237_p4.read()) + sc_biguint<11>(p_shl_cast_fu_227_p4.read()));
}

void streamInOneRowTwoPix::thread_add_ln36_fu_393_p2() {
    add_ln36_fu_393_p2 = (!zext_ln29_fu_367_p1.read().is_01() || !shl_ln_fu_386_p3.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln29_fu_367_p1.read()) + sc_biguint<8>(shl_ln_fu_386_p3.read()));
}

void streamInOneRowTwoPix::thread_and_ln29_1_fu_315_p2() {
    and_ln29_1_fu_315_p2 = (icmp_ln31_fu_309_p2.read() & xor_ln29_fu_293_p2.read());
}

void streamInOneRowTwoPix::thread_and_ln29_fu_303_p2() {
    and_ln29_fu_303_p2 = (trunc_ln321_fu_299_p1.read() & xor_ln29_fu_293_p2.read());
}

void streamInOneRowTwoPix::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void streamInOneRowTwoPix::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void streamInOneRowTwoPix::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void streamInOneRowTwoPix::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[3];
}

void streamInOneRowTwoPix::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void streamInOneRowTwoPix::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void streamInOneRowTwoPix::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void streamInOneRowTwoPix::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void streamInOneRowTwoPix::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln29_reg_453.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()));
}

void streamInOneRowTwoPix::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln29_reg_453.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()));
}

void streamInOneRowTwoPix::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void streamInOneRowTwoPix::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = (esl_seteq<1,1,1>(icmp_ln29_reg_453.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read()));
}

void streamInOneRowTwoPix::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void streamInOneRowTwoPix::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln29_fu_253_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void streamInOneRowTwoPix::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void streamInOneRowTwoPix::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void streamInOneRowTwoPix::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void streamInOneRowTwoPix::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void streamInOneRowTwoPix::thread_ap_phi_mux_indvar_flatten13_phi_fu_168_p4() {
    if ((esl_seteq<1,1,1>(icmp_ln29_reg_453.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_indvar_flatten13_phi_fu_168_p4 = add_ln29_reg_457.read();
    } else {
        ap_phi_mux_indvar_flatten13_phi_fu_168_p4 = indvar_flatten13_reg_164.read();
    }
}

void streamInOneRowTwoPix::thread_ap_phi_mux_indvar_flatten_phi_fu_190_p4() {
    if ((esl_seteq<1,1,1>(icmp_ln29_reg_453.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_indvar_flatten_phi_fu_190_p4 = select_ln30_1_reg_509.read();
    } else {
        ap_phi_mux_indvar_flatten_phi_fu_190_p4 = indvar_flatten_reg_186.read();
    }
}

void streamInOneRowTwoPix::thread_ap_phi_mux_p_0_phi_fu_201_p4() {
    if ((esl_seteq<1,1,1>(icmp_ln29_reg_453.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_p_0_phi_fu_201_p4 = select_ln30_reg_483.read();
    } else {
        ap_phi_mux_p_0_phi_fu_201_p4 = p_0_reg_197.read();
    }
}

void streamInOneRowTwoPix::thread_ap_phi_mux_s_0_phi_fu_179_p4() {
    if ((esl_seteq<1,1,1>(icmp_ln29_reg_453.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_s_0_phi_fu_179_p4 = select_ln29_1_reg_467.read();
    } else {
        ap_phi_mux_s_0_phi_fu_179_p4 = s_0_reg_175.read();
    }
}

void streamInOneRowTwoPix::thread_ap_phi_mux_w_0_phi_fu_212_p4() {
    if ((esl_seteq<1,1,1>(icmp_ln29_reg_453.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_w_0_phi_fu_212_p4 = w_reg_504.read();
    } else {
        ap_phi_mux_w_0_phi_fu_212_p4 = w_0_reg_208.read();
    }
}

void streamInOneRowTwoPix::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void streamInOneRowTwoPix::thread_icmp_ln29_fu_253_p2() {
    icmp_ln29_fu_253_p2 = (!ap_phi_mux_indvar_flatten13_phi_fu_168_p4.read().is_01() || !ap_const_lv9_140.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_flatten13_phi_fu_168_p4.read() == ap_const_lv9_140);
}

void streamInOneRowTwoPix::thread_icmp_ln30_fu_271_p2() {
    icmp_ln30_fu_271_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_190_p4.read().is_01() || !ap_const_lv6_14.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_flatten_phi_fu_190_p4.read() == ap_const_lv6_14);
}

void streamInOneRowTwoPix::thread_icmp_ln31_fu_309_p2() {
    icmp_ln31_fu_309_p2 = (!ap_phi_mux_w_0_phi_fu_212_p4.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_w_0_phi_fu_212_p4.read() == ap_const_lv4_A);
}

void streamInOneRowTwoPix::thread_in_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln29_reg_453.read(), ap_const_lv1_0))) {
        in_V_V_blk_n = in_V_V_empty_n.read();
    } else {
        in_V_V_blk_n = ap_const_logic_1;
    }
}

void streamInOneRowTwoPix::thread_in_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln29_reg_453.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        in_V_V_read = ap_const_logic_1;
    } else {
        in_V_V_read = ap_const_logic_0;
    }
}

void streamInOneRowTwoPix::thread_or_ln321_fu_327_p2() {
    or_ln321_fu_327_p2 = (and_ln29_1_fu_315_p2.read() | icmp_ln30_fu_271_p2.read());
}

void streamInOneRowTwoPix::thread_p_fu_321_p2() {
    p_fu_321_p2 = (!ap_const_lv2_1.is_01() || !select_ln29_fu_277_p3.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(select_ln29_fu_277_p3.read()));
}

void streamInOneRowTwoPix::thread_p_shl1_cast_fu_237_p4() {
    p_shl1_cast_fu_237_p4 = esl_concat<6,5>(esl_concat<5,1>(ap_const_lv5_1, rowBufferIdx_V.read()), ap_const_lv5_0);
}

void streamInOneRowTwoPix::thread_p_shl_cast_fu_227_p4() {
    p_shl_cast_fu_227_p4 = esl_concat<4,7>(esl_concat<3,1>(ap_const_lv3_1, rowBufferIdx_V.read()), ap_const_lv7_0);
}

void streamInOneRowTwoPix::thread_row_buffer_0_V_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        row_buffer_0_V_address1 =  (sc_lv<10>) (zext_ln321_17_fu_434_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        row_buffer_0_V_address1 =  (sc_lv<10>) (zext_ln321_16_fu_412_p1.read());
    } else {
        row_buffer_0_V_address1 = "XXXXXXXXXX";
    }
}

void streamInOneRowTwoPix::thread_row_buffer_0_V_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        row_buffer_0_V_ce1 = ap_const_logic_1;
    } else {
        row_buffer_0_V_ce1 = ap_const_logic_0;
    }
}

void streamInOneRowTwoPix::thread_row_buffer_0_V_d1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        row_buffer_0_V_d1 = Part1_V_reg_493.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        row_buffer_0_V_d1 = Part2_V_fu_380_p1.read();
    } else {
        row_buffer_0_V_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void streamInOneRowTwoPix::thread_row_buffer_0_V_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln29_reg_453.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, select_ln321_2_reg_479.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, select_ln321_2_reg_479.read())))) {
        row_buffer_0_V_we1 = ap_const_logic_1;
    } else {
        row_buffer_0_V_we1 = ap_const_logic_0;
    }
}

void streamInOneRowTwoPix::thread_row_buffer_1_V_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        row_buffer_1_V_address1 =  (sc_lv<10>) (zext_ln321_17_fu_434_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        row_buffer_1_V_address1 =  (sc_lv<10>) (zext_ln321_16_fu_412_p1.read());
    } else {
        row_buffer_1_V_address1 = "XXXXXXXXXX";
    }
}

void streamInOneRowTwoPix::thread_row_buffer_1_V_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        row_buffer_1_V_ce1 = ap_const_logic_1;
    } else {
        row_buffer_1_V_ce1 = ap_const_logic_0;
    }
}

void streamInOneRowTwoPix::thread_row_buffer_1_V_d1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        row_buffer_1_V_d1 = Part1_V_reg_493.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        row_buffer_1_V_d1 = Part2_V_fu_380_p1.read();
    } else {
        row_buffer_1_V_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void streamInOneRowTwoPix::thread_row_buffer_1_V_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln29_reg_453.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(select_ln321_2_reg_479.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(select_ln321_2_reg_479.read(), ap_const_lv1_1)))) {
        row_buffer_1_V_we1 = ap_const_logic_1;
    } else {
        row_buffer_1_V_we1 = ap_const_logic_0;
    }
}

void streamInOneRowTwoPix::thread_s_fu_265_p2() {
    s_fu_265_p2 = (!ap_const_lv5_1.is_01() || !ap_phi_mux_s_0_phi_fu_179_p4.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_1) + sc_biguint<5>(ap_phi_mux_s_0_phi_fu_179_p4.read()));
}

void streamInOneRowTwoPix::thread_select_ln29_1_fu_285_p3() {
    select_ln29_1_fu_285_p3 = (!icmp_ln30_fu_271_p2.read()[0].is_01())? sc_lv<5>(): ((icmp_ln30_fu_271_p2.read()[0].to_bool())? s_fu_265_p2.read(): ap_phi_mux_s_0_phi_fu_179_p4.read());
}

void streamInOneRowTwoPix::thread_select_ln29_fu_277_p3() {
    select_ln29_fu_277_p3 = (!icmp_ln30_fu_271_p2.read()[0].is_01())? sc_lv<2>(): ((icmp_ln30_fu_271_p2.read()[0].to_bool())? ap_const_lv2_0: ap_phi_mux_p_0_phi_fu_201_p4.read());
}

void streamInOneRowTwoPix::thread_select_ln30_1_fu_428_p3() {
    select_ln30_1_fu_428_p3 = (!icmp_ln30_reg_462.read()[0].is_01())? sc_lv<6>(): ((icmp_ln30_reg_462.read()[0].to_bool())? ap_const_lv6_1: add_ln30_1_reg_488.read());
}

void streamInOneRowTwoPix::thread_select_ln30_fu_353_p3() {
    select_ln30_fu_353_p3 = (!and_ln29_1_fu_315_p2.read()[0].is_01())? sc_lv<2>(): ((and_ln29_1_fu_315_p2.read()[0].to_bool())? p_fu_321_p2.read(): select_ln29_fu_277_p3.read());
}

void streamInOneRowTwoPix::thread_select_ln321_1_fu_333_p3() {
    select_ln321_1_fu_333_p3 = (!or_ln321_fu_327_p2.read()[0].is_01())? sc_lv<4>(): ((or_ln321_fu_327_p2.read()[0].to_bool())? ap_const_lv4_0: ap_phi_mux_w_0_phi_fu_212_p4.read());
}

void streamInOneRowTwoPix::thread_select_ln321_2_fu_345_p3() {
    select_ln321_2_fu_345_p3 = (!and_ln29_1_fu_315_p2.read()[0].is_01())? sc_lv<1>(): ((and_ln29_1_fu_315_p2.read()[0].to_bool())? trunc_ln321_1_fu_341_p1.read(): and_ln29_fu_303_p2.read());
}

void streamInOneRowTwoPix::thread_select_ln321_fu_219_p3() {
    select_ln321_fu_219_p3 = (!rowBufferIdx_V.read()[0].is_01())? sc_lv<9>(): ((rowBufferIdx_V.read()[0].to_bool())? ap_const_lv9_A0: ap_const_lv9_0);
}

void streamInOneRowTwoPix::thread_shl_ln_fu_386_p3() {
    shl_ln_fu_386_p3 = esl_concat<4,4>(select_ln321_1_reg_473.read(), ap_const_lv4_0);
}

void streamInOneRowTwoPix::thread_skip_flag_read_read_fu_102_p2() {
    skip_flag_read_read_fu_102_p2 =  (sc_lv<1>) (skip_flag.read());
}

void streamInOneRowTwoPix::thread_trunc_ln321_1_fu_341_p1() {
    trunc_ln321_1_fu_341_p1 = p_fu_321_p2.read().range(1-1, 0);
}

void streamInOneRowTwoPix::thread_trunc_ln321_fu_299_p1() {
    trunc_ln321_fu_299_p1 = ap_phi_mux_p_0_phi_fu_201_p4.read().range(1-1, 0);
}

void streamInOneRowTwoPix::thread_w_fu_423_p2() {
    w_fu_423_p2 = (!select_ln321_1_reg_473.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(select_ln321_1_reg_473.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void streamInOneRowTwoPix::thread_xor_ln29_fu_293_p2() {
    xor_ln29_fu_293_p2 = (icmp_ln30_fu_271_p2.read() ^ ap_const_lv1_1);
}

void streamInOneRowTwoPix::thread_zext_ln29_fu_367_p1() {
    zext_ln29_fu_367_p1 = esl_zext<8,5>(select_ln29_1_reg_467.read());
}

void streamInOneRowTwoPix::thread_zext_ln321_15_fu_403_p1() {
    zext_ln321_15_fu_403_p1 = esl_zext<9,8>(add_ln36_fu_393_p2.read());
}

void streamInOneRowTwoPix::thread_zext_ln321_16_fu_412_p1() {
    zext_ln321_16_fu_412_p1 = esl_zext<64,9>(add_ln321_2_fu_407_p2.read());
}

void streamInOneRowTwoPix::thread_zext_ln321_17_fu_434_p1() {
    zext_ln321_17_fu_434_p1 = esl_zext<64,11>(add_ln321_3_reg_499.read());
}

void streamInOneRowTwoPix::thread_zext_ln321_fu_399_p1() {
    zext_ln321_fu_399_p1 = esl_zext<11,8>(add_ln36_fu_393_p2.read());
}

void streamInOneRowTwoPix::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, skip_flag_read_read_fu_102_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(skip_flag_read_read_fu_102_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln29_fu_253_p2.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln29_fu_253_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<4>) ("XXXX");
            break;
    }
}

}

