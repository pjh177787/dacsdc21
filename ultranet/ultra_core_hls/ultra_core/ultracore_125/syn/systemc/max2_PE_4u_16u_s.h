// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max2_PE_4u_16u_s_HH_
#define _max2_PE_4u_16u_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct max2_PE_4u_16u_s : public sc_module {
    // Port declarations 4
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<64> > data0_V;
    sc_in< sc_lv<64> > data1_V;
    sc_out< sc_lv<64> > ap_return;


    // Module declarations
    max2_PE_4u_16u_s(sc_module_name name);
    SC_HAS_PROCESS(max2_PE_4u_16u_s);

    ~max2_PE_4u_16u_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<4> > trunc_ln647_12_fu_86_p1;
    sc_signal< sc_lv<4> > trunc_ln647_fu_82_p1;
    sc_signal< sc_lv<1> > icmp_ln895_fu_90_p2;
    sc_signal< sc_lv<4> > p_Result_117_1_fu_114_p4;
    sc_signal< sc_lv<4> > p_Result_116_1_fu_104_p4;
    sc_signal< sc_lv<1> > icmp_ln895_1_fu_124_p2;
    sc_signal< sc_lv<4> > p_Result_117_2_fu_148_p4;
    sc_signal< sc_lv<4> > p_Result_116_2_fu_138_p4;
    sc_signal< sc_lv<1> > icmp_ln895_2_fu_158_p2;
    sc_signal< sc_lv<4> > p_Result_117_3_fu_182_p4;
    sc_signal< sc_lv<4> > p_Result_116_3_fu_172_p4;
    sc_signal< sc_lv<1> > icmp_ln895_3_fu_192_p2;
    sc_signal< sc_lv<4> > p_Result_117_4_fu_216_p4;
    sc_signal< sc_lv<4> > p_Result_116_4_fu_206_p4;
    sc_signal< sc_lv<1> > icmp_ln895_4_fu_226_p2;
    sc_signal< sc_lv<4> > p_Result_117_5_fu_250_p4;
    sc_signal< sc_lv<4> > p_Result_116_5_fu_240_p4;
    sc_signal< sc_lv<1> > icmp_ln895_5_fu_260_p2;
    sc_signal< sc_lv<4> > p_Result_117_6_fu_284_p4;
    sc_signal< sc_lv<4> > p_Result_116_6_fu_274_p4;
    sc_signal< sc_lv<1> > icmp_ln895_6_fu_294_p2;
    sc_signal< sc_lv<4> > p_Result_117_7_fu_318_p4;
    sc_signal< sc_lv<4> > p_Result_116_7_fu_308_p4;
    sc_signal< sc_lv<1> > icmp_ln895_7_fu_328_p2;
    sc_signal< sc_lv<4> > p_Result_117_8_fu_352_p4;
    sc_signal< sc_lv<4> > p_Result_116_8_fu_342_p4;
    sc_signal< sc_lv<1> > icmp_ln895_8_fu_362_p2;
    sc_signal< sc_lv<4> > p_Result_117_9_fu_386_p4;
    sc_signal< sc_lv<4> > p_Result_116_9_fu_376_p4;
    sc_signal< sc_lv<1> > icmp_ln895_9_fu_396_p2;
    sc_signal< sc_lv<4> > p_Result_117_s_fu_420_p4;
    sc_signal< sc_lv<4> > p_Result_116_s_fu_410_p4;
    sc_signal< sc_lv<1> > icmp_ln895_10_fu_430_p2;
    sc_signal< sc_lv<4> > p_Result_117_10_fu_454_p4;
    sc_signal< sc_lv<4> > p_Result_116_10_fu_444_p4;
    sc_signal< sc_lv<1> > icmp_ln895_11_fu_464_p2;
    sc_signal< sc_lv<4> > p_Result_117_11_fu_488_p4;
    sc_signal< sc_lv<4> > p_Result_116_11_fu_478_p4;
    sc_signal< sc_lv<1> > icmp_ln895_12_fu_498_p2;
    sc_signal< sc_lv<4> > p_Result_117_12_fu_522_p4;
    sc_signal< sc_lv<4> > p_Result_116_12_fu_512_p4;
    sc_signal< sc_lv<1> > icmp_ln895_13_fu_532_p2;
    sc_signal< sc_lv<4> > p_Result_117_13_fu_556_p4;
    sc_signal< sc_lv<4> > p_Result_116_13_fu_546_p4;
    sc_signal< sc_lv<1> > icmp_ln895_14_fu_566_p2;
    sc_signal< sc_lv<4> > p_Result_117_14_fu_590_p4;
    sc_signal< sc_lv<4> > p_Result_116_14_fu_580_p4;
    sc_signal< sc_lv<1> > icmp_ln895_15_fu_600_p2;
    sc_signal< sc_lv<4> > select_ln18_25_fu_606_p3;
    sc_signal< sc_lv<4> > select_ln18_24_fu_572_p3;
    sc_signal< sc_lv<4> > select_ln18_23_fu_538_p3;
    sc_signal< sc_lv<4> > select_ln18_22_fu_504_p3;
    sc_signal< sc_lv<4> > select_ln18_21_fu_470_p3;
    sc_signal< sc_lv<4> > select_ln18_20_fu_436_p3;
    sc_signal< sc_lv<4> > select_ln18_19_fu_402_p3;
    sc_signal< sc_lv<4> > select_ln18_18_fu_368_p3;
    sc_signal< sc_lv<4> > select_ln18_17_fu_334_p3;
    sc_signal< sc_lv<4> > select_ln18_16_fu_300_p3;
    sc_signal< sc_lv<4> > select_ln18_15_fu_266_p3;
    sc_signal< sc_lv<4> > select_ln18_14_fu_232_p3;
    sc_signal< sc_lv<4> > select_ln18_13_fu_198_p3;
    sc_signal< sc_lv<4> > select_ln18_12_fu_164_p3;
    sc_signal< sc_lv<4> > select_ln18_11_fu_130_p3;
    sc_signal< sc_lv<4> > select_ln18_fu_96_p3;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_23;
    static const sc_lv<32> ap_const_lv32_24;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<32> ap_const_lv32_2B;
    static const sc_lv<32> ap_const_lv32_2C;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<32> ap_const_lv32_33;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_37;
    static const sc_lv<32> ap_const_lv32_38;
    static const sc_lv<32> ap_const_lv32_3B;
    static const sc_lv<32> ap_const_lv32_3C;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_ready();
    void thread_ap_return();
    void thread_icmp_ln895_10_fu_430_p2();
    void thread_icmp_ln895_11_fu_464_p2();
    void thread_icmp_ln895_12_fu_498_p2();
    void thread_icmp_ln895_13_fu_532_p2();
    void thread_icmp_ln895_14_fu_566_p2();
    void thread_icmp_ln895_15_fu_600_p2();
    void thread_icmp_ln895_1_fu_124_p2();
    void thread_icmp_ln895_2_fu_158_p2();
    void thread_icmp_ln895_3_fu_192_p2();
    void thread_icmp_ln895_4_fu_226_p2();
    void thread_icmp_ln895_5_fu_260_p2();
    void thread_icmp_ln895_6_fu_294_p2();
    void thread_icmp_ln895_7_fu_328_p2();
    void thread_icmp_ln895_8_fu_362_p2();
    void thread_icmp_ln895_9_fu_396_p2();
    void thread_icmp_ln895_fu_90_p2();
    void thread_p_Result_116_10_fu_444_p4();
    void thread_p_Result_116_11_fu_478_p4();
    void thread_p_Result_116_12_fu_512_p4();
    void thread_p_Result_116_13_fu_546_p4();
    void thread_p_Result_116_14_fu_580_p4();
    void thread_p_Result_116_1_fu_104_p4();
    void thread_p_Result_116_2_fu_138_p4();
    void thread_p_Result_116_3_fu_172_p4();
    void thread_p_Result_116_4_fu_206_p4();
    void thread_p_Result_116_5_fu_240_p4();
    void thread_p_Result_116_6_fu_274_p4();
    void thread_p_Result_116_7_fu_308_p4();
    void thread_p_Result_116_8_fu_342_p4();
    void thread_p_Result_116_9_fu_376_p4();
    void thread_p_Result_116_s_fu_410_p4();
    void thread_p_Result_117_10_fu_454_p4();
    void thread_p_Result_117_11_fu_488_p4();
    void thread_p_Result_117_12_fu_522_p4();
    void thread_p_Result_117_13_fu_556_p4();
    void thread_p_Result_117_14_fu_590_p4();
    void thread_p_Result_117_1_fu_114_p4();
    void thread_p_Result_117_2_fu_148_p4();
    void thread_p_Result_117_3_fu_182_p4();
    void thread_p_Result_117_4_fu_216_p4();
    void thread_p_Result_117_5_fu_250_p4();
    void thread_p_Result_117_6_fu_284_p4();
    void thread_p_Result_117_7_fu_318_p4();
    void thread_p_Result_117_8_fu_352_p4();
    void thread_p_Result_117_9_fu_386_p4();
    void thread_p_Result_117_s_fu_420_p4();
    void thread_select_ln18_11_fu_130_p3();
    void thread_select_ln18_12_fu_164_p3();
    void thread_select_ln18_13_fu_198_p3();
    void thread_select_ln18_14_fu_232_p3();
    void thread_select_ln18_15_fu_266_p3();
    void thread_select_ln18_16_fu_300_p3();
    void thread_select_ln18_17_fu_334_p3();
    void thread_select_ln18_18_fu_368_p3();
    void thread_select_ln18_19_fu_402_p3();
    void thread_select_ln18_20_fu_436_p3();
    void thread_select_ln18_21_fu_470_p3();
    void thread_select_ln18_22_fu_504_p3();
    void thread_select_ln18_23_fu_538_p3();
    void thread_select_ln18_24_fu_572_p3();
    void thread_select_ln18_25_fu_606_p3();
    void thread_select_ln18_fu_96_p3();
    void thread_trunc_ln647_12_fu_86_p1();
    void thread_trunc_ln647_fu_82_p1();
};

}

using namespace ap_rtl;

#endif
