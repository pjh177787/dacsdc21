// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _resize_HH_
#define _resize_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "stream_to_mat.h"
#include "Resize_opr_linear.h"
#include "mat_to_stream.h"
#include "fifo_w8_d1024_A.h"
#include "start_for_Resize_mb6.h"
#include "start_for_mat_to_ncg.h"

namespace ap_rtl {

struct resize : public sc_module {
    // Port declarations 13
    sc_in< sc_lv<24> > in_V_V_dout;
    sc_in< sc_logic > in_V_V_empty_n;
    sc_out< sc_logic > in_V_V_read;
    sc_out< sc_lv<24> > out_V_V_din;
    sc_in< sc_logic > out_V_V_full_n;
    sc_out< sc_logic > out_V_V_write;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > ap_idle;
    sc_in< sc_logic > ap_continue;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    resize(sc_module_name name);
    SC_HAS_PROCESS(resize);

    ~resize();

    sc_trace_file* mVcdFile;

    stream_to_mat* stream_to_mat_U0;
    Resize_opr_linear* Resize_opr_linear_U0;
    mat_to_stream* mat_to_stream_U0;
    fifo_w8_d1024_A* raw_img_data_stream_s_U;
    fifo_w8_d1024_A* raw_img_data_stream_1_U;
    fifo_w8_d1024_A* raw_img_data_stream_2_U;
    fifo_w8_d1024_A* resize_img_data_stre_U;
    fifo_w8_d1024_A* resize_img_data_stre_1_U;
    fifo_w8_d1024_A* resize_img_data_stre_2_U;
    start_for_Resize_mb6* start_for_Resize_mb6_U;
    start_for_mat_to_ncg* start_for_mat_to_ncg_U;
    sc_signal< sc_logic > stream_to_mat_U0_ap_start;
    sc_signal< sc_logic > stream_to_mat_U0_ap_done;
    sc_signal< sc_logic > stream_to_mat_U0_ap_continue;
    sc_signal< sc_logic > stream_to_mat_U0_ap_idle;
    sc_signal< sc_logic > stream_to_mat_U0_ap_ready;
    sc_signal< sc_logic > stream_to_mat_U0_start_out;
    sc_signal< sc_logic > stream_to_mat_U0_start_write;
    sc_signal< sc_logic > stream_to_mat_U0_in_V_V_read;
    sc_signal< sc_lv<8> > stream_to_mat_U0_raw_img_data_stream_0_V_din;
    sc_signal< sc_logic > stream_to_mat_U0_raw_img_data_stream_0_V_write;
    sc_signal< sc_lv<8> > stream_to_mat_U0_raw_img_data_stream_1_V_din;
    sc_signal< sc_logic > stream_to_mat_U0_raw_img_data_stream_1_V_write;
    sc_signal< sc_lv<8> > stream_to_mat_U0_raw_img_data_stream_2_V_din;
    sc_signal< sc_logic > stream_to_mat_U0_raw_img_data_stream_2_V_write;
    sc_signal< sc_logic > Resize_opr_linear_U0_ap_start;
    sc_signal< sc_logic > Resize_opr_linear_U0_ap_done;
    sc_signal< sc_logic > Resize_opr_linear_U0_ap_continue;
    sc_signal< sc_logic > Resize_opr_linear_U0_ap_idle;
    sc_signal< sc_logic > Resize_opr_linear_U0_ap_ready;
    sc_signal< sc_logic > Resize_opr_linear_U0_start_out;
    sc_signal< sc_logic > Resize_opr_linear_U0_start_write;
    sc_signal< sc_logic > Resize_opr_linear_U0_p_src_data_stream_0_V_read;
    sc_signal< sc_logic > Resize_opr_linear_U0_p_src_data_stream_1_V_read;
    sc_signal< sc_logic > Resize_opr_linear_U0_p_src_data_stream_2_V_read;
    sc_signal< sc_lv<8> > Resize_opr_linear_U0_p_dst_data_stream_0_V_din;
    sc_signal< sc_logic > Resize_opr_linear_U0_p_dst_data_stream_0_V_write;
    sc_signal< sc_lv<8> > Resize_opr_linear_U0_p_dst_data_stream_1_V_din;
    sc_signal< sc_logic > Resize_opr_linear_U0_p_dst_data_stream_1_V_write;
    sc_signal< sc_lv<8> > Resize_opr_linear_U0_p_dst_data_stream_2_V_din;
    sc_signal< sc_logic > Resize_opr_linear_U0_p_dst_data_stream_2_V_write;
    sc_signal< sc_logic > mat_to_stream_U0_ap_start;
    sc_signal< sc_logic > mat_to_stream_U0_ap_done;
    sc_signal< sc_logic > mat_to_stream_U0_ap_continue;
    sc_signal< sc_logic > mat_to_stream_U0_ap_idle;
    sc_signal< sc_logic > mat_to_stream_U0_ap_ready;
    sc_signal< sc_logic > mat_to_stream_U0_resize_img_data_stream_0_V_read;
    sc_signal< sc_logic > mat_to_stream_U0_resize_img_data_stream_1_V_read;
    sc_signal< sc_logic > mat_to_stream_U0_resize_img_data_stream_2_V_read;
    sc_signal< sc_lv<24> > mat_to_stream_U0_out_V_V_din;
    sc_signal< sc_logic > mat_to_stream_U0_out_V_V_write;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > raw_img_data_stream_s_full_n;
    sc_signal< sc_lv<8> > raw_img_data_stream_s_dout;
    sc_signal< sc_logic > raw_img_data_stream_s_empty_n;
    sc_signal< sc_logic > raw_img_data_stream_1_full_n;
    sc_signal< sc_lv<8> > raw_img_data_stream_1_dout;
    sc_signal< sc_logic > raw_img_data_stream_1_empty_n;
    sc_signal< sc_logic > raw_img_data_stream_2_full_n;
    sc_signal< sc_lv<8> > raw_img_data_stream_2_dout;
    sc_signal< sc_logic > raw_img_data_stream_2_empty_n;
    sc_signal< sc_logic > resize_img_data_stre_full_n;
    sc_signal< sc_lv<8> > resize_img_data_stre_dout;
    sc_signal< sc_logic > resize_img_data_stre_empty_n;
    sc_signal< sc_logic > resize_img_data_stre_1_full_n;
    sc_signal< sc_lv<8> > resize_img_data_stre_1_dout;
    sc_signal< sc_logic > resize_img_data_stre_1_empty_n;
    sc_signal< sc_logic > resize_img_data_stre_2_full_n;
    sc_signal< sc_lv<8> > resize_img_data_stre_2_dout;
    sc_signal< sc_logic > resize_img_data_stre_2_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_lv<1> > start_for_Resize_opr_linear_U0_din;
    sc_signal< sc_logic > start_for_Resize_opr_linear_U0_full_n;
    sc_signal< sc_lv<1> > start_for_Resize_opr_linear_U0_dout;
    sc_signal< sc_logic > start_for_Resize_opr_linear_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_mat_to_stream_U0_din;
    sc_signal< sc_logic > start_for_mat_to_stream_U0_full_n;
    sc_signal< sc_lv<1> > start_for_mat_to_stream_U0_dout;
    sc_signal< sc_logic > start_for_mat_to_stream_U0_empty_n;
    sc_signal< sc_logic > mat_to_stream_U0_start_full_n;
    sc_signal< sc_logic > mat_to_stream_U0_start_write;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<24> ap_const_lv24_0;
    static const sc_logic ap_const_logic_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_Resize_opr_linear_U0_ap_continue();
    void thread_Resize_opr_linear_U0_ap_start();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_ready();
    void thread_in_V_V_read();
    void thread_mat_to_stream_U0_ap_continue();
    void thread_mat_to_stream_U0_ap_start();
    void thread_mat_to_stream_U0_start_full_n();
    void thread_mat_to_stream_U0_start_write();
    void thread_out_V_V_din();
    void thread_out_V_V_write();
    void thread_start_for_Resize_opr_linear_U0_din();
    void thread_start_for_mat_to_stream_U0_din();
    void thread_stream_to_mat_U0_ap_continue();
    void thread_stream_to_mat_U0_ap_start();
};

}

using namespace ap_rtl;

#endif
