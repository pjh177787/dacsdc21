// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __convDSPOpt_4_convcqw_H__
#define __convDSPOpt_4_convcqw_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct convDSPOpt_4_convcqw_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 96;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(convDSPOpt_4_convcqw_ram) {
        ram[0] = "0b11101101111100001101110101000000";
        ram[1] = "0b00010001111000011111110100011110";
        ram[2] = "0b10100000111100100000111011010001";
        ram[3] = "0b00011100111000111111100100010001";
        ram[4] = "0b10010010110101000010110111101110";
        ram[5] = "0b00101100001011101101110000100110";
        ram[6] = "0b10100000000000010010111011110111";
        ram[7] = "0b00100001101111010000111011111101";
        ram[8] = "0b00101111000110101011010000010010";
        ram[9] = "0b10010111000110110100001011011111";
        ram[10] = "0b01101101111111001101011101110100";
        ram[11] = "0b11001111001000000010010111101101";
        ram[12] = "0b01010011000000100010011011110011";
        ram[13] = "0b00111101000100000100001000010000";
        ram[14] = "0b00110001111111010010000111111111";
        ram[15] = "0b00111101001110100000010001010010";
        ram[16] = "0b00010001110000100001101111101111";
        ram[17] = "0b01011011110111110010001100001110";
        ram[18] = "0b10011011000000000010110000101111";
        ram[19] = "0b11101111111011111110110001111101";
        ram[20] = "0b11110110111100010011000111110010";
        ram[21] = "0b11100001000111111101001100010111";
        ram[22] = "0b01110111110101011110111100010101";
        ram[23] = "0b11100111001011100011011000111011";
        ram[24] = "0b11110001111001010000110011100011";
        ram[25] = "0b00101101111011000010110000101110";
        ram[26] = "0b11001101000100100000111011110000";
        ram[27] = "0b00011010111111111111111000101101";
        ram[28] = "0b11001110111001011111111010011101";
        ram[29] = "0b00110011010111101111111011100111";
        ram[30] = "0b01010101111101011111000011111111";
        ram[31] = "0b11010100111011010011000110101100";
        ram[32] = "0b01110000011110101001000010010000";
        ram[33] = "0b10010100001110110111011100100000";
        ram[34] = "0b00010001100100101001010111110001";
        ram[35] = "0b11000001101101000111010010010011";
        ram[36] = "0b00000001001000010011001011101111";
        ram[37] = "0b00001100000100110011000100000011";
        ram[38] = "0b00010001010000100011001011101111";
        ram[39] = "0b11101110111100101111110111101111";
        ram[40] = "0b00010100001011010001001111111111";
        ram[41] = "0b00110001001100001101010111100001";
        ram[42] = "0b00011111000011111110001100010001";
        ram[43] = "0b00100001001100100000000011111010";
        ram[44] = "0b00100001010111000011010000011111";
        ram[45] = "0b00100011001100111101000110100101";
        ram[46] = "0b00100000000011111110000111111110";
        ram[47] = "0b11110001010000000000001100011010";
        ram[48] = "0b11010000111111110000110100001100";
        ram[49] = "0b11000110111111011010110011101111";
        ram[50] = "0b00010011110111100001000101100010";
        ram[51] = "0b11001110111100001011010111111110";
        ram[52] = "0b11100000101111100010000000001010";
        ram[53] = "0b10100111000111001001000011101010";
        ram[54] = "0b01000001000100001101001001110100";
        ram[55] = "0b11011110111111111011011111010011";
        ram[56] = "0b11111111100110111110111000011010";
        ram[57] = "0b10010101000000111001010011111101";
        ram[58] = "0b00100000011100010001010100110100";
        ram[59] = "0b00011101111111111101001111000101";
        ram[60] = "0b00001011011111111100111011101110";
        ram[61] = "0b00000001000111010001001101111100";
        ram[62] = "0b00011111100111101110111100001011";
        ram[63] = "0b11011101000000000001001011111001";
        ram[64] = "0b11110100011100010000000111001111";
        ram[65] = "0b00011110000011011111111001111101";
        ram[66] = "0b11101010100111111110000111100000";
        ram[67] = "0b10110110111100011100111110110000";
        ram[68] = "0b11110100110011011101111111001110";
        ram[69] = "0b00001111111001000010111111011110";
        ram[70] = "0b00011111010111111101011000000010";
        ram[71] = "0b11000010001011111100011111100001";
        ram[72] = "0b00101110000001000101010111000101";
        ram[73] = "0b11011101000001001001110000010111";
        ram[74] = "0b00111101011111110011110101100001";
        ram[75] = "0b11101100011011101100000111000010";
        ram[76] = "0b01111111000011110000010100100110";
        ram[77] = "0b00000001111000111110111100000111";
        ram[78] = "0b00011101010000001101001001011011";
        ram[79] = "0b11101100011000100000001111011110";
        ram[80] = "0b00111111000000011010010100100000";
        ram[81] = "0b00100001111111110001111000101110";
        ram[82] = "0b00010000000011001111001011111111";
        ram[83] = "0b11001111000001000010000011110010";
        ram[84] = "0b11001101110011100011000111110000";
        ram[85] = "0b11101110000100010011110111010110";
        ram[86] = "0b00101101101110111100111101011101";
        ram[87] = "0b11111110111111110001001111100001";
        ram[88] = "0b11000100010011111101001100100000";
        ram[89] = "0b00000000111100000111000101000000";
        ram[90] = "0b11110100100111101010111111100001";
        ram[91] = "0b10011100010001011111001111111110";
        ram[92] = "0b00000001100100110000000111110001";
        ram[93] = "0b10111111001011111100111011110001";
        ram[94] = "0b00001111101101001111110111011110";
        ram[95] = "0b10010000000100001101001100011101";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(convDSPOpt_4_convcqw) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 96;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


convDSPOpt_4_convcqw_ram* meminst;


SC_CTOR(convDSPOpt_4_convcqw) {
meminst = new convDSPOpt_4_convcqw_ram("convDSPOpt_4_convcqw_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~convDSPOpt_4_convcqw() {
    delete meminst;
}


};//endmodule
#endif
