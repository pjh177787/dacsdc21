// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "conv1x1convert718.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic conv1x1convert718::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic conv1x1convert718::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> conv1x1convert718::ap_ST_fsm_state1 = "1";
const sc_lv<3> conv1x1convert718::ap_ST_fsm_state2 = "10";
const sc_lv<3> conv1x1convert718::ap_ST_fsm_state3 = "100";
const sc_lv<32> conv1x1convert718::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> conv1x1convert718::ap_const_lv32_1 = "1";
const sc_lv<1> conv1x1convert718::ap_const_lv1_0 = "0";
const sc_lv<32> conv1x1convert718::ap_const_lv32_2 = "10";
const bool conv1x1convert718::ap_const_boolean_0 = false;
const sc_lv<1> conv1x1convert718::ap_const_lv1_1 = "1";
const sc_lv<32> conv1x1convert718::ap_const_lv32_3 = "11";
const bool conv1x1convert718::ap_const_boolean_1 = true;

conv1x1convert718::conv1x1convert718(sc_module_name name) : sc_module(name), mVcdFile(0) {
    row_buffer_0_V_U = new conv1x1convert718dOK("row_buffer_0_V_U");
    row_buffer_0_V_U->clk(ap_clk);
    row_buffer_0_V_U->reset(ap_rst);
    row_buffer_0_V_U->address0(grp_streamOutOneRowTwoPi_fu_132_row_buffer_0_V_address0);
    row_buffer_0_V_U->ce0(row_buffer_0_V_ce0);
    row_buffer_0_V_U->q0(row_buffer_0_V_q0);
    row_buffer_0_V_U->address1(grp_streamInOneRowTwoPix_fu_121_row_buffer_0_V_address1);
    row_buffer_0_V_U->ce1(row_buffer_0_V_ce1);
    row_buffer_0_V_U->we1(row_buffer_0_V_we1);
    row_buffer_0_V_U->d1(grp_streamInOneRowTwoPix_fu_121_row_buffer_0_V_d1);
    row_buffer_1_V_U = new conv1x1convert718dOK("row_buffer_1_V_U");
    row_buffer_1_V_U->clk(ap_clk);
    row_buffer_1_V_U->reset(ap_rst);
    row_buffer_1_V_U->address0(grp_streamOutOneRowTwoPi_fu_132_row_buffer_1_V_address0);
    row_buffer_1_V_U->ce0(row_buffer_1_V_ce0);
    row_buffer_1_V_U->q0(row_buffer_1_V_q0);
    row_buffer_1_V_U->address1(grp_streamInOneRowTwoPix_fu_121_row_buffer_1_V_address1);
    row_buffer_1_V_U->ce1(row_buffer_1_V_ce1);
    row_buffer_1_V_U->we1(row_buffer_1_V_we1);
    row_buffer_1_V_U->d1(grp_streamInOneRowTwoPix_fu_121_row_buffer_1_V_d1);
    grp_streamInOneRowTwoPix_fu_121 = new streamInOneRowTwoPix("grp_streamInOneRowTwoPix_fu_121");
    grp_streamInOneRowTwoPix_fu_121->ap_clk(ap_clk);
    grp_streamInOneRowTwoPix_fu_121->ap_rst(ap_rst);
    grp_streamInOneRowTwoPix_fu_121->ap_start(grp_streamInOneRowTwoPix_fu_121_ap_start);
    grp_streamInOneRowTwoPix_fu_121->ap_done(grp_streamInOneRowTwoPix_fu_121_ap_done);
    grp_streamInOneRowTwoPix_fu_121->ap_idle(grp_streamInOneRowTwoPix_fu_121_ap_idle);
    grp_streamInOneRowTwoPix_fu_121->ap_ready(grp_streamInOneRowTwoPix_fu_121_ap_ready);
    grp_streamInOneRowTwoPix_fu_121->in_V_V_dout(in_V_V_dout);
    grp_streamInOneRowTwoPix_fu_121->in_V_V_empty_n(in_V_V_empty_n);
    grp_streamInOneRowTwoPix_fu_121->in_V_V_read(grp_streamInOneRowTwoPix_fu_121_in_V_V_read);
    grp_streamInOneRowTwoPix_fu_121->row_buffer_0_V_address1(grp_streamInOneRowTwoPix_fu_121_row_buffer_0_V_address1);
    grp_streamInOneRowTwoPix_fu_121->row_buffer_0_V_ce1(grp_streamInOneRowTwoPix_fu_121_row_buffer_0_V_ce1);
    grp_streamInOneRowTwoPix_fu_121->row_buffer_0_V_we1(grp_streamInOneRowTwoPix_fu_121_row_buffer_0_V_we1);
    grp_streamInOneRowTwoPix_fu_121->row_buffer_0_V_d1(grp_streamInOneRowTwoPix_fu_121_row_buffer_0_V_d1);
    grp_streamInOneRowTwoPix_fu_121->row_buffer_1_V_address1(grp_streamInOneRowTwoPix_fu_121_row_buffer_1_V_address1);
    grp_streamInOneRowTwoPix_fu_121->row_buffer_1_V_ce1(grp_streamInOneRowTwoPix_fu_121_row_buffer_1_V_ce1);
    grp_streamInOneRowTwoPix_fu_121->row_buffer_1_V_we1(grp_streamInOneRowTwoPix_fu_121_row_buffer_1_V_we1);
    grp_streamInOneRowTwoPix_fu_121->row_buffer_1_V_d1(grp_streamInOneRowTwoPix_fu_121_row_buffer_1_V_d1);
    grp_streamInOneRowTwoPix_fu_121->skip_flag(grp_streamInOneRowTwoPix_fu_121_skip_flag);
    grp_streamInOneRowTwoPix_fu_121->rowBufferIdx_V(t_V_21_reg_86);
    grp_streamOutOneRowTwoPi_fu_132 = new streamOutOneRowTwoPi("grp_streamOutOneRowTwoPi_fu_132");
    grp_streamOutOneRowTwoPi_fu_132->ap_clk(ap_clk);
    grp_streamOutOneRowTwoPi_fu_132->ap_rst(ap_rst);
    grp_streamOutOneRowTwoPi_fu_132->ap_start(grp_streamOutOneRowTwoPi_fu_132_ap_start);
    grp_streamOutOneRowTwoPi_fu_132->ap_done(grp_streamOutOneRowTwoPi_fu_132_ap_done);
    grp_streamOutOneRowTwoPi_fu_132->ap_idle(grp_streamOutOneRowTwoPi_fu_132_ap_idle);
    grp_streamOutOneRowTwoPi_fu_132->ap_ready(grp_streamOutOneRowTwoPi_fu_132_ap_ready);
    grp_streamOutOneRowTwoPi_fu_132->out_V_V_din(grp_streamOutOneRowTwoPi_fu_132_out_V_V_din);
    grp_streamOutOneRowTwoPi_fu_132->out_V_V_full_n(conv1in_V_V_full_n);
    grp_streamOutOneRowTwoPi_fu_132->out_V_V_write(grp_streamOutOneRowTwoPi_fu_132_out_V_V_write);
    grp_streamOutOneRowTwoPi_fu_132->row_buffer_0_V_address0(grp_streamOutOneRowTwoPi_fu_132_row_buffer_0_V_address0);
    grp_streamOutOneRowTwoPi_fu_132->row_buffer_0_V_ce0(grp_streamOutOneRowTwoPi_fu_132_row_buffer_0_V_ce0);
    grp_streamOutOneRowTwoPi_fu_132->row_buffer_0_V_q0(row_buffer_0_V_q0);
    grp_streamOutOneRowTwoPi_fu_132->row_buffer_1_V_address0(grp_streamOutOneRowTwoPi_fu_132_row_buffer_1_V_address0);
    grp_streamOutOneRowTwoPi_fu_132->row_buffer_1_V_ce0(grp_streamOutOneRowTwoPi_fu_132_row_buffer_1_V_ce0);
    grp_streamOutOneRowTwoPi_fu_132->row_buffer_1_V_q0(row_buffer_1_V_q0);
    grp_streamOutOneRowTwoPi_fu_132->skip_flag(grp_streamOutOneRowTwoPi_fu_132_skip_flag);
    grp_streamOutOneRowTwoPi_fu_132->rowBufferIdx_V(t_V_reg_98);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln97_fu_155_p2);
    sensitive << ( shl_ln97_fu_143_p2 );
    sensitive << ( shl_ln97_1_fu_149_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( reps_empty_n );
    sensitive << ( reps_out_full_n );
    sensitive << ( reps_c_i_full_n );

    SC_METHOD(thread_ap_block_state3_on_subcall_done);
    sensitive << ( grp_streamInOneRowTwoPix_fu_121_ap_done );
    sensitive << ( grp_streamOutOneRowTwoPi_fu_132_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln97_fu_167_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_conv1in_V_V_din);
    sensitive << ( grp_streamOutOneRowTwoPi_fu_132_out_V_V_din );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_conv1in_V_V_write);
    sensitive << ( grp_streamOutOneRowTwoPi_fu_132_out_V_V_write );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_streamInOneRowTwoPix_fu_121_ap_start);
    sensitive << ( grp_streamInOneRowTwoPix_fu_121_ap_start_reg );

    SC_METHOD(thread_grp_streamInOneRowTwoPix_fu_121_skip_flag);
    sensitive << ( xor_ln100_reg_227 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_streamOutOneRowTwoPi_fu_132_ap_start);
    sensitive << ( grp_streamOutOneRowTwoPi_fu_132_ap_start_reg );

    SC_METHOD(thread_grp_streamOutOneRowTwoPi_fu_132_skip_flag);
    sensitive << ( icmp_ln102_reg_232 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_icmp_ln100_fu_178_p2);
    sensitive << ( add_ln97_reg_209 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln97_fu_167_p2 );
    sensitive << ( rep_0_i_i_i_reg_110 );

    SC_METHOD(thread_icmp_ln102_fu_190_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln97_fu_167_p2 );
    sensitive << ( rep_0_i_i_i_reg_110 );

    SC_METHOD(thread_icmp_ln97_fu_167_p2);
    sensitive << ( or_ln97_reg_214 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( rep_0_i_i_i_reg_110 );

    SC_METHOD(thread_in_V_V_read);
    sensitive << ( grp_streamInOneRowTwoPix_fu_121_in_V_V_read );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln97_fu_167_p2 );

    SC_METHOD(thread_loadBufferIdx_V_fu_197_p2);
    sensitive << ( t_V_reg_98 );

    SC_METHOD(thread_or_ln97_fu_161_p2);
    sensitive << ( add_ln97_fu_155_p2 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_rep_fu_172_p2);
    sensitive << ( rep_0_i_i_i_reg_110 );

    SC_METHOD(thread_reps_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( reps_empty_n );

    SC_METHOD(thread_reps_c_i_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( reps_c_i_full_n );

    SC_METHOD(thread_reps_c_i_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( reps_dout );
    sensitive << ( reps_empty_n );
    sensitive << ( reps_out_full_n );
    sensitive << ( reps_c_i_full_n );

    SC_METHOD(thread_reps_c_i_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( reps_empty_n );
    sensitive << ( reps_out_full_n );
    sensitive << ( reps_c_i_full_n );

    SC_METHOD(thread_reps_out_blk_n);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( reps_out_full_n );

    SC_METHOD(thread_reps_out_din);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( reps_dout );
    sensitive << ( reps_empty_n );
    sensitive << ( reps_out_full_n );
    sensitive << ( reps_c_i_full_n );

    SC_METHOD(thread_reps_out_write);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( reps_empty_n );
    sensitive << ( reps_out_full_n );
    sensitive << ( reps_c_i_full_n );

    SC_METHOD(thread_reps_read);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( reps_empty_n );
    sensitive << ( reps_out_full_n );
    sensitive << ( reps_c_i_full_n );

    SC_METHOD(thread_row_buffer_0_V_ce0);
    sensitive << ( grp_streamOutOneRowTwoPi_fu_132_row_buffer_0_V_ce0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_row_buffer_0_V_ce1);
    sensitive << ( grp_streamInOneRowTwoPix_fu_121_row_buffer_0_V_ce1 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_row_buffer_0_V_we1);
    sensitive << ( grp_streamInOneRowTwoPix_fu_121_row_buffer_0_V_we1 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_row_buffer_1_V_ce0);
    sensitive << ( grp_streamOutOneRowTwoPi_fu_132_row_buffer_1_V_ce0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_row_buffer_1_V_ce1);
    sensitive << ( grp_streamInOneRowTwoPix_fu_121_row_buffer_1_V_ce1 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_row_buffer_1_V_we1);
    sensitive << ( grp_streamInOneRowTwoPix_fu_121_row_buffer_1_V_we1 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_shl_ln97_1_fu_149_p2);
    sensitive << ( reps_dout );

    SC_METHOD(thread_shl_ln97_fu_143_p2);
    sensitive << ( reps_dout );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_storeBufferIdx_V_fu_203_p2);
    sensitive << ( t_V_21_reg_86 );

    SC_METHOD(thread_xor_ln100_fu_183_p2);
    sensitive << ( icmp_ln100_fu_178_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( reps_empty_n );
    sensitive << ( reps_out_full_n );
    sensitive << ( reps_c_i_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln97_fu_167_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_block_state3_on_subcall_done );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    grp_streamInOneRowTwoPix_fu_121_ap_start_reg = SC_LOGIC_0;
    grp_streamOutOneRowTwoPi_fu_132_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "conv1x1convert718_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, reps_dout, "(port)reps_dout");
    sc_trace(mVcdFile, reps_empty_n, "(port)reps_empty_n");
    sc_trace(mVcdFile, reps_read, "(port)reps_read");
    sc_trace(mVcdFile, reps_out_din, "(port)reps_out_din");
    sc_trace(mVcdFile, reps_out_full_n, "(port)reps_out_full_n");
    sc_trace(mVcdFile, reps_out_write, "(port)reps_out_write");
    sc_trace(mVcdFile, in_V_V_dout, "(port)in_V_V_dout");
    sc_trace(mVcdFile, in_V_V_empty_n, "(port)in_V_V_empty_n");
    sc_trace(mVcdFile, in_V_V_read, "(port)in_V_V_read");
    sc_trace(mVcdFile, conv1in_V_V_din, "(port)conv1in_V_V_din");
    sc_trace(mVcdFile, conv1in_V_V_full_n, "(port)conv1in_V_V_full_n");
    sc_trace(mVcdFile, conv1in_V_V_write, "(port)conv1in_V_V_write");
    sc_trace(mVcdFile, reps_c_i_din, "(port)reps_c_i_din");
    sc_trace(mVcdFile, reps_c_i_full_n, "(port)reps_c_i_full_n");
    sc_trace(mVcdFile, reps_c_i_write, "(port)reps_c_i_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, reps_blk_n, "reps_blk_n");
    sc_trace(mVcdFile, reps_out_blk_n, "reps_out_blk_n");
    sc_trace(mVcdFile, reps_c_i_blk_n, "reps_c_i_blk_n");
    sc_trace(mVcdFile, add_ln97_fu_155_p2, "add_ln97_fu_155_p2");
    sc_trace(mVcdFile, add_ln97_reg_209, "add_ln97_reg_209");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, or_ln97_fu_161_p2, "or_ln97_fu_161_p2");
    sc_trace(mVcdFile, or_ln97_reg_214, "or_ln97_reg_214");
    sc_trace(mVcdFile, rep_fu_172_p2, "rep_fu_172_p2");
    sc_trace(mVcdFile, rep_reg_222, "rep_reg_222");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, xor_ln100_fu_183_p2, "xor_ln100_fu_183_p2");
    sc_trace(mVcdFile, xor_ln100_reg_227, "xor_ln100_reg_227");
    sc_trace(mVcdFile, icmp_ln97_fu_167_p2, "icmp_ln97_fu_167_p2");
    sc_trace(mVcdFile, icmp_ln102_fu_190_p2, "icmp_ln102_fu_190_p2");
    sc_trace(mVcdFile, icmp_ln102_reg_232, "icmp_ln102_reg_232");
    sc_trace(mVcdFile, loadBufferIdx_V_fu_197_p2, "loadBufferIdx_V_fu_197_p2");
    sc_trace(mVcdFile, loadBufferIdx_V_reg_237, "loadBufferIdx_V_reg_237");
    sc_trace(mVcdFile, storeBufferIdx_V_fu_203_p2, "storeBufferIdx_V_fu_203_p2");
    sc_trace(mVcdFile, storeBufferIdx_V_reg_242, "storeBufferIdx_V_reg_242");
    sc_trace(mVcdFile, row_buffer_0_V_ce0, "row_buffer_0_V_ce0");
    sc_trace(mVcdFile, row_buffer_0_V_q0, "row_buffer_0_V_q0");
    sc_trace(mVcdFile, row_buffer_0_V_ce1, "row_buffer_0_V_ce1");
    sc_trace(mVcdFile, row_buffer_0_V_we1, "row_buffer_0_V_we1");
    sc_trace(mVcdFile, row_buffer_1_V_ce0, "row_buffer_1_V_ce0");
    sc_trace(mVcdFile, row_buffer_1_V_q0, "row_buffer_1_V_q0");
    sc_trace(mVcdFile, row_buffer_1_V_ce1, "row_buffer_1_V_ce1");
    sc_trace(mVcdFile, row_buffer_1_V_we1, "row_buffer_1_V_we1");
    sc_trace(mVcdFile, grp_streamInOneRowTwoPix_fu_121_ap_start, "grp_streamInOneRowTwoPix_fu_121_ap_start");
    sc_trace(mVcdFile, grp_streamInOneRowTwoPix_fu_121_ap_done, "grp_streamInOneRowTwoPix_fu_121_ap_done");
    sc_trace(mVcdFile, grp_streamInOneRowTwoPix_fu_121_ap_idle, "grp_streamInOneRowTwoPix_fu_121_ap_idle");
    sc_trace(mVcdFile, grp_streamInOneRowTwoPix_fu_121_ap_ready, "grp_streamInOneRowTwoPix_fu_121_ap_ready");
    sc_trace(mVcdFile, grp_streamInOneRowTwoPix_fu_121_in_V_V_read, "grp_streamInOneRowTwoPix_fu_121_in_V_V_read");
    sc_trace(mVcdFile, grp_streamInOneRowTwoPix_fu_121_row_buffer_0_V_address1, "grp_streamInOneRowTwoPix_fu_121_row_buffer_0_V_address1");
    sc_trace(mVcdFile, grp_streamInOneRowTwoPix_fu_121_row_buffer_0_V_ce1, "grp_streamInOneRowTwoPix_fu_121_row_buffer_0_V_ce1");
    sc_trace(mVcdFile, grp_streamInOneRowTwoPix_fu_121_row_buffer_0_V_we1, "grp_streamInOneRowTwoPix_fu_121_row_buffer_0_V_we1");
    sc_trace(mVcdFile, grp_streamInOneRowTwoPix_fu_121_row_buffer_0_V_d1, "grp_streamInOneRowTwoPix_fu_121_row_buffer_0_V_d1");
    sc_trace(mVcdFile, grp_streamInOneRowTwoPix_fu_121_row_buffer_1_V_address1, "grp_streamInOneRowTwoPix_fu_121_row_buffer_1_V_address1");
    sc_trace(mVcdFile, grp_streamInOneRowTwoPix_fu_121_row_buffer_1_V_ce1, "grp_streamInOneRowTwoPix_fu_121_row_buffer_1_V_ce1");
    sc_trace(mVcdFile, grp_streamInOneRowTwoPix_fu_121_row_buffer_1_V_we1, "grp_streamInOneRowTwoPix_fu_121_row_buffer_1_V_we1");
    sc_trace(mVcdFile, grp_streamInOneRowTwoPix_fu_121_row_buffer_1_V_d1, "grp_streamInOneRowTwoPix_fu_121_row_buffer_1_V_d1");
    sc_trace(mVcdFile, grp_streamInOneRowTwoPix_fu_121_skip_flag, "grp_streamInOneRowTwoPix_fu_121_skip_flag");
    sc_trace(mVcdFile, grp_streamOutOneRowTwoPi_fu_132_ap_start, "grp_streamOutOneRowTwoPi_fu_132_ap_start");
    sc_trace(mVcdFile, grp_streamOutOneRowTwoPi_fu_132_ap_done, "grp_streamOutOneRowTwoPi_fu_132_ap_done");
    sc_trace(mVcdFile, grp_streamOutOneRowTwoPi_fu_132_ap_idle, "grp_streamOutOneRowTwoPi_fu_132_ap_idle");
    sc_trace(mVcdFile, grp_streamOutOneRowTwoPi_fu_132_ap_ready, "grp_streamOutOneRowTwoPi_fu_132_ap_ready");
    sc_trace(mVcdFile, grp_streamOutOneRowTwoPi_fu_132_out_V_V_din, "grp_streamOutOneRowTwoPi_fu_132_out_V_V_din");
    sc_trace(mVcdFile, grp_streamOutOneRowTwoPi_fu_132_out_V_V_write, "grp_streamOutOneRowTwoPi_fu_132_out_V_V_write");
    sc_trace(mVcdFile, grp_streamOutOneRowTwoPi_fu_132_row_buffer_0_V_address0, "grp_streamOutOneRowTwoPi_fu_132_row_buffer_0_V_address0");
    sc_trace(mVcdFile, grp_streamOutOneRowTwoPi_fu_132_row_buffer_0_V_ce0, "grp_streamOutOneRowTwoPi_fu_132_row_buffer_0_V_ce0");
    sc_trace(mVcdFile, grp_streamOutOneRowTwoPi_fu_132_row_buffer_1_V_address0, "grp_streamOutOneRowTwoPi_fu_132_row_buffer_1_V_address0");
    sc_trace(mVcdFile, grp_streamOutOneRowTwoPi_fu_132_row_buffer_1_V_ce0, "grp_streamOutOneRowTwoPi_fu_132_row_buffer_1_V_ce0");
    sc_trace(mVcdFile, grp_streamOutOneRowTwoPi_fu_132_skip_flag, "grp_streamOutOneRowTwoPi_fu_132_skip_flag");
    sc_trace(mVcdFile, t_V_21_reg_86, "t_V_21_reg_86");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_block_state3_on_subcall_done, "ap_block_state3_on_subcall_done");
    sc_trace(mVcdFile, t_V_reg_98, "t_V_reg_98");
    sc_trace(mVcdFile, rep_0_i_i_i_reg_110, "rep_0_i_i_i_reg_110");
    sc_trace(mVcdFile, grp_streamInOneRowTwoPix_fu_121_ap_start_reg, "grp_streamInOneRowTwoPix_fu_121_ap_start_reg");
    sc_trace(mVcdFile, grp_streamOutOneRowTwoPi_fu_132_ap_start_reg, "grp_streamOutOneRowTwoPi_fu_132_ap_start_reg");
    sc_trace(mVcdFile, shl_ln97_fu_143_p2, "shl_ln97_fu_143_p2");
    sc_trace(mVcdFile, shl_ln97_1_fu_149_p2, "shl_ln97_1_fu_149_p2");
    sc_trace(mVcdFile, icmp_ln100_fu_178_p2, "icmp_ln100_fu_178_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

conv1x1convert718::~conv1x1convert718() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete row_buffer_0_V_U;
    delete row_buffer_1_V_U;
    delete grp_streamInOneRowTwoPix_fu_121;
    delete grp_streamOutOneRowTwoPi_fu_132;
}

void conv1x1convert718::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(icmp_ln97_fu_167_p2.read(), ap_const_lv1_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_streamInOneRowTwoPix_fu_121_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
             esl_seteq<1,1,1>(icmp_ln97_fu_167_p2.read(), ap_const_lv1_0))) {
            grp_streamInOneRowTwoPix_fu_121_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_streamInOneRowTwoPix_fu_121_ap_ready.read())) {
            grp_streamInOneRowTwoPix_fu_121_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_streamOutOneRowTwoPi_fu_132_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
             esl_seteq<1,1,1>(icmp_ln97_fu_167_p2.read(), ap_const_lv1_0))) {
            grp_streamOutOneRowTwoPi_fu_132_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_streamOutOneRowTwoPi_fu_132_ap_ready.read())) {
            grp_streamOutOneRowTwoPi_fu_132_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
        rep_0_i_i_i_reg_110 = rep_reg_222.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, reps_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, reps_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, reps_c_i_full_n.read())))) {
        rep_0_i_i_i_reg_110 = ap_const_lv32_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
        t_V_21_reg_86 = storeBufferIdx_V_reg_242.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, reps_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, reps_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, reps_c_i_full_n.read())))) {
        t_V_21_reg_86 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
        t_V_reg_98 = loadBufferIdx_V_reg_237.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, reps_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, reps_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, reps_c_i_full_n.read())))) {
        t_V_reg_98 = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, reps_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, reps_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, reps_c_i_full_n.read())))) {
        add_ln97_reg_209 = add_ln97_fu_155_p2.read();
        or_ln97_reg_214 = or_ln97_fu_161_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln97_fu_167_p2.read(), ap_const_lv1_0))) {
        icmp_ln102_reg_232 = icmp_ln102_fu_190_p2.read();
        loadBufferIdx_V_reg_237 = loadBufferIdx_V_fu_197_p2.read();
        storeBufferIdx_V_reg_242 = storeBufferIdx_V_fu_203_p2.read();
        xor_ln100_reg_227 = xor_ln100_fu_183_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        rep_reg_222 = rep_fu_172_p2.read();
    }
}

void conv1x1convert718::thread_add_ln97_fu_155_p2() {
    add_ln97_fu_155_p2 = (!shl_ln97_fu_143_p2.read().is_01() || !shl_ln97_1_fu_149_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(shl_ln97_fu_143_p2.read()) + sc_biguint<32>(shl_ln97_1_fu_149_p2.read()));
}

void conv1x1convert718::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void conv1x1convert718::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void conv1x1convert718::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void conv1x1convert718::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, reps_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, reps_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, reps_c_i_full_n.read()));
}

void conv1x1convert718::thread_ap_block_state3_on_subcall_done() {
    ap_block_state3_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_streamInOneRowTwoPix_fu_121_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_streamOutOneRowTwoPi_fu_132_ap_done.read()));
}

void conv1x1convert718::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln97_fu_167_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void conv1x1convert718::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void conv1x1convert718::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void conv1x1convert718::thread_conv1in_V_V_din() {
    conv1in_V_V_din = grp_streamOutOneRowTwoPi_fu_132_out_V_V_din.read();
}

void conv1x1convert718::thread_conv1in_V_V_write() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        conv1in_V_V_write = grp_streamOutOneRowTwoPi_fu_132_out_V_V_write.read();
    } else {
        conv1in_V_V_write = ap_const_logic_0;
    }
}

void conv1x1convert718::thread_grp_streamInOneRowTwoPix_fu_121_ap_start() {
    grp_streamInOneRowTwoPix_fu_121_ap_start = grp_streamInOneRowTwoPix_fu_121_ap_start_reg.read();
}

void conv1x1convert718::thread_grp_streamInOneRowTwoPix_fu_121_skip_flag() {
    grp_streamInOneRowTwoPix_fu_121_skip_flag =  (sc_logic) (xor_ln100_reg_227.read()[0]);
}

void conv1x1convert718::thread_grp_streamOutOneRowTwoPi_fu_132_ap_start() {
    grp_streamOutOneRowTwoPi_fu_132_ap_start = grp_streamOutOneRowTwoPi_fu_132_ap_start_reg.read();
}

void conv1x1convert718::thread_grp_streamOutOneRowTwoPi_fu_132_skip_flag() {
    grp_streamOutOneRowTwoPi_fu_132_skip_flag =  (sc_logic) (icmp_ln102_reg_232.read()[0]);
}

void conv1x1convert718::thread_icmp_ln100_fu_178_p2() {
    icmp_ln100_fu_178_p2 = (!rep_0_i_i_i_reg_110.read().is_01() || !add_ln97_reg_209.read().is_01())? sc_lv<1>(): (sc_biguint<32>(rep_0_i_i_i_reg_110.read()) < sc_biguint<32>(add_ln97_reg_209.read()));
}

void conv1x1convert718::thread_icmp_ln102_fu_190_p2() {
    icmp_ln102_fu_190_p2 = (!rep_0_i_i_i_reg_110.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(rep_0_i_i_i_reg_110.read() == ap_const_lv32_0);
}

void conv1x1convert718::thread_icmp_ln97_fu_167_p2() {
    icmp_ln97_fu_167_p2 = (!rep_0_i_i_i_reg_110.read().is_01() || !or_ln97_reg_214.read().is_01())? sc_lv<1>(): sc_lv<1>(rep_0_i_i_i_reg_110.read() == or_ln97_reg_214.read());
}

void conv1x1convert718::thread_in_V_V_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        in_V_V_read = grp_streamInOneRowTwoPix_fu_121_in_V_V_read.read();
    } else {
        in_V_V_read = ap_const_logic_0;
    }
}

void conv1x1convert718::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln97_fu_167_p2.read(), ap_const_lv1_1))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void conv1x1convert718::thread_loadBufferIdx_V_fu_197_p2() {
    loadBufferIdx_V_fu_197_p2 = (t_V_reg_98.read() ^ ap_const_lv1_1);
}

void conv1x1convert718::thread_or_ln97_fu_161_p2() {
    or_ln97_fu_161_p2 = (add_ln97_fu_155_p2.read() | ap_const_lv32_1);
}

void conv1x1convert718::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void conv1x1convert718::thread_rep_fu_172_p2() {
    rep_fu_172_p2 = (!rep_0_i_i_i_reg_110.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(rep_0_i_i_i_reg_110.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void conv1x1convert718::thread_reps_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        reps_blk_n = reps_empty_n.read();
    } else {
        reps_blk_n = ap_const_logic_1;
    }
}

void conv1x1convert718::thread_reps_c_i_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        reps_c_i_blk_n = reps_c_i_full_n.read();
    } else {
        reps_c_i_blk_n = ap_const_logic_1;
    }
}

void conv1x1convert718::thread_reps_c_i_din() {
    reps_c_i_din = reps_dout.read();
}

void conv1x1convert718::thread_reps_c_i_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, reps_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, reps_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, reps_c_i_full_n.read())))) {
        reps_c_i_write = ap_const_logic_1;
    } else {
        reps_c_i_write = ap_const_logic_0;
    }
}

void conv1x1convert718::thread_reps_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        reps_out_blk_n = reps_out_full_n.read();
    } else {
        reps_out_blk_n = ap_const_logic_1;
    }
}

void conv1x1convert718::thread_reps_out_din() {
    reps_out_din = reps_dout.read();
}

void conv1x1convert718::thread_reps_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, reps_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, reps_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, reps_c_i_full_n.read())))) {
        reps_out_write = ap_const_logic_1;
    } else {
        reps_out_write = ap_const_logic_0;
    }
}

void conv1x1convert718::thread_reps_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, reps_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, reps_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, reps_c_i_full_n.read())))) {
        reps_read = ap_const_logic_1;
    } else {
        reps_read = ap_const_logic_0;
    }
}

void conv1x1convert718::thread_row_buffer_0_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        row_buffer_0_V_ce0 = grp_streamOutOneRowTwoPi_fu_132_row_buffer_0_V_ce0.read();
    } else {
        row_buffer_0_V_ce0 = ap_const_logic_0;
    }
}

void conv1x1convert718::thread_row_buffer_0_V_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        row_buffer_0_V_ce1 = grp_streamInOneRowTwoPix_fu_121_row_buffer_0_V_ce1.read();
    } else {
        row_buffer_0_V_ce1 = ap_const_logic_0;
    }
}

void conv1x1convert718::thread_row_buffer_0_V_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        row_buffer_0_V_we1 = grp_streamInOneRowTwoPix_fu_121_row_buffer_0_V_we1.read();
    } else {
        row_buffer_0_V_we1 = ap_const_logic_0;
    }
}

void conv1x1convert718::thread_row_buffer_1_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        row_buffer_1_V_ce0 = grp_streamOutOneRowTwoPi_fu_132_row_buffer_1_V_ce0.read();
    } else {
        row_buffer_1_V_ce0 = ap_const_logic_0;
    }
}

void conv1x1convert718::thread_row_buffer_1_V_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        row_buffer_1_V_ce1 = grp_streamInOneRowTwoPix_fu_121_row_buffer_1_V_ce1.read();
    } else {
        row_buffer_1_V_ce1 = ap_const_logic_0;
    }
}

void conv1x1convert718::thread_row_buffer_1_V_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        row_buffer_1_V_we1 = grp_streamInOneRowTwoPix_fu_121_row_buffer_1_V_we1.read();
    } else {
        row_buffer_1_V_we1 = ap_const_logic_0;
    }
}

void conv1x1convert718::thread_shl_ln97_1_fu_149_p2() {
    shl_ln97_1_fu_149_p2 = (!ap_const_lv32_1.is_01())? sc_lv<32>(): reps_dout.read() << (unsigned short)ap_const_lv32_1.to_uint();
}

void conv1x1convert718::thread_shl_ln97_fu_143_p2() {
    shl_ln97_fu_143_p2 = (!ap_const_lv32_3.is_01())? sc_lv<32>(): reps_dout.read() << (unsigned short)ap_const_lv32_3.to_uint();
}

void conv1x1convert718::thread_start_out() {
    start_out = real_start.read();
}

void conv1x1convert718::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void conv1x1convert718::thread_storeBufferIdx_V_fu_203_p2() {
    storeBufferIdx_V_fu_203_p2 = (t_V_21_reg_86.read() ^ ap_const_lv1_1);
}

void conv1x1convert718::thread_xor_ln100_fu_183_p2() {
    xor_ln100_fu_183_p2 = (icmp_ln100_fu_178_p2.read() ^ ap_const_lv1_1);
}

void conv1x1convert718::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, reps_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, reps_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, reps_c_i_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln97_fu_167_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_block_state3_on_subcall_done.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

