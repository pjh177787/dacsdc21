// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __convDSPOpt_4_convcbu_H__
#define __convDSPOpt_4_convcbu_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct convDSPOpt_4_convcbu_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 96;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(convDSPOpt_4_convcbu_ram) {
        ram[0] = "0b00001011101100000000010000111110";
        ram[1] = "0b11100101111000000000111001000000";
        ram[2] = "0b00101111111001000001001011100010";
        ram[3] = "0b11001110000101010000111100101100";
        ram[4] = "0b01010010101100001111000001011110";
        ram[5] = "0b00000011001011100001100101001001";
        ram[6] = "0b11101110111000000001010011011110";
        ram[7] = "0b10010100111001110011111111101001";
        ram[8] = "0b11110011111011101111101011111100";
        ram[9] = "0b00100100010000110000000100001100";
        ram[10] = "0b11000001000000100001111010010000";
        ram[11] = "0b11110010111000110001110100001100";
        ram[12] = "0b11111111000111010001110111101111";
        ram[13] = "0b00001100111011001110111111100000";
        ram[14] = "0b00010011111100011101010011111100";
        ram[15] = "0b00101110000100101100111011110000";
        ram[16] = "0b11111101110011011101110011111110";
        ram[17] = "0b10111111110111011100000000111101";
        ram[18] = "0b11100010110011011100111100011110";
        ram[19] = "0b00101110000010111110101011101111";
        ram[20] = "0b11100000111100011111000111000100";
        ram[21] = "0b11100000110111110000111011111100";
        ram[22] = "0b11100100111101001111000011110000";
        ram[23] = "0b11100001000011101100110111010011";
        ram[24] = "0b00001001000100101110010100000011";
        ram[25] = "0b11111001101011101110010011101111";
        ram[26] = "0b10100001110111100011001000010000";
        ram[27] = "0b00000001111100010001100100011111";
        ram[28] = "0b00011101001001001100001111010001";
        ram[29] = "0b00011001101111110001001000101011";
        ram[30] = "0b10010000110000000010000001000001";
        ram[31] = "0b11011110110100010001100100101100";
        ram[32] = "0b11000010000000100101000010111101";
        ram[33] = "0b10111010111101001110001111110001";
        ram[34] = "0b10011110010000000011111100000000";
        ram[35] = "0b00101100101000001111111000001111";
        ram[36] = "0b00101100000000110000001101000111";
        ram[37] = "0b11011111000000011110001100100010";
        ram[38] = "0b00010100000000011101000000001101";
        ram[39] = "0b10101110000100100010111111101110";
        ram[40] = "0b01010000101001001010110000010110";
        ram[41] = "0b00011110010001000100000010010010";
        ram[42] = "0b00101100001011011010011000000000";
        ram[43] = "0b11100010010011110000001011010111";
        ram[44] = "0b00010010100100111111000111100110";
        ram[45] = "0b11010000011000000110010010010010";
        ram[46] = "0b11011101111111010101001011110010";
        ram[47] = "0b00000110110100010100111100111110";
        ram[48] = "0b01010010000100010101001110011111";
        ram[49] = "0b11010110001011110001001111011110";
        ram[50] = "0b01100010111111110000001011110011";
        ram[51] = "0b00100010000111110010010111100000";
        ram[52] = "0b00001011010111100001010110010011";
        ram[53] = "0b11100100001010101111011010110000";
        ram[54] = "0b11101011111111110001001000010010";
        ram[55] = "0b00000100001000111100111011110110";
        ram[56] = "0b10101111000010111101000000111110";
        ram[57] = "0b00000100000111001110000100001100";
        ram[58] = "0b11000000000100010011111111110001";
        ram[59] = "0b00010101001111110001000101010000";
        ram[60] = "0b11011110110010100101101111000001";
        ram[61] = "0b11100011000010100000000011111111";
        ram[62] = "0b10110100111100010011000010110001";
        ram[63] = "0b11110011111011100100100100011110";
        ram[64] = "0b00100001111110110001111010011110";
        ram[65] = "0b01001111000110110010001000011110";
        ram[66] = "0b11100000010000100001000010010010";
        ram[67] = "0b00000011111011110101110011101111";
        ram[68] = "0b11111111001000110000000011110010";
        ram[69] = "0b11001101000011100001101000001111";
        ram[70] = "0b11100001101111101100101010010011";
        ram[71] = "0b00011110001011111111001111101111";
        ram[72] = "0b11000100001000000000111100100000";
        ram[73] = "0b11100001000100011110000011000010";
        ram[74] = "0b11010010101100101110000000100010";
        ram[75] = "0b00001010000000110010010000000010";
        ram[76] = "0b11001111011011011101111000101111";
        ram[77] = "0b11011110111011010110001011000000";
        ram[78] = "0b00001100000011011011000000000000";
        ram[79] = "0b00011101010100100100111000000011";
        ram[80] = "0b11011110110111111001010010111100";
        ram[81] = "0b01011110110100110101110111100000";
        ram[82] = "0b00101101000100011111000010110000";
        ram[83] = "0b11101011000100100000000000101111";
        ram[84] = "0b11101100110000011011000111100001";
        ram[85] = "0b00101110000011111111101000001111";
        ram[86] = "0b00011101000011000010000000011110";
        ram[87] = "0b00011101001010101111110100010000";
        ram[88] = "0b00110001101100000000110110101101";
        ram[89] = "0b01000000111010101101001011010101";
        ram[90] = "0b11111110111111010000110111111001";
        ram[91] = "0b11101111000011011111111111011101";
        ram[92] = "0b00101101010100001101110011110100";
        ram[93] = "0b10101111010000001110001111000010";
        ram[94] = "0b00010011111000000000000011010010";
        ram[95] = "0b10100111100101000000111011010100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(convDSPOpt_4_convcbu) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 96;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


convDSPOpt_4_convcbu_ram* meminst;


SC_CTOR(convDSPOpt_4_convcbu) {
meminst = new convDSPOpt_4_convcbu_ram("convDSPOpt_4_convcbu_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~convDSPOpt_4_convcbu() {
    delete meminst;
}


};//endmodule
#endif
