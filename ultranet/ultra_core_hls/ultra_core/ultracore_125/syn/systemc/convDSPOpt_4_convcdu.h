// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __convDSPOpt_4_convcdu_H__
#define __convDSPOpt_4_convcdu_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct convDSPOpt_4_convcdu_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 96;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(convDSPOpt_4_convcdu_ram) {
        ram[0] = "0b11110010101000101110110111011100";
        ram[1] = "0b00110001111111101101110111111101";
        ram[2] = "0b00101011001011101011111100001110";
        ram[3] = "0b00110000001000011101000000011100";
        ram[4] = "0b00110010011100100000001111000000";
        ram[5] = "0b11000010111010111011011010110011";
        ram[6] = "0b11111001001010101011111011111110";
        ram[7] = "0b00101111111011101100001011010001";
        ram[8] = "0b11001001111011000100110010011111";
        ram[9] = "0b00010010001000011010000001110000";
        ram[10] = "0b00001010100111001101110100000010";
        ram[11] = "0b10010101010011101100001010100100";
        ram[12] = "0b11010010011100011111010011101100";
        ram[13] = "0b11111110000100000010010100010100";
        ram[14] = "0b11110010000000011110111001000000";
        ram[15] = "0b00100110010000100100111111001100";
        ram[16] = "0b01011110011110101110011100000000";
        ram[17] = "0b10010100000100000111111111110001";
        ram[18] = "0b00100000001000101001011001000110";
        ram[19] = "0b10110111011101010110010011001001";
        ram[20] = "0b00001101101011001100011101001101";
        ram[21] = "0b10100101000100000100010000100000";
        ram[22] = "0b00111111111100001100001101000001";
        ram[23] = "0b11100010001101001111001011111001";
        ram[24] = "0b11110111101111010100111000011111";
        ram[25] = "0b11101110111000001110100100000000";
        ram[26] = "0b00000110111111011101111101000000";
        ram[27] = "0b11101101101111101101010000110001";
        ram[28] = "0b00011100001011101011001000100001";
        ram[29] = "0b00101101010111110010111011000001";
        ram[30] = "0b00001111000110100010001011111111";
        ram[31] = "0b11101110111011001100111100001101";
        ram[32] = "0b11001100111111001001111111010001";
        ram[33] = "0b00001110000011001011110011011100";
        ram[34] = "0b11011101111110010000110111001111";
        ram[35] = "0b10110001000010011010000000000010";
        ram[36] = "0b00000011001011100010111100100100";
        ram[37] = "0b00011111111011100110000100001110";
        ram[38] = "0b11000011001001110010001100010110";
        ram[39] = "0b11000001111001110101110111100000";
        ram[40] = "0b00101110001001010001000100110001";
        ram[41] = "0b00010010000011000101111011001100";
        ram[42] = "0b00100010000000100010001100000110";
        ram[43] = "0b00001111000001100000110011101110";
        ram[44] = "0b11111101101100100100000100111110";
        ram[45] = "0b00110010011111101010111000110001";
        ram[46] = "0b11101101100101010010111100000011";
        ram[47] = "0b00011100110001101111000100000011";
        ram[48] = "0b00011110001011101100000100000001";
        ram[49] = "0b11010011110000101101111111010001";
        ram[50] = "0b00101110010011001110000000000010";
        ram[51] = "0b11011110000100001111000000110100";
        ram[52] = "0b00010000110100101101001011111101";
        ram[53] = "0b11110011101111010000110100100011";
        ram[54] = "0b00001101111110101110110100000001";
        ram[55] = "0b00011110010011101101001100001110";
        ram[56] = "0b11000011100111100010001111011111";
        ram[57] = "0b00000001111011110001000111010000";
        ram[58] = "0b11010000110111001110111000000000";
        ram[59] = "0b00011100001000000001000111111111";
        ram[60] = "0b00001100111001100010010100001011";
        ram[61] = "0b00100001111010111101110100001101";
        ram[62] = "0b00011111001111101111000011001111";
        ram[63] = "0b11110010000100001111000000011101";
        ram[64] = "0b00000001101100101011111100001111";
        ram[65] = "0b11100000001111011111000111101101";
        ram[66] = "0b11110101010100111101110111110010";
        ram[67] = "0b01000001111101001111110001011100";
        ram[68] = "0b11100010111000000110000111111111";
        ram[69] = "0b00000010101101101110110110111111";
        ram[70] = "0b00100110101100101101000100010111";
        ram[71] = "0b11000010111000000010001000000011";
        ram[72] = "0b10110001000011011101000100001101";
        ram[73] = "0b01000011000100000010000100001110";
        ram[74] = "0b00000101100111011110010011011111";
        ram[75] = "0b00111011111111100011110100011100";
        ram[76] = "0b11100011010110110000001011011011";
        ram[77] = "0b00000001001001011110010110011010";
        ram[78] = "0b11100101100111110000000111110001";
        ram[79] = "0b11100001111111000101111011110011";
        ram[80] = "0b00111111111000001111111110011100";
        ram[81] = "0b11111111110001000010111100010011";
        ram[82] = "0b00010000110110111101111111110001";
        ram[83] = "0b11111111101110110011110000001100";
        ram[84] = "0b11110000110110110111000011001101";
        ram[85] = "0b11110000010000001111001010011001";
        ram[86] = "0b11110011001101001111000000100000";
        ram[87] = "0b11110101010011110010001011010000";
        ram[88] = "0b10100011110110100010111011100000";
        ram[89] = "0b11000000000000010110110010100100";
        ram[90] = "0b11010001010000010000000000000100";
        ram[91] = "0b11000011111011010000110111101100";
        ram[92] = "0b11010011100100011001111000000000";
        ram[93] = "0b11000010000011011111101101110111";
        ram[94] = "0b11010100111100100001110100100010";
        ram[95] = "0b00011011101101000010110010111010";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(convDSPOpt_4_convcdu) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 96;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


convDSPOpt_4_convcdu_ram* meminst;


SC_CTOR(convDSPOpt_4_convcdu) {
meminst = new convDSPOpt_4_convcdu_ram("convDSPOpt_4_convcdu_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~convDSPOpt_4_convcdu() {
    delete meminst;
}


};//endmodule
#endif
