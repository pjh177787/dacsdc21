// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __convDSPOpt_4_convctx_H__
#define __convDSPOpt_4_convctx_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct convDSPOpt_4_convctx_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 96;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(convDSPOpt_4_convctx_ram) {
        ram[0] = "0b01010100011111101011111100010001";
        ram[1] = "0b00111110111011110010111100001110";
        ram[2] = "0b11110001000110110000111000000000";
        ram[3] = "0b11100111100111110110000000101011";
        ram[4] = "0b11100000100100011001111011100111";
        ram[5] = "0b11000100111100100110111101111101";
        ram[6] = "0b00011111110111011100001100010000";
        ram[7] = "0b11010110100100110001011101001100";
        ram[8] = "0b11010010110110101001110111001110";
        ram[9] = "0b00010011001100110000110001000101";
        ram[10] = "0b11001101110011001111000101000000";
        ram[11] = "0b00111111111000000100010111100111";
        ram[12] = "0b00110101001011110001111100000010";
        ram[13] = "0b00101111001111010000001000011110";
        ram[14] = "0b11110011000000100000111001100001";
        ram[15] = "0b00000011110100100011001000001111";
        ram[16] = "0b10011110001110010000110000100010";
        ram[17] = "0b00111010010000110000010100111110";
        ram[18] = "0b11010001001100010000111000110000";
        ram[19] = "0b01001110101110100100111110110000";
        ram[20] = "0b10010001101110111001110111011011";
        ram[21] = "0b00011101100100100000000100101111";
        ram[22] = "0b11010000000000000011110111010000";
        ram[23] = "0b11111110101111000011111111001100";
        ram[24] = "0b11100010001011111100111010010000";
        ram[25] = "0b00001001100111111110101111011101";
        ram[26] = "0b10111111000011010011110111001001";
        ram[27] = "0b11111011101110111100000000010000";
        ram[28] = "0b00010011000111011111110010011101";
        ram[29] = "0b00111111110011111111110111111010";
        ram[30] = "0b10111010110011000011110110011001";
        ram[31] = "0b00101010111111111001000011100101";
        ram[32] = "0b11100001111000100011101110101110";
        ram[33] = "0b01101111111011111110111011101011";
        ram[34] = "0b11011010101100010000111010011010";
        ram[35] = "0b00111100111111001001111111110001";
        ram[36] = "0b11011101000100010010111011011100";
        ram[37] = "0b00110101001011010000111100000000";
        ram[38] = "0b01000101001101000001110111011111";
        ram[39] = "0b00010111010011111111101000000000";
        ram[40] = "0b01010000000000110010111011110000";
        ram[41] = "0b11010001000011010000001100101101";
        ram[42] = "0b01110111111100101111000011011111";
        ram[43] = "0b10100111111000000000010000001101";
        ram[44] = "0b01101111110000111001111100000111";
        ram[45] = "0b11010111000011000001111100101111";
        ram[46] = "0b01110001101100011011011001000001";
        ram[47] = "0b11000000101101010000011000000011";
        ram[48] = "0b11001010011110101110001111100100";
        ram[49] = "0b00111110111100001100010001100100";
        ram[50] = "0b01011111101100001100110011110011";
        ram[51] = "0b11100001001000100000111000000011";
        ram[52] = "0b11111111000011010101110100001011";
        ram[53] = "0b11101111000111010001111100101100";
        ram[54] = "0b00111111111000110011001111100001";
        ram[55] = "0b10100010001101000001101000010000";
        ram[56] = "0b00011110110000110000100110111001";
        ram[57] = "0b00010000001110010011000000011111";
        ram[58] = "0b11010100001011100010010111010010";
        ram[59] = "0b10010000000000101110000011001011";
        ram[60] = "0b11110010000110110000111011100000";
        ram[61] = "0b00000011111100010101111100011111";
        ram[62] = "0b11001101001111101111111111101110";
        ram[63] = "0b00010101101111110000000101000000";
        ram[64] = "0b00111100000011001101111100110001";
        ram[65] = "0b00101101101111010000001010111001";
        ram[66] = "0b00001101010011011101001100111111";
        ram[67] = "0b00010001000111100100000000010001";
        ram[68] = "0b01001111000011101101000100010001";
        ram[69] = "0b00010000000000011100011010111010";
        ram[70] = "0b11101110000100000001011100100011";
        ram[71] = "0b11110110000000101111011000111111";
        ram[72] = "0b00010001001000011101111111010010";
        ram[73] = "0b11110010001000001111001001001111";
        ram[74] = "0b11101100000100010010110100101111";
        ram[75] = "0b00010000010100000001101100100010";
        ram[76] = "0b00111100010001010001010111010010";
        ram[77] = "0b10010010111111010000000000011101";
        ram[78] = "0b00001100011111010001111100101100";
        ram[79] = "0b00100000011000100000000100100000";
        ram[80] = "0b00100000010000100000000011101101";
        ram[81] = "0b11110101010011001100111111110001";
        ram[82] = "0b11101111011011011101110000011001";
        ram[83] = "0b00000001010000001110000100101011";
        ram[84] = "0b11111111110101000100011011110000";
        ram[85] = "0b11000001000100001110101111000001";
        ram[86] = "0b00000010000110111111110000100010";
        ram[87] = "0b11110001011111101101011000010001";
        ram[88] = "0b00100001001000010011010100001101";
        ram[89] = "0b11010001000000000010111010011011";
        ram[90] = "0b00100010111010101111111011100011";
        ram[91] = "0b11001101011100001110010100011011";
        ram[92] = "0b11110001111111011111001100110001";
        ram[93] = "0b11010001000000001100111110111110";
        ram[94] = "0b11010000101000010001110111010001";
        ram[95] = "0b00010011111100001111001000001011";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(convDSPOpt_4_convctx) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 96;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


convDSPOpt_4_convctx_ram* meminst;


SC_CTOR(convDSPOpt_4_convctx) {
meminst = new convDSPOpt_4_convctx_ram("convDSPOpt_4_convctx_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~convDSPOpt_4_convctx() {
    delete meminst;
}


};//endmodule
#endif
