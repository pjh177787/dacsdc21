-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity convDSPOpt_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    vec_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    vec_V_V_empty_n : IN STD_LOGIC;
    vec_V_V_read : OUT STD_LOGIC;
    out_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_V_V_full_n : IN STD_LOGIC;
    out_V_V_write : OUT STD_LOGIC;
    reps_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    reps_empty_n : IN STD_LOGIC;
    reps_read : OUT STD_LOGIC );
end;


architecture behav of convDSPOpt_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv47_0 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv47_1 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000000000001";
    constant ap_const_lv16_4200 : STD_LOGIC_VECTOR (15 downto 0) := "0100001000000000";
    constant ap_const_lv6_30 : STD_LOGIC_VECTOR (5 downto 0) := "110000";
    constant ap_const_lv10_210 : STD_LOGIC_VECTOR (9 downto 0) := "1000010000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv20_4000 : STD_LOGIC_VECTOR (19 downto 0) := "00000100000000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv6_2F : STD_LOGIC_VECTOR (5 downto 0) := "101111";
    constant ap_const_lv11_2E8 : STD_LOGIC_VECTOR (10 downto 0) := "01011101000";
    constant ap_const_lv20_2546B : STD_LOGIC_VECTOR (19 downto 0) := "00100101010001101011";
    constant ap_const_lv20_2946B : STD_LOGIC_VECTOR (19 downto 0) := "00101001010001101011";
    constant ap_const_lv11_2DB : STD_LOGIC_VECTOR (10 downto 0) := "01011011011";
    constant ap_const_lv20_42A93 : STD_LOGIC_VECTOR (19 downto 0) := "01000010101010010011";
    constant ap_const_lv20_46A93 : STD_LOGIC_VECTOR (19 downto 0) := "01000110101010010011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal conv_6_inc_new_V_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_6_inc_new_V_0_ce0 : STD_LOGIC;
    signal conv_6_inc_new_V_0_q0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_6_inc_new_V_0_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_6_inc_new_V_0_ce1 : STD_LOGIC;
    signal conv_6_inc_new_V_0_q1 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_6_bias_new_V_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_6_bias_new_V_0_ce0 : STD_LOGIC;
    signal conv_6_bias_new_V_0_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal conv_6_bias_new_V_0_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_6_bias_new_V_0_ce1 : STD_LOGIC;
    signal conv_6_bias_new_V_0_q1 : STD_LOGIC_VECTOR (19 downto 0);
    signal conv_6_inc_new_V_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_6_inc_new_V_1_ce0 : STD_LOGIC;
    signal conv_6_inc_new_V_1_q0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_6_inc_new_V_1_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_6_inc_new_V_1_ce1 : STD_LOGIC;
    signal conv_6_inc_new_V_1_q1 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_6_bias_new_V_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_6_bias_new_V_1_ce0 : STD_LOGIC;
    signal conv_6_bias_new_V_1_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal conv_6_bias_new_V_1_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_6_bias_new_V_1_ce1 : STD_LOGIC;
    signal conv_6_bias_new_V_1_q1 : STD_LOGIC_VECTOR (19 downto 0);
    signal conv_6_w_new_V_0_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_6_w_new_V_0_2_ce0 : STD_LOGIC;
    signal conv_6_w_new_V_0_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_6_w_new_V_0_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_6_w_new_V_0_1_ce0 : STD_LOGIC;
    signal conv_6_w_new_V_0_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_6_w_new_V_0_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_6_w_new_V_0_0_ce0 : STD_LOGIC;
    signal conv_6_w_new_V_0_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_6_w_new_V_1_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_6_w_new_V_1_2_ce0 : STD_LOGIC;
    signal conv_6_w_new_V_1_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_6_w_new_V_1_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_6_w_new_V_1_1_ce0 : STD_LOGIC;
    signal conv_6_w_new_V_1_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_6_w_new_V_1_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_6_w_new_V_1_0_ce0 : STD_LOGIC;
    signal conv_6_w_new_V_1_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal vec_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln392_reg_2599 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln392_reg_2599_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal o_out_reg_2744 : STD_LOGIC_VECTOR (0 downto 0);
    signal o_out_reg_2744_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal reps_blk_n : STD_LOGIC;
    signal indvar_flatten143_reg_427 : STD_LOGIC_VECTOR (46 downto 0);
    signal indvar_flatten33_reg_438 : STD_LOGIC_VECTOR (15 downto 0);
    signal peIdx_0_i_reg_449 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten_reg_460 : STD_LOGIC_VECTOR (9 downto 0);
    signal infoldIdx_0_i_reg_471 : STD_LOGIC_VECTOR (5 downto 0);
    signal w_0_i_reg_482 : STD_LOGIC_VECTOR (4 downto 0);
    signal reps_read_reg_2562 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal bound46_fu_533_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal bound46_reg_2568 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal trunc_ln404_fu_539_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln404_reg_2573 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln392_fu_551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln392_reg_2599_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln392_reg_2599_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln392_reg_2599_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln392_reg_2599_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln392_5_fu_556_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal icmp_ln393_fu_562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln393_reg_2608 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln393_reg_2608_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln393_fu_576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln393_reg_2619 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln393_18_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln393_18_reg_2624 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln393_18_reg_2624_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal peIdx_fu_606_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal peIdx_reg_2635 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln393_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln393_reg_2640 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln404_5_fu_618_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln404_5_reg_2645 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln393_5_fu_628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln393_5_reg_2651 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln393_20_fu_634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln393_20_reg_2656 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln393_116_fu_640_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln399_fu_660_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln399_reg_2667 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln399_reg_2667_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln399_reg_2667_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln399_reg_2667_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln399_reg_2667_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal infoldIdx_fu_668_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln394_5_fu_680_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln393_117_fu_694_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_6_inc_new_V_0_l_reg_2689 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal conv_6_bias_new_V_0_1_reg_2694 : STD_LOGIC_VECTOR (19 downto 0);
    signal conv_6_inc_new_V_1_l_reg_2699 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_6_bias_new_V_1_1_reg_2704 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln1353_fu_730_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln1353_reg_2709 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln1353_46_fu_736_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln1353_46_reg_2714 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln394_fu_833_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal o_out_fu_848_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal o_out_reg_2744_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal o_out_reg_2744_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal o_out_reg_2744_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal o_out_reg_2744_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal o_out_reg_2744_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln393_110_fu_910_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln393_110_reg_2778 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln393_110_reg_2778_pp0_iter3_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln393_110_reg_2778_pp0_iter4_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln393_110_reg_2778_pp0_iter5_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln393_111_fu_917_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_111_reg_2783 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_111_reg_2783_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_111_reg_2783_pp0_iter4_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_111_reg_2783_pp0_iter5_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_111_reg_2783_pp0_iter6_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_112_fu_930_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_112_reg_2788 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_112_reg_2788_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_112_reg_2788_pp0_iter4_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_112_reg_2788_pp0_iter5_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_112_reg_2788_pp0_iter6_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_113_fu_937_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln393_113_reg_2793 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln393_113_reg_2793_pp0_iter3_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln393_113_reg_2793_pp0_iter4_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln393_113_reg_2793_pp0_iter5_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln393_114_fu_944_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_114_reg_2798 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_114_reg_2798_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_114_reg_2798_pp0_iter4_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_114_reg_2798_pp0_iter5_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_114_reg_2798_pp0_iter6_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_115_fu_957_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_115_reg_2803 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_115_reg_2803_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_115_reg_2803_pp0_iter4_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_115_reg_2803_pp0_iter5_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_115_reg_2803_pp0_iter6_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln647_fu_964_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln647_reg_2808 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_78_i_i_reg_2813 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_1_i_i_reg_2818 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_78_1_i_i_reg_2823 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_2_i_i_reg_2828 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_78_2_i_i_reg_2833 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_3_i_i_reg_2838 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_78_3_i_i_reg_2843 : STD_LOGIC_VECTOR (3 downto 0);
    signal wpacks_0_0_V_fu_1084_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_0_V_reg_2848 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_1_V_fu_1154_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_1_V_reg_2853 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_2_V_fu_1224_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_2_V_reg_2858 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_3_V_fu_1294_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_3_V_reg_2863 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_0_V_fu_1346_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_0_V_reg_2868 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_1_V_fu_1416_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_1_V_reg_2873 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_2_V_fu_1486_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_2_V_reg_2878 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_3_V_fu_1556_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_3_V_reg_2883 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1352_fu_2434_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_reg_2888 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_49_fu_2441_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_49_reg_2893 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln700_fu_1608_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_reg_2898 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_95_fu_1611_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_95_reg_2903 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1352_50_fu_2448_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_50_reg_2908 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln700_96_fu_1621_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_96_reg_2913 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1352_51_fu_2455_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_51_reg_2918 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln700_97_fu_1631_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_97_reg_2923 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1352_52_fu_2462_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_52_reg_2928 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_53_fu_2469_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_53_reg_2933 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln700_98_fu_1640_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_98_reg_2938 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_99_fu_1643_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_99_reg_2943 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1352_54_fu_2476_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_54_reg_2948 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln700_100_fu_1649_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_100_reg_2953 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1352_55_fu_2483_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_55_reg_2958 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln700_101_fu_1655_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_101_reg_2963 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln700_fu_1664_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln700_reg_2968 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln700_139_fu_1680_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln700_139_reg_2974 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_64_reg_2980 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_101_fu_1710_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln700_101_reg_2985 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln700_145_fu_1726_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln700_145_reg_2991 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_67_reg_2997 : STD_LOGIC_VECTOR (0 downto 0);
    signal firPartialRes0_V_0_3_5_reg_3002 : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes0_V_1_3_5_reg_3007 : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes1_0_V_s_reg_3012 : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes1_1_V_s_reg_3017 : STD_LOGIC_VECTOR (17 downto 0);
    signal o_clear_fu_1774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal o_clear_reg_3022 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln78_22_fu_1840_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln78_22_reg_3030 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_reg_3035 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_66_reg_3040 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln398_fu_1880_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln398_reg_3045 : STD_LOGIC_VECTOR (17 downto 0);
    signal outPartialArr0_0_V_fu_1894_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal outPartialArr0_0_V_reg_3050 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln78_25_fu_1961_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln78_25_reg_3055 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_s_reg_3060 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_69_reg_3065 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln398_6_fu_2001_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln398_6_reg_3070 : STD_LOGIC_VECTOR (17 downto 0);
    signal outPartialArr0_1_V_fu_2015_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal outPartialArr0_1_V_reg_3075 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_fu_2490_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_reg_3080 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_70_fu_2496_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_70_reg_3086 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_73_fu_2502_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_73_reg_3092 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_76_fu_2508_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_76_reg_3098 : STD_LOGIC_VECTOR (28 downto 0);
    signal res_V_fu_2231_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_reg_3104 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_14_fu_2293_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_14_reg_3109 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_15_fu_2355_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_15_reg_3114 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_16_fu_2417_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_16_reg_3119 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter1_state4 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal zext_ln458_fu_543_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln458_5_fu_802_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln404_8_fu_864_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal firPartialRes0_V_0_3_fu_198 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln398_31_fu_2076_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_sig_allocacmp_firPartialRes0_V_0_3_5 : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes0_V_1_3_fu_202 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln398_35_fu_2119_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_sig_allocacmp_firPartialRes0_V_1_3_5 : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes1_0_V_5_fu_206 : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes1_0_V_fu_2083_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_sig_allocacmp_firPartialRes1_0_V_s : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes1_1_V_5_fu_210 : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes1_1_V_fu_2126_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_sig_allocacmp_firPartialRes1_1_V_s : STD_LOGIC_VECTOR (17 downto 0);
    signal outPartialArr0_0_V_5_fu_214 : STD_LOGIC_VECTOR (17 downto 0);
    signal outPartialArr0_1_V_5_fu_218 : STD_LOGIC_VECTOR (17 downto 0);
    signal outPartialArr1_V_0_3_fu_222 : STD_LOGIC_VECTOR (17 downto 0);
    signal outPartialArr1_V_1_3_fu_226 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal shl_ln392_5_fu_498_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln392_fu_493_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_fu_503_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_90_fu_509_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_91_fu_521_p3 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_shl230_fu_529_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_shl_fu_517_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal icmp_ln395_fu_582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln394_fu_594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln393_fu_568_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln393_5_fu_622_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln393_17_fu_588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln399_fu_648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln399_5_fu_654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln394_5_fu_674_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln393_5_fu_688_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_702_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln404_4_fu_713_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln404_fu_709_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln404_7_fu_720_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln404_fu_724_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln399_fu_749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln404_mid1_fu_767_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln404_4_mid1_fu_778_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln404_13_fu_774_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln404_14_fu_785_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln404_5_fu_789_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_101_fu_742_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal and_ln393_fu_755_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln393_108_fu_760_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_fu_814_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln399_8_fu_820_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln393_19_fu_809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln399_4_fu_843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln399_5_fu_826_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln393_109_fu_795_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln395_fu_840_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln404_fu_854_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln404_fu_860_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln393_102_fu_874_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln393_103_fu_880_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln1353_47_fu_924_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_104_fu_886_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_105_fu_892_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln393_106_fu_898_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln1353_48_fu_951_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_107_fu_904_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln68_fu_1042_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln68_11_fu_1054_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln68_s_fu_1058_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln647_21_fu_1038_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln68_fu_1066_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln68_169_fu_1070_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln68_fu_1074_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1_fu_1046_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln68_170_fu_1080_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_92_fu_1100_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_93_fu_1118_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln68_70_fu_1128_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Result_1_i8_i_fu_1090_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln68_171_fu_1136_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln68_172_fu_1140_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln68_77_fu_1144_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln68_69_fu_1110_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln68_173_fu_1150_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_94_fu_1170_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_95_fu_1188_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln68_72_fu_1198_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Result_2_i9_i_fu_1160_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln68_174_fu_1206_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln68_175_fu_1210_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln68_79_fu_1214_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln68_71_fu_1180_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln68_176_fu_1220_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_96_fu_1240_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_97_fu_1258_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln68_74_fu_1268_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Result_3_i10_i_fu_1230_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln68_177_fu_1276_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln68_178_fu_1280_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln68_81_fu_1284_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln68_73_fu_1250_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln68_179_fu_1290_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln68_12_fu_1304_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln68_13_fu_1316_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln68_76_fu_1320_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln647_22_fu_1300_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln68_180_fu_1328_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln68_181_fu_1332_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln68_83_fu_1336_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln68_75_fu_1308_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln68_182_fu_1342_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_98_fu_1362_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_99_fu_1380_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln68_78_fu_1390_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Result_1_i25_i_fu_1352_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln68_183_fu_1398_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln68_184_fu_1402_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln68_85_fu_1406_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln68_77_fu_1372_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln68_185_fu_1412_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_100_fu_1432_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_101_fu_1450_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln68_80_fu_1460_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Result_2_i35_i_fu_1422_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln68_186_fu_1468_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln68_187_fu_1472_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln68_87_fu_1476_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln68_79_fu_1442_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln68_188_fu_1482_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_102_fu_1502_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_103_fu_1520_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln68_82_fu_1530_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Result_3_i45_i_fu_1492_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln68_189_fu_1538_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln68_190_fu_1542_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln68_89_fu_1546_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln68_81_fu_1512_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln68_191_fu_1552_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal ipack_0_V_fu_1562_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ipack_1_V_fu_1570_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ipack_2_V_fu_1578_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ipack_3_V_fu_1586_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln700_fu_1661_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln215_67_fu_1658_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln700_74_fu_1670_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln700_75_fu_1677_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln700_141_fu_1686_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln700_138_fu_1673_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln700_142_fu_1690_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln700_77_fu_1707_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln215_72_fu_1704_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln700_79_fu_1716_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln700_80_fu_1723_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln700_147_fu_1732_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln700_144_fu_1719_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln700_148_fu_1736_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln700_76_fu_1782_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal sext_ln700_73_fu_1779_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal add_ln700_140_fu_1785_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal p_Result_i_i_i_i2_s_fu_1799_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln78_fu_1809_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_65_fu_1828_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_i_i_i_i4_s_fu_1818_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln78_22_fu_1836_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln700_97_fu_1789_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal trunc_ln647_23_fu_1795_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln78_fu_1812_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln398_fu_1872_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln68_193_fu_1868_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln398_30_fu_1886_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln68_192_fu_1864_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln700_81_fu_1903_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal sext_ln700_78_fu_1900_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal add_ln700_146_fu_1906_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal p_Result_i_i_i_i2_3_fu_1920_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln78_24_fu_1930_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_68_fu_1949_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_i_i_i_i4_3_fu_1939_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln78_25_fu_1957_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln700_103_fu_1910_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal trunc_ln647_24_fu_1916_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln78_24_fu_1933_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln398_33_fu_1993_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln68_197_fu_1989_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln398_34_fu_2007_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln68_196_fu_1985_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln647_fu_2047_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln78_23_fu_2050_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln78_23_fu_2053_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal firPartialRes0_0_V_fu_2059_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln68_195_fu_2062_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes0_0_V_5_fu_2066_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln700_100_fu_2071_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln647_12_fu_2090_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln78_26_fu_2093_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln78_26_fu_2096_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal firPartialRes0_1_V_fu_2102_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln68_199_fu_2105_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes0_1_V_5_fu_2109_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln700_106_fu_2114_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln393_fu_2165_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln1352_fu_2177_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal ret_V_79_fu_2180_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln393_16_fu_2168_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_69_fu_2192_p2 : STD_LOGIC_VECTOR (28 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of ret_V_69_fu_2192_p2 : signal is "no";
    signal tmp_70_fu_2197_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln895_52_fu_2207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln_fu_2213_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln895_fu_2186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln192_fu_2223_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1352_12_fu_2239_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal ret_V_80_fu_2242_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal ret_V_72_fu_2254_p2 : STD_LOGIC_VECTOR (28 downto 0);
    attribute use_dsp48 of ret_V_72_fu_2254_p2 : signal is "no";
    signal tmp_71_fu_2259_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln895_54_fu_2269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln214_s_fu_2275_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln895_53_fu_2248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln192_14_fu_2285_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln393_17_fu_2171_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln1352_13_fu_2301_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal ret_V_81_fu_2304_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln393_18_fu_2174_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_75_fu_2316_p2 : STD_LOGIC_VECTOR (28 downto 0);
    attribute use_dsp48 of ret_V_75_fu_2316_p2 : signal is "no";
    signal tmp_72_fu_2321_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln895_56_fu_2331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln214_2_fu_2337_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln895_55_fu_2310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln192_15_fu_2347_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1352_14_fu_2363_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal ret_V_82_fu_2366_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal ret_V_78_fu_2378_p2 : STD_LOGIC_VECTOR (28 downto 0);
    attribute use_dsp48 of ret_V_78_fu_2378_p2 : signal is "no";
    signal tmp_73_fu_2383_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln895_58_fu_2393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln214_3_fu_2399_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln895_57_fu_2372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln192_16_fu_2409_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln1352_fu_2434_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln215_fu_1597_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_49_fu_2441_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln215_33_fu_1604_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_50_fu_2448_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln215_34_fu_1617_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_51_fu_2455_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln215_35_fu_1627_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_52_fu_2462_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1352_53_fu_2469_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1352_54_fu_2476_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1352_55_fu_2483_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ret_V_fu_2490_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln393_fu_2041_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_70_fu_2496_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_73_fu_2502_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln393_13_fu_2044_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_76_fu_2508_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component ultra_net_mul_mulbml IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (25 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (40 downto 0) );
    end component;


    component ultra_net_mul_mulc8D IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component convDSPOpt_2_convdpG IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component convDSPOpt_2_convdqG IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (19 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component convDSPOpt_2_convdrG IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component convDSPOpt_2_convdsG IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (19 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component convDSPOpt_2_convdtH IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component convDSPOpt_2_convduH IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component convDSPOpt_2_convdvH IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component convDSPOpt_2_convdwH IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component convDSPOpt_2_convdxH IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component convDSPOpt_2_convdyH IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    conv_6_inc_new_V_0_U : component convDSPOpt_2_convdpG
    generic map (
        DataWidth => 11,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_6_inc_new_V_0_address0,
        ce0 => conv_6_inc_new_V_0_ce0,
        q0 => conv_6_inc_new_V_0_q0,
        address1 => conv_6_inc_new_V_0_address1,
        ce1 => conv_6_inc_new_V_0_ce1,
        q1 => conv_6_inc_new_V_0_q1);

    conv_6_bias_new_V_0_U : component convDSPOpt_2_convdqG
    generic map (
        DataWidth => 20,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_6_bias_new_V_0_address0,
        ce0 => conv_6_bias_new_V_0_ce0,
        q0 => conv_6_bias_new_V_0_q0,
        address1 => conv_6_bias_new_V_0_address1,
        ce1 => conv_6_bias_new_V_0_ce1,
        q1 => conv_6_bias_new_V_0_q1);

    conv_6_inc_new_V_1_U : component convDSPOpt_2_convdrG
    generic map (
        DataWidth => 11,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_6_inc_new_V_1_address0,
        ce0 => conv_6_inc_new_V_1_ce0,
        q0 => conv_6_inc_new_V_1_q0,
        address1 => conv_6_inc_new_V_1_address1,
        ce1 => conv_6_inc_new_V_1_ce1,
        q1 => conv_6_inc_new_V_1_q1);

    conv_6_bias_new_V_1_U : component convDSPOpt_2_convdsG
    generic map (
        DataWidth => 20,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_6_bias_new_V_1_address0,
        ce0 => conv_6_bias_new_V_1_ce0,
        q0 => conv_6_bias_new_V_1_q0,
        address1 => conv_6_bias_new_V_1_address1,
        ce1 => conv_6_bias_new_V_1_ce1,
        q1 => conv_6_bias_new_V_1_q1);

    conv_6_w_new_V_0_2_U : component convDSPOpt_2_convdtH
    generic map (
        DataWidth => 16,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_6_w_new_V_0_2_address0,
        ce0 => conv_6_w_new_V_0_2_ce0,
        q0 => conv_6_w_new_V_0_2_q0);

    conv_6_w_new_V_0_1_U : component convDSPOpt_2_convduH
    generic map (
        DataWidth => 16,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_6_w_new_V_0_1_address0,
        ce0 => conv_6_w_new_V_0_1_ce0,
        q0 => conv_6_w_new_V_0_1_q0);

    conv_6_w_new_V_0_0_U : component convDSPOpt_2_convdvH
    generic map (
        DataWidth => 16,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_6_w_new_V_0_0_address0,
        ce0 => conv_6_w_new_V_0_0_ce0,
        q0 => conv_6_w_new_V_0_0_q0);

    conv_6_w_new_V_1_2_U : component convDSPOpt_2_convdwH
    generic map (
        DataWidth => 16,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_6_w_new_V_1_2_address0,
        ce0 => conv_6_w_new_V_1_2_ce0,
        q0 => conv_6_w_new_V_1_2_q0);

    conv_6_w_new_V_1_1_U : component convDSPOpt_2_convdxH
    generic map (
        DataWidth => 16,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_6_w_new_V_1_1_address0,
        ce0 => conv_6_w_new_V_1_1_ce0,
        q0 => conv_6_w_new_V_1_1_q0);

    conv_6_w_new_V_1_0_U : component convDSPOpt_2_convdyH
    generic map (
        DataWidth => 16,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_6_w_new_V_1_0_address0,
        ce0 => conv_6_w_new_V_1_0_ce0,
        q0 => conv_6_w_new_V_1_0_q0);

    ultra_net_mul_mulbml_U635 : component ultra_net_mul_mulbml
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 15,
        dout_WIDTH => 41)
    port map (
        din0 => wpacks_0_0_V_reg_2848,
        din1 => mul_ln1352_fu_2434_p1,
        dout => mul_ln1352_fu_2434_p2);

    ultra_net_mul_mulbml_U636 : component ultra_net_mul_mulbml
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 15,
        dout_WIDTH => 41)
    port map (
        din0 => wpacks_0_1_V_reg_2853,
        din1 => mul_ln1352_49_fu_2441_p1,
        dout => mul_ln1352_49_fu_2441_p2);

    ultra_net_mul_mulbml_U637 : component ultra_net_mul_mulbml
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 15,
        dout_WIDTH => 41)
    port map (
        din0 => wpacks_0_2_V_reg_2858,
        din1 => mul_ln1352_50_fu_2448_p1,
        dout => mul_ln1352_50_fu_2448_p2);

    ultra_net_mul_mulbml_U638 : component ultra_net_mul_mulbml
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 15,
        dout_WIDTH => 41)
    port map (
        din0 => wpacks_0_3_V_reg_2863,
        din1 => mul_ln1352_51_fu_2455_p1,
        dout => mul_ln1352_51_fu_2455_p2);

    ultra_net_mul_mulbml_U639 : component ultra_net_mul_mulbml
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 15,
        dout_WIDTH => 41)
    port map (
        din0 => wpacks_1_0_V_reg_2868,
        din1 => mul_ln1352_52_fu_2462_p1,
        dout => mul_ln1352_52_fu_2462_p2);

    ultra_net_mul_mulbml_U640 : component ultra_net_mul_mulbml
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 15,
        dout_WIDTH => 41)
    port map (
        din0 => wpacks_1_1_V_reg_2873,
        din1 => mul_ln1352_53_fu_2469_p1,
        dout => mul_ln1352_53_fu_2469_p2);

    ultra_net_mul_mulbml_U641 : component ultra_net_mul_mulbml
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 15,
        dout_WIDTH => 41)
    port map (
        din0 => wpacks_1_2_V_reg_2878,
        din1 => mul_ln1352_54_fu_2476_p1,
        dout => mul_ln1352_54_fu_2476_p2);

    ultra_net_mul_mulbml_U642 : component ultra_net_mul_mulbml
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 15,
        dout_WIDTH => 41)
    port map (
        din0 => wpacks_1_3_V_reg_2883,
        din1 => mul_ln1352_55_fu_2483_p1,
        dout => mul_ln1352_55_fu_2483_p2);

    ultra_net_mul_mulc8D_U643 : component ultra_net_mul_mulc8D
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 18,
        dout_WIDTH => 29)
    port map (
        din0 => ret_V_fu_2490_p0,
        din1 => outPartialArr0_0_V_reg_3050,
        dout => ret_V_fu_2490_p2);

    ultra_net_mul_mulc8D_U644 : component ultra_net_mul_mulc8D
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 18,
        dout_WIDTH => 29)
    port map (
        din0 => ret_V_70_fu_2496_p0,
        din1 => add_ln398_reg_3045,
        dout => ret_V_70_fu_2496_p2);

    ultra_net_mul_mulc8D_U645 : component ultra_net_mul_mulc8D
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 18,
        dout_WIDTH => 29)
    port map (
        din0 => ret_V_73_fu_2502_p0,
        din1 => outPartialArr0_1_V_reg_3075,
        dout => ret_V_73_fu_2502_p2);

    ultra_net_mul_mulc8D_U646 : component ultra_net_mul_mulc8D
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 18,
        dout_WIDTH => 29)
    port map (
        din0 => ret_V_76_fu_2508_p0,
        din1 => add_ln398_6_reg_3070,
        dout => ret_V_76_fu_2508_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln392_fu_551_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter1_state4)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten143_reg_427_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln392_fu_551_p2 = ap_const_lv1_0))) then 
                indvar_flatten143_reg_427 <= add_ln392_5_fu_556_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                indvar_flatten143_reg_427 <= ap_const_lv47_0;
            end if; 
        end if;
    end process;

    indvar_flatten33_reg_438_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln392_fu_551_p2 = ap_const_lv1_0))) then 
                indvar_flatten33_reg_438 <= select_ln393_117_fu_694_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                indvar_flatten33_reg_438 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_460_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln392_fu_551_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_460 <= select_ln394_5_fu_680_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                indvar_flatten_reg_460 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    infoldIdx_0_i_reg_471_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln392_fu_551_p2 = ap_const_lv1_0))) then 
                infoldIdx_0_i_reg_471 <= infoldIdx_fu_668_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                infoldIdx_0_i_reg_471 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    peIdx_0_i_reg_449_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln392_fu_551_p2 = ap_const_lv1_0))) then 
                peIdx_0_i_reg_449 <= select_ln393_116_fu_640_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                peIdx_0_i_reg_449 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    w_0_i_reg_482_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln392_reg_2599 = ap_const_lv1_0))) then 
                w_0_i_reg_482 <= select_ln394_fu_833_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                w_0_i_reg_482 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = and_ln393_18_reg_2624) and (icmp_ln393_reg_2608 = ap_const_lv1_0))) then
                add_ln1353_46_reg_2714 <= add_ln1353_46_fu_736_p2;
                add_ln1353_reg_2709 <= add_ln1353_fu_730_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln392_reg_2599_pp0_iter4_reg = ap_const_lv1_0))) then
                add_ln398_6_reg_3070 <= add_ln398_6_fu_2001_p2;
                add_ln398_reg_3045 <= add_ln398_fu_1880_p2;
                add_ln78_22_reg_3030 <= add_ln78_22_fu_1840_p2;
                add_ln78_25_reg_3055 <= add_ln78_25_fu_1961_p2;
                firPartialRes0_V_0_3_5_reg_3002 <= ap_sig_allocacmp_firPartialRes0_V_0_3_5;
                firPartialRes0_V_1_3_5_reg_3007 <= ap_sig_allocacmp_firPartialRes0_V_1_3_5;
                firPartialRes1_0_V_s_reg_3012 <= ap_sig_allocacmp_firPartialRes1_0_V_s;
                firPartialRes1_1_V_s_reg_3017 <= ap_sig_allocacmp_firPartialRes1_1_V_s;
                o_clear_reg_3022 <= o_clear_fu_1774_p2;
                outPartialArr0_0_V_reg_3050 <= outPartialArr0_0_V_fu_1894_p2;
                outPartialArr0_1_V_reg_3075 <= outPartialArr0_1_V_fu_2015_p2;
                tmp_66_reg_3040 <= add_ln700_140_fu_1785_p2(32 downto 32);
                tmp_69_reg_3065 <= add_ln700_146_fu_1906_p2(32 downto 32);
                tmp_reg_3035 <= add_ln700_97_fu_1789_p2(42 downto 33);
                tmp_s_reg_3060 <= add_ln700_103_fu_1910_p2(42 downto 33);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln392_reg_2599_pp0_iter3_reg = ap_const_lv1_0))) then
                add_ln700_101_reg_2985 <= add_ln700_101_fu_1710_p2;
                add_ln700_139_reg_2974 <= add_ln700_139_fu_1680_p2;
                add_ln700_145_reg_2991 <= add_ln700_145_fu_1726_p2;
                add_ln700_reg_2968 <= add_ln700_fu_1664_p2;
                tmp_64_reg_2980 <= add_ln700_142_fu_1690_p2(10 downto 10);
                tmp_67_reg_2997 <= add_ln700_148_fu_1736_p2(10 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln392_fu_551_p2 = ap_const_lv1_0))) then
                and_ln393_18_reg_2624 <= and_ln393_18_fu_600_p2;
                and_ln393_20_reg_2656 <= and_ln393_20_fu_634_p2;
                icmp_ln393_reg_2608 <= icmp_ln393_fu_562_p2;
                or_ln393_5_reg_2651 <= or_ln393_5_fu_628_p2;
                or_ln393_reg_2640 <= or_ln393_fu_612_p2;
                peIdx_reg_2635 <= peIdx_fu_606_p2;
                select_ln399_reg_2667 <= select_ln399_fu_660_p3;
                trunc_ln404_5_reg_2645 <= trunc_ln404_5_fu_618_p1;
                xor_ln393_reg_2619 <= xor_ln393_fu_576_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln393_18_reg_2624_pp0_iter1_reg <= and_ln393_18_reg_2624;
                icmp_ln392_reg_2599 <= icmp_ln392_fu_551_p2;
                icmp_ln392_reg_2599_pp0_iter1_reg <= icmp_ln392_reg_2599;
                icmp_ln393_reg_2608_pp0_iter1_reg <= icmp_ln393_reg_2608;
                select_ln399_reg_2667_pp0_iter1_reg <= select_ln399_reg_2667;
                trunc_ln404_reg_2573 <= trunc_ln404_fu_539_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    bound46_reg_2568(46 downto 10) <= bound46_fu_533_p2(46 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                conv_6_bias_new_V_0_1_reg_2694 <= conv_6_bias_new_V_0_q0;
                conv_6_bias_new_V_1_1_reg_2704 <= conv_6_bias_new_V_1_q0;
                conv_6_inc_new_V_0_l_reg_2689 <= conv_6_inc_new_V_0_q0;
                conv_6_inc_new_V_1_l_reg_2699 <= conv_6_inc_new_V_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln392_reg_2599_pp0_iter5_reg = ap_const_lv1_0))) then
                firPartialRes0_V_0_3_fu_198 <= select_ln398_31_fu_2076_p3;
                firPartialRes0_V_1_3_fu_202 <= select_ln398_35_fu_2119_p3;
                firPartialRes1_0_V_5_fu_206 <= firPartialRes1_0_V_fu_2083_p3;
                firPartialRes1_1_V_5_fu_210 <= firPartialRes1_1_V_fu_2126_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln392_reg_2599_pp0_iter2_reg <= icmp_ln392_reg_2599_pp0_iter1_reg;
                icmp_ln392_reg_2599_pp0_iter3_reg <= icmp_ln392_reg_2599_pp0_iter2_reg;
                icmp_ln392_reg_2599_pp0_iter4_reg <= icmp_ln392_reg_2599_pp0_iter3_reg;
                icmp_ln392_reg_2599_pp0_iter5_reg <= icmp_ln392_reg_2599_pp0_iter4_reg;
                o_out_reg_2744_pp0_iter2_reg <= o_out_reg_2744;
                o_out_reg_2744_pp0_iter3_reg <= o_out_reg_2744_pp0_iter2_reg;
                o_out_reg_2744_pp0_iter4_reg <= o_out_reg_2744_pp0_iter3_reg;
                o_out_reg_2744_pp0_iter5_reg <= o_out_reg_2744_pp0_iter4_reg;
                o_out_reg_2744_pp0_iter6_reg <= o_out_reg_2744_pp0_iter5_reg;
                o_out_reg_2744_pp0_iter7_reg <= o_out_reg_2744_pp0_iter6_reg;
                select_ln393_110_reg_2778_pp0_iter3_reg <= select_ln393_110_reg_2778;
                select_ln393_110_reg_2778_pp0_iter4_reg <= select_ln393_110_reg_2778_pp0_iter3_reg;
                select_ln393_110_reg_2778_pp0_iter5_reg <= select_ln393_110_reg_2778_pp0_iter4_reg;
                select_ln393_111_reg_2783_pp0_iter3_reg <= select_ln393_111_reg_2783;
                select_ln393_111_reg_2783_pp0_iter4_reg <= select_ln393_111_reg_2783_pp0_iter3_reg;
                select_ln393_111_reg_2783_pp0_iter5_reg <= select_ln393_111_reg_2783_pp0_iter4_reg;
                select_ln393_111_reg_2783_pp0_iter6_reg <= select_ln393_111_reg_2783_pp0_iter5_reg;
                select_ln393_112_reg_2788_pp0_iter3_reg <= select_ln393_112_reg_2788;
                select_ln393_112_reg_2788_pp0_iter4_reg <= select_ln393_112_reg_2788_pp0_iter3_reg;
                select_ln393_112_reg_2788_pp0_iter5_reg <= select_ln393_112_reg_2788_pp0_iter4_reg;
                select_ln393_112_reg_2788_pp0_iter6_reg <= select_ln393_112_reg_2788_pp0_iter5_reg;
                select_ln393_113_reg_2793_pp0_iter3_reg <= select_ln393_113_reg_2793;
                select_ln393_113_reg_2793_pp0_iter4_reg <= select_ln393_113_reg_2793_pp0_iter3_reg;
                select_ln393_113_reg_2793_pp0_iter5_reg <= select_ln393_113_reg_2793_pp0_iter4_reg;
                select_ln393_114_reg_2798_pp0_iter3_reg <= select_ln393_114_reg_2798;
                select_ln393_114_reg_2798_pp0_iter4_reg <= select_ln393_114_reg_2798_pp0_iter3_reg;
                select_ln393_114_reg_2798_pp0_iter5_reg <= select_ln393_114_reg_2798_pp0_iter4_reg;
                select_ln393_114_reg_2798_pp0_iter6_reg <= select_ln393_114_reg_2798_pp0_iter5_reg;
                select_ln393_115_reg_2803_pp0_iter3_reg <= select_ln393_115_reg_2803;
                select_ln393_115_reg_2803_pp0_iter4_reg <= select_ln393_115_reg_2803_pp0_iter3_reg;
                select_ln393_115_reg_2803_pp0_iter5_reg <= select_ln393_115_reg_2803_pp0_iter4_reg;
                select_ln393_115_reg_2803_pp0_iter6_reg <= select_ln393_115_reg_2803_pp0_iter5_reg;
                select_ln399_reg_2667_pp0_iter2_reg <= select_ln399_reg_2667_pp0_iter1_reg;
                select_ln399_reg_2667_pp0_iter3_reg <= select_ln399_reg_2667_pp0_iter2_reg;
                select_ln399_reg_2667_pp0_iter4_reg <= select_ln399_reg_2667_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln392_reg_2599_pp0_iter2_reg = ap_const_lv1_0))) then
                mul_ln1352_49_reg_2893 <= mul_ln1352_49_fu_2441_p2;
                mul_ln1352_50_reg_2908 <= mul_ln1352_50_fu_2448_p2;
                mul_ln1352_51_reg_2918 <= mul_ln1352_51_fu_2455_p2;
                mul_ln1352_52_reg_2928 <= mul_ln1352_52_fu_2462_p2;
                mul_ln1352_53_reg_2933 <= mul_ln1352_53_fu_2469_p2;
                mul_ln1352_54_reg_2948 <= mul_ln1352_54_fu_2476_p2;
                mul_ln1352_55_reg_2958 <= mul_ln1352_55_fu_2483_p2;
                mul_ln1352_reg_2888 <= mul_ln1352_fu_2434_p2;
                trunc_ln700_100_reg_2953 <= trunc_ln700_100_fu_1649_p1;
                trunc_ln700_101_reg_2963 <= trunc_ln700_101_fu_1655_p1;
                trunc_ln700_95_reg_2903 <= trunc_ln700_95_fu_1611_p1;
                trunc_ln700_96_reg_2913 <= trunc_ln700_96_fu_1621_p1;
                trunc_ln700_97_reg_2923 <= trunc_ln700_97_fu_1631_p1;
                trunc_ln700_98_reg_2938 <= trunc_ln700_98_fu_1640_p1;
                trunc_ln700_99_reg_2943 <= trunc_ln700_99_fu_1643_p1;
                trunc_ln700_reg_2898 <= trunc_ln700_fu_1608_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln392_reg_2599 = ap_const_lv1_0))) then
                o_out_reg_2744 <= o_out_fu_848_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln392_reg_2599_pp0_iter4_reg = ap_const_lv1_0))) then
                outPartialArr0_0_V_5_fu_214 <= outPartialArr0_0_V_fu_1894_p2;
                outPartialArr0_1_V_5_fu_218 <= outPartialArr0_1_V_fu_2015_p2;
                outPartialArr1_V_0_3_fu_222 <= add_ln398_fu_1880_p2;
                outPartialArr1_V_1_3_fu_226 <= add_ln398_6_fu_2001_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln392_reg_2599_pp0_iter1_reg = ap_const_lv1_0))) then
                p_Result_1_i_i_reg_2818 <= vec_V_V_dout(7 downto 4);
                p_Result_2_i_i_reg_2828 <= vec_V_V_dout(11 downto 8);
                p_Result_3_i_i_reg_2838 <= vec_V_V_dout(15 downto 12);
                p_Result_78_1_i_i_reg_2823 <= vec_V_V_dout(23 downto 20);
                p_Result_78_2_i_i_reg_2833 <= vec_V_V_dout(27 downto 24);
                p_Result_78_3_i_i_reg_2843 <= vec_V_V_dout(31 downto 28);
                p_Result_78_i_i_reg_2813 <= vec_V_V_dout(19 downto 16);
                select_ln393_110_reg_2778 <= select_ln393_110_fu_910_p3;
                select_ln393_111_reg_2783 <= select_ln393_111_fu_917_p3;
                select_ln393_112_reg_2788 <= select_ln393_112_fu_930_p3;
                select_ln393_113_reg_2793 <= select_ln393_113_fu_937_p3;
                select_ln393_114_reg_2798 <= select_ln393_114_fu_944_p3;
                select_ln393_115_reg_2803 <= select_ln393_115_fu_957_p3;
                trunc_ln647_reg_2808 <= trunc_ln647_fu_964_p1;
                wpacks_0_0_V_reg_2848 <= wpacks_0_0_V_fu_1084_p2;
                wpacks_0_1_V_reg_2853 <= wpacks_0_1_V_fu_1154_p2;
                wpacks_0_2_V_reg_2858 <= wpacks_0_2_V_fu_1224_p2;
                wpacks_0_3_V_reg_2863 <= wpacks_0_3_V_fu_1294_p2;
                wpacks_1_0_V_reg_2868 <= wpacks_1_0_V_fu_1346_p2;
                wpacks_1_1_V_reg_2873 <= wpacks_1_1_V_fu_1416_p2;
                wpacks_1_2_V_reg_2878 <= wpacks_1_2_V_fu_1486_p2;
                wpacks_1_3_V_reg_2883 <= wpacks_1_3_V_fu_1556_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (reps_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                reps_read_reg_2562 <= reps_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (o_out_reg_2744_pp0_iter6_reg = ap_const_lv1_1))) then
                res_V_14_reg_3109 <= res_V_14_fu_2293_p3;
                res_V_15_reg_3114 <= res_V_15_fu_2355_p3;
                res_V_16_reg_3119 <= res_V_16_fu_2417_p3;
                res_V_reg_3104 <= res_V_fu_2231_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (o_out_reg_2744_pp0_iter5_reg = ap_const_lv1_1))) then
                ret_V_70_reg_3086 <= ret_V_70_fu_2496_p2;
                ret_V_73_reg_3092 <= ret_V_73_fu_2502_p2;
                ret_V_76_reg_3098 <= ret_V_76_fu_2508_p2;
                ret_V_reg_3080 <= ret_V_fu_2490_p2;
            end if;
        end if;
    end process;
    bound46_reg_2568(9 downto 0) <= "0000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, reps_empty_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter7)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (reps_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln1353_46_fu_736_p2 <= std_logic_vector(unsigned(ap_const_lv20_4000) + unsigned(conv_6_bias_new_V_1_q0));
    add_ln1353_47_fu_924_p2 <= std_logic_vector(unsigned(ap_const_lv20_4000) + unsigned(conv_6_bias_new_V_0_q1));
    add_ln1353_48_fu_951_p2 <= std_logic_vector(unsigned(ap_const_lv20_4000) + unsigned(conv_6_bias_new_V_1_q1));
    add_ln1353_fu_730_p2 <= std_logic_vector(unsigned(ap_const_lv20_4000) + unsigned(conv_6_bias_new_V_0_q0));
    add_ln392_5_fu_556_p2 <= std_logic_vector(unsigned(ap_const_lv47_1) + unsigned(indvar_flatten143_reg_427));
    add_ln392_fu_503_p2 <= std_logic_vector(unsigned(shl_ln392_5_fu_498_p2) + unsigned(shl_ln392_fu_493_p2));
    add_ln393_5_fu_688_p2 <= std_logic_vector(unsigned(indvar_flatten33_reg_438) + unsigned(ap_const_lv16_1));
    add_ln394_5_fu_674_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_460) + unsigned(ap_const_lv10_1));
    add_ln398_6_fu_2001_p2 <= std_logic_vector(unsigned(select_ln398_33_fu_1993_p3) + unsigned(sext_ln68_197_fu_1989_p1));
    add_ln398_fu_1880_p2 <= std_logic_vector(unsigned(select_ln398_fu_1872_p3) + unsigned(sext_ln68_193_fu_1868_p1));
    add_ln404_fu_854_p2 <= std_logic_vector(unsigned(select_ln393_109_fu_795_p3) + unsigned(zext_ln395_fu_840_p1));
    add_ln68_77_fu_1144_p2 <= std_logic_vector(signed(sext_ln68_171_fu_1136_p1) + signed(sext_ln68_172_fu_1140_p1));
    add_ln68_79_fu_1214_p2 <= std_logic_vector(signed(sext_ln68_174_fu_1206_p1) + signed(sext_ln68_175_fu_1210_p1));
    add_ln68_81_fu_1284_p2 <= std_logic_vector(signed(sext_ln68_177_fu_1276_p1) + signed(sext_ln68_178_fu_1280_p1));
    add_ln68_83_fu_1336_p2 <= std_logic_vector(signed(sext_ln68_180_fu_1328_p1) + signed(sext_ln68_181_fu_1332_p1));
    add_ln68_85_fu_1406_p2 <= std_logic_vector(signed(sext_ln68_183_fu_1398_p1) + signed(sext_ln68_184_fu_1402_p1));
    add_ln68_87_fu_1476_p2 <= std_logic_vector(signed(sext_ln68_186_fu_1468_p1) + signed(sext_ln68_187_fu_1472_p1));
    add_ln68_89_fu_1546_p2 <= std_logic_vector(signed(sext_ln68_189_fu_1538_p1) + signed(sext_ln68_190_fu_1542_p1));
    add_ln68_fu_1074_p2 <= std_logic_vector(signed(sext_ln68_fu_1066_p1) + signed(sext_ln68_169_fu_1070_p1));
    add_ln700_100_fu_2071_p2 <= std_logic_vector(unsigned(firPartialRes1_0_V_s_reg_3012) + unsigned(sext_ln68_195_fu_2062_p1));
    add_ln700_101_fu_1710_p2 <= std_logic_vector(signed(sext_ln700_77_fu_1707_p1) + signed(sext_ln215_72_fu_1704_p1));
    add_ln700_103_fu_1910_p2 <= std_logic_vector(signed(sext_ln700_81_fu_1903_p1) + signed(sext_ln700_78_fu_1900_p1));
    add_ln700_106_fu_2114_p2 <= std_logic_vector(unsigned(firPartialRes1_1_V_s_reg_3017) + unsigned(sext_ln68_199_fu_2105_p1));
    add_ln700_138_fu_1673_p2 <= std_logic_vector(unsigned(trunc_ln700_reg_2898) + unsigned(trunc_ln700_95_reg_2903));
    add_ln700_139_fu_1680_p2 <= std_logic_vector(signed(sext_ln700_74_fu_1670_p1) + signed(sext_ln700_75_fu_1677_p1));
    add_ln700_140_fu_1785_p2 <= std_logic_vector(signed(add_ln700_reg_2968) + signed(add_ln700_139_reg_2974));
    add_ln700_141_fu_1686_p2 <= std_logic_vector(unsigned(trunc_ln700_96_reg_2913) + unsigned(trunc_ln700_97_reg_2923));
    add_ln700_142_fu_1690_p2 <= std_logic_vector(unsigned(add_ln700_141_fu_1686_p2) + unsigned(add_ln700_138_fu_1673_p2));
    add_ln700_144_fu_1719_p2 <= std_logic_vector(unsigned(trunc_ln700_98_reg_2938) + unsigned(trunc_ln700_99_reg_2943));
    add_ln700_145_fu_1726_p2 <= std_logic_vector(signed(sext_ln700_79_fu_1716_p1) + signed(sext_ln700_80_fu_1723_p1));
    add_ln700_146_fu_1906_p2 <= std_logic_vector(signed(add_ln700_101_reg_2985) + signed(add_ln700_145_reg_2991));
    add_ln700_147_fu_1732_p2 <= std_logic_vector(unsigned(trunc_ln700_100_reg_2953) + unsigned(trunc_ln700_101_reg_2963));
    add_ln700_148_fu_1736_p2 <= std_logic_vector(unsigned(add_ln700_147_fu_1732_p2) + unsigned(add_ln700_144_fu_1719_p2));
    add_ln700_97_fu_1789_p2 <= std_logic_vector(signed(sext_ln700_76_fu_1782_p1) + signed(sext_ln700_73_fu_1779_p1));
    add_ln700_fu_1664_p2 <= std_logic_vector(signed(sext_ln700_fu_1661_p1) + signed(sext_ln215_67_fu_1658_p1));
    add_ln78_22_fu_1840_p2 <= std_logic_vector(unsigned(p_Result_i_i_i_i4_s_fu_1818_p4) + unsigned(zext_ln78_22_fu_1836_p1));
    add_ln78_23_fu_2053_p2 <= std_logic_vector(signed(sext_ln647_fu_2047_p1) + signed(zext_ln78_23_fu_2050_p1));
    add_ln78_24_fu_1933_p2 <= std_logic_vector(unsigned(p_Result_i_i_i_i2_3_fu_1920_p4) + unsigned(zext_ln78_24_fu_1930_p1));
    add_ln78_25_fu_1961_p2 <= std_logic_vector(unsigned(p_Result_i_i_i_i4_3_fu_1939_p4) + unsigned(zext_ln78_25_fu_1957_p1));
    add_ln78_26_fu_2096_p2 <= std_logic_vector(signed(sext_ln647_12_fu_2090_p1) + signed(zext_ln78_26_fu_2093_p1));
    add_ln78_fu_1812_p2 <= std_logic_vector(unsigned(p_Result_i_i_i_i2_s_fu_1799_p4) + unsigned(zext_ln78_fu_1809_p1));
    and_ln393_17_fu_588_p2 <= (xor_ln393_fu_576_p2 and icmp_ln395_fu_582_p2);
    and_ln393_18_fu_600_p2 <= (xor_ln393_fu_576_p2 and icmp_ln394_fu_594_p2);
    and_ln393_19_fu_809_p2 <= (or_ln393_5_reg_2651 and and_ln393_fu_755_p2);
    and_ln393_20_fu_634_p2 <= (or_ln393_5_fu_628_p2 and and_ln393_17_fu_588_p2);
    and_ln393_fu_755_p2 <= (xor_ln393_reg_2619 and icmp_ln399_fu_749_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(3);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(vec_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter2, icmp_ln392_reg_2599_pp0_iter1_reg, ap_enable_reg_pp0_iter8, o_out_reg_2744_pp0_iter7_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (o_out_reg_2744_pp0_iter7_reg = ap_const_lv1_1)) or ((vec_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln392_reg_2599_pp0_iter1_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(vec_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter2, icmp_ln392_reg_2599_pp0_iter1_reg, ap_enable_reg_pp0_iter8, o_out_reg_2744_pp0_iter7_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (o_out_reg_2744_pp0_iter7_reg = ap_const_lv1_1)) or ((vec_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln392_reg_2599_pp0_iter1_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(vec_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter2, icmp_ln392_reg_2599_pp0_iter1_reg, ap_enable_reg_pp0_iter8, o_out_reg_2744_pp0_iter7_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (o_out_reg_2744_pp0_iter7_reg = ap_const_lv1_1)) or ((vec_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln392_reg_2599_pp0_iter1_reg = ap_const_lv1_0)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, reps_empty_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (reps_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp0_stage0_iter8_assign_proc : process(out_V_V_full_n, o_out_reg_2744_pp0_iter7_reg)
    begin
                ap_block_state11_pp0_stage0_iter8 <= ((out_V_V_full_n = ap_const_logic_0) and (o_out_reg_2744_pp0_iter7_reg = ap_const_lv1_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter2_assign_proc : process(vec_V_V_empty_n, icmp_ln392_reg_2599_pp0_iter1_reg)
    begin
                ap_block_state5_pp0_stage0_iter2 <= ((vec_V_V_empty_n = ap_const_logic_0) and (icmp_ln392_reg_2599_pp0_iter1_reg = ap_const_lv1_0));
    end process;

        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter1_state4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_firPartialRes0_V_0_3_5_assign_proc : process(ap_block_pp0_stage0, icmp_ln392_reg_2599_pp0_iter5_reg, ap_enable_reg_pp0_iter6, firPartialRes0_V_0_3_fu_198, select_ln398_31_fu_2076_p3)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln392_reg_2599_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_firPartialRes0_V_0_3_5 <= select_ln398_31_fu_2076_p3;
        else 
            ap_sig_allocacmp_firPartialRes0_V_0_3_5 <= firPartialRes0_V_0_3_fu_198;
        end if; 
    end process;


    ap_sig_allocacmp_firPartialRes0_V_1_3_5_assign_proc : process(ap_block_pp0_stage0, icmp_ln392_reg_2599_pp0_iter5_reg, ap_enable_reg_pp0_iter6, firPartialRes0_V_1_3_fu_202, select_ln398_35_fu_2119_p3)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln392_reg_2599_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_firPartialRes0_V_1_3_5 <= select_ln398_35_fu_2119_p3;
        else 
            ap_sig_allocacmp_firPartialRes0_V_1_3_5 <= firPartialRes0_V_1_3_fu_202;
        end if; 
    end process;


    ap_sig_allocacmp_firPartialRes1_0_V_s_assign_proc : process(ap_block_pp0_stage0, icmp_ln392_reg_2599_pp0_iter5_reg, ap_enable_reg_pp0_iter6, firPartialRes1_0_V_5_fu_206, firPartialRes1_0_V_fu_2083_p3)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln392_reg_2599_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_firPartialRes1_0_V_s <= firPartialRes1_0_V_fu_2083_p3;
        else 
            ap_sig_allocacmp_firPartialRes1_0_V_s <= firPartialRes1_0_V_5_fu_206;
        end if; 
    end process;


    ap_sig_allocacmp_firPartialRes1_1_V_s_assign_proc : process(ap_block_pp0_stage0, icmp_ln392_reg_2599_pp0_iter5_reg, ap_enable_reg_pp0_iter6, firPartialRes1_1_V_5_fu_210, firPartialRes1_1_V_fu_2126_p3)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln392_reg_2599_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_firPartialRes1_1_V_s <= firPartialRes1_1_V_fu_2126_p3;
        else 
            ap_sig_allocacmp_firPartialRes1_1_V_s <= firPartialRes1_1_V_5_fu_210;
        end if; 
    end process;

    bound46_fu_533_p2 <= std_logic_vector(unsigned(p_shl230_fu_529_p1) + unsigned(p_shl_fu_517_p1));
    conv_6_bias_new_V_0_address0 <= zext_ln458_fu_543_p1(5 - 1 downto 0);
    conv_6_bias_new_V_0_address1 <= zext_ln458_5_fu_802_p1(5 - 1 downto 0);

    conv_6_bias_new_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_6_bias_new_V_0_ce0 <= ap_const_logic_1;
        else 
            conv_6_bias_new_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_6_bias_new_V_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_6_bias_new_V_0_ce1 <= ap_const_logic_1;
        else 
            conv_6_bias_new_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_6_bias_new_V_1_address0 <= zext_ln458_fu_543_p1(5 - 1 downto 0);
    conv_6_bias_new_V_1_address1 <= zext_ln458_5_fu_802_p1(5 - 1 downto 0);

    conv_6_bias_new_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_6_bias_new_V_1_ce0 <= ap_const_logic_1;
        else 
            conv_6_bias_new_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_6_bias_new_V_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_6_bias_new_V_1_ce1 <= ap_const_logic_1;
        else 
            conv_6_bias_new_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_6_inc_new_V_0_address0 <= zext_ln458_fu_543_p1(5 - 1 downto 0);
    conv_6_inc_new_V_0_address1 <= zext_ln458_5_fu_802_p1(5 - 1 downto 0);

    conv_6_inc_new_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_6_inc_new_V_0_ce0 <= ap_const_logic_1;
        else 
            conv_6_inc_new_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_6_inc_new_V_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_6_inc_new_V_0_ce1 <= ap_const_logic_1;
        else 
            conv_6_inc_new_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_6_inc_new_V_1_address0 <= zext_ln458_fu_543_p1(5 - 1 downto 0);
    conv_6_inc_new_V_1_address1 <= zext_ln458_5_fu_802_p1(5 - 1 downto 0);

    conv_6_inc_new_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_6_inc_new_V_1_ce0 <= ap_const_logic_1;
        else 
            conv_6_inc_new_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_6_inc_new_V_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_6_inc_new_V_1_ce1 <= ap_const_logic_1;
        else 
            conv_6_inc_new_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_6_w_new_V_0_0_address0 <= zext_ln404_8_fu_864_p1(11 - 1 downto 0);

    conv_6_w_new_V_0_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_6_w_new_V_0_0_ce0 <= ap_const_logic_1;
        else 
            conv_6_w_new_V_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_6_w_new_V_0_1_address0 <= zext_ln404_8_fu_864_p1(11 - 1 downto 0);

    conv_6_w_new_V_0_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_6_w_new_V_0_1_ce0 <= ap_const_logic_1;
        else 
            conv_6_w_new_V_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_6_w_new_V_0_2_address0 <= zext_ln404_8_fu_864_p1(11 - 1 downto 0);

    conv_6_w_new_V_0_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_6_w_new_V_0_2_ce0 <= ap_const_logic_1;
        else 
            conv_6_w_new_V_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_6_w_new_V_1_0_address0 <= zext_ln404_8_fu_864_p1(11 - 1 downto 0);

    conv_6_w_new_V_1_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_6_w_new_V_1_0_ce0 <= ap_const_logic_1;
        else 
            conv_6_w_new_V_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_6_w_new_V_1_1_address0 <= zext_ln404_8_fu_864_p1(11 - 1 downto 0);

    conv_6_w_new_V_1_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_6_w_new_V_1_1_ce0 <= ap_const_logic_1;
        else 
            conv_6_w_new_V_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_6_w_new_V_1_2_address0 <= zext_ln404_8_fu_864_p1(11 - 1 downto 0);

    conv_6_w_new_V_1_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_6_w_new_V_1_2_ce0 <= ap_const_logic_1;
        else 
            conv_6_w_new_V_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    firPartialRes0_0_V_5_fu_2066_p2 <= std_logic_vector(unsigned(firPartialRes0_V_0_3_5_reg_3002) + unsigned(firPartialRes0_0_V_fu_2059_p1));
        firPartialRes0_0_V_fu_2059_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln78_22_reg_3030),18));

    firPartialRes0_1_V_5_fu_2109_p2 <= std_logic_vector(unsigned(firPartialRes0_V_1_3_5_reg_3007) + unsigned(firPartialRes0_1_V_fu_2102_p1));
        firPartialRes0_1_V_fu_2102_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln78_25_reg_3055),18));

    firPartialRes1_0_V_fu_2083_p3 <= 
        sext_ln68_195_fu_2062_p1 when (o_clear_reg_3022(0) = '1') else 
        add_ln700_100_fu_2071_p2;
    firPartialRes1_1_V_fu_2126_p3 <= 
        sext_ln68_199_fu_2105_p1 when (o_clear_reg_3022(0) = '1') else 
        add_ln700_106_fu_2114_p2;
    icmp_ln392_fu_551_p2 <= "1" when (indvar_flatten143_reg_427 = bound46_reg_2568) else "0";
    icmp_ln393_fu_562_p2 <= "1" when (indvar_flatten33_reg_438 = ap_const_lv16_4200) else "0";
    icmp_ln394_fu_594_p2 <= "1" when (indvar_flatten_reg_460 = ap_const_lv10_210) else "0";
    icmp_ln395_fu_582_p2 <= "1" when (infoldIdx_0_i_reg_471 = ap_const_lv6_30) else "0";
    icmp_ln399_4_fu_843_p2 <= "1" when (select_ln399_reg_2667 = ap_const_lv6_2F) else "0";
    icmp_ln399_8_fu_820_p2 <= "0" when (w_fu_814_p2 = ap_const_lv5_0) else "1";
    icmp_ln399_fu_749_p2 <= "0" when (w_0_i_reg_482 = ap_const_lv5_0) else "1";
    icmp_ln895_52_fu_2207_p2 <= "0" when (tmp_70_fu_2197_p4 = ap_const_lv10_0) else "1";
    icmp_ln895_53_fu_2248_p2 <= "1" when (signed(ret_V_80_fu_2242_p2) > signed(ap_const_lv30_0)) else "0";
    icmp_ln895_54_fu_2269_p2 <= "0" when (tmp_71_fu_2259_p4 = ap_const_lv10_0) else "1";
    icmp_ln895_55_fu_2310_p2 <= "1" when (signed(ret_V_81_fu_2304_p2) > signed(ap_const_lv30_0)) else "0";
    icmp_ln895_56_fu_2331_p2 <= "0" when (tmp_72_fu_2321_p4 = ap_const_lv10_0) else "1";
    icmp_ln895_57_fu_2372_p2 <= "1" when (signed(ret_V_82_fu_2366_p2) > signed(ap_const_lv30_0)) else "0";
    icmp_ln895_58_fu_2393_p2 <= "0" when (tmp_73_fu_2383_p4 = ap_const_lv10_0) else "1";
    icmp_ln895_fu_2186_p2 <= "1" when (signed(ret_V_79_fu_2180_p2) > signed(ap_const_lv30_0)) else "0";
    infoldIdx_fu_668_p2 <= std_logic_vector(unsigned(select_ln399_fu_660_p3) + unsigned(ap_const_lv6_1));
    ipack_0_V_fu_1562_p4 <= ((p_Result_78_i_i_reg_2813 & ap_const_lv7_0) & trunc_ln647_reg_2808);
    ipack_1_V_fu_1570_p4 <= ((p_Result_78_1_i_i_reg_2823 & ap_const_lv7_0) & p_Result_1_i_i_reg_2818);
    ipack_2_V_fu_1578_p4 <= ((p_Result_78_2_i_i_reg_2833 & ap_const_lv7_0) & p_Result_2_i_i_reg_2828);
    ipack_3_V_fu_1586_p4 <= ((p_Result_78_3_i_i_reg_2843 & ap_const_lv7_0) & p_Result_3_i_i_reg_2838);
    mul_ln1352_49_fu_2441_p1 <= zext_ln215_33_fu_1604_p1(15 - 1 downto 0);
    mul_ln1352_50_fu_2448_p1 <= zext_ln215_34_fu_1617_p1(15 - 1 downto 0);
    mul_ln1352_51_fu_2455_p1 <= zext_ln215_35_fu_1627_p1(15 - 1 downto 0);
    mul_ln1352_52_fu_2462_p1 <= zext_ln215_fu_1597_p1(15 - 1 downto 0);
    mul_ln1352_53_fu_2469_p1 <= zext_ln215_33_fu_1604_p1(15 - 1 downto 0);
    mul_ln1352_54_fu_2476_p1 <= zext_ln215_34_fu_1617_p1(15 - 1 downto 0);
    mul_ln1352_55_fu_2483_p1 <= zext_ln215_35_fu_1627_p1(15 - 1 downto 0);
    mul_ln1352_fu_2434_p1 <= zext_ln215_fu_1597_p1(15 - 1 downto 0);
    o_clear_fu_1774_p2 <= "1" when (select_ln399_reg_2667_pp0_iter4_reg = ap_const_lv6_0) else "0";
    o_out_fu_848_p2 <= (select_ln399_5_fu_826_p3 and icmp_ln399_4_fu_843_p2);
    or_ln393_5_fu_628_p2 <= (xor_ln393_5_fu_622_p2 or icmp_ln393_fu_562_p2);
    or_ln393_fu_612_p2 <= (icmp_ln393_fu_562_p2 or and_ln393_18_fu_600_p2);
    or_ln399_5_fu_654_p2 <= (or_ln399_fu_648_p2 or icmp_ln393_fu_562_p2);
    or_ln399_fu_648_p2 <= (and_ln393_20_fu_634_p2 or and_ln393_18_fu_600_p2);
    outPartialArr0_0_V_fu_1894_p2 <= std_logic_vector(unsigned(select_ln398_30_fu_1886_p3) + unsigned(sext_ln68_192_fu_1864_p1));
    outPartialArr0_1_V_fu_2015_p2 <= std_logic_vector(unsigned(select_ln398_34_fu_2007_p3) + unsigned(sext_ln68_196_fu_1985_p1));

    out_V_V_blk_n_assign_proc : process(out_V_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter8, o_out_reg_2744_pp0_iter7_reg)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (o_out_reg_2744_pp0_iter7_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            out_V_V_blk_n <= out_V_V_full_n;
        else 
            out_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_V_V_din <= (((res_V_16_reg_3119 & res_V_14_reg_3109) & res_V_15_reg_3114) & res_V_reg_3104);

    out_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter8, o_out_reg_2744_pp0_iter7_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (o_out_reg_2744_pp0_iter7_reg = ap_const_lv1_1))) then 
            out_V_V_write <= ap_const_logic_1;
        else 
            out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_1_i25_i_fu_1352_p4 <= conv_6_w_new_V_1_2_q0(7 downto 4);
    p_Result_1_i8_i_fu_1090_p4 <= conv_6_w_new_V_0_2_q0(7 downto 4);
    p_Result_2_i35_i_fu_1422_p4 <= conv_6_w_new_V_1_2_q0(11 downto 8);
    p_Result_2_i9_i_fu_1160_p4 <= conv_6_w_new_V_0_2_q0(11 downto 8);
    p_Result_3_i10_i_fu_1230_p4 <= conv_6_w_new_V_0_2_q0(15 downto 12);
    p_Result_3_i45_i_fu_1492_p4 <= conv_6_w_new_V_1_2_q0(15 downto 12);
    p_Result_i_i_i_i2_3_fu_1920_p4 <= add_ln700_146_fu_1906_p2(21 downto 11);
    p_Result_i_i_i_i2_s_fu_1799_p4 <= add_ln700_140_fu_1785_p2(21 downto 11);
    p_Result_i_i_i_i4_3_fu_1939_p4 <= add_ln700_146_fu_1906_p2(32 downto 22);
    p_Result_i_i_i_i4_s_fu_1818_p4 <= add_ln700_140_fu_1785_p2(32 downto 22);
    p_shl230_fu_529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_91_fu_521_p3),47));
    p_shl_fu_517_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_90_fu_509_p3),47));
    peIdx_fu_606_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(select_ln393_fu_568_p3));

    reps_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, reps_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            reps_blk_n <= reps_empty_n;
        else 
            reps_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    reps_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, reps_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (reps_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            reps_read <= ap_const_logic_1;
        else 
            reps_read <= ap_const_logic_0;
        end if; 
    end process;

    res_V_14_fu_2293_p3 <= 
        select_ln192_14_fu_2285_p3 when (icmp_ln895_53_fu_2248_p2(0) = '1') else 
        ap_const_lv4_0;
    res_V_15_fu_2355_p3 <= 
        select_ln192_15_fu_2347_p3 when (icmp_ln895_55_fu_2310_p2(0) = '1') else 
        ap_const_lv4_0;
    res_V_16_fu_2417_p3 <= 
        select_ln192_16_fu_2409_p3 when (icmp_ln895_57_fu_2372_p2(0) = '1') else 
        ap_const_lv4_0;
    res_V_fu_2231_p3 <= 
        select_ln192_fu_2223_p3 when (icmp_ln895_fu_2186_p2(0) = '1') else 
        ap_const_lv4_0;
    ret_V_69_fu_2192_p2 <= std_logic_vector(signed(ret_V_reg_3080) + signed(sext_ln393_16_fu_2168_p1));
    ret_V_70_fu_2496_p0 <= zext_ln393_fu_2041_p1(11 - 1 downto 0);
    ret_V_72_fu_2254_p2 <= std_logic_vector(signed(ret_V_70_reg_3086) + signed(sext_ln393_16_fu_2168_p1));
    ret_V_73_fu_2502_p0 <= zext_ln393_13_fu_2044_p1(11 - 1 downto 0);
    ret_V_75_fu_2316_p2 <= std_logic_vector(signed(ret_V_73_reg_3092) + signed(sext_ln393_18_fu_2174_p1));
    ret_V_76_fu_2508_p0 <= zext_ln393_13_fu_2044_p1(11 - 1 downto 0);
    ret_V_78_fu_2378_p2 <= std_logic_vector(signed(ret_V_76_reg_3098) + signed(sext_ln393_18_fu_2174_p1));
    ret_V_79_fu_2180_p2 <= std_logic_vector(signed(sext_ln393_fu_2165_p1) + signed(sext_ln1352_fu_2177_p1));
    ret_V_80_fu_2242_p2 <= std_logic_vector(signed(sext_ln393_fu_2165_p1) + signed(sext_ln1352_12_fu_2239_p1));
    ret_V_81_fu_2304_p2 <= std_logic_vector(signed(sext_ln393_17_fu_2171_p1) + signed(sext_ln1352_13_fu_2301_p1));
    ret_V_82_fu_2366_p2 <= std_logic_vector(signed(sext_ln393_17_fu_2171_p1) + signed(sext_ln1352_14_fu_2363_p1));
    ret_V_fu_2490_p0 <= zext_ln393_fu_2041_p1(11 - 1 downto 0);
    select_ln192_14_fu_2285_p3 <= 
        ap_const_lv4_F when (icmp_ln895_54_fu_2269_p2(0) = '1') else 
        trunc_ln214_s_fu_2275_p4;
    select_ln192_15_fu_2347_p3 <= 
        ap_const_lv4_F when (icmp_ln895_56_fu_2331_p2(0) = '1') else 
        trunc_ln214_2_fu_2337_p4;
    select_ln192_16_fu_2409_p3 <= 
        ap_const_lv4_F when (icmp_ln895_58_fu_2393_p2(0) = '1') else 
        trunc_ln214_3_fu_2399_p4;
    select_ln192_fu_2223_p3 <= 
        ap_const_lv4_F when (icmp_ln895_52_fu_2207_p2(0) = '1') else 
        trunc_ln_fu_2213_p4;
    select_ln393_101_fu_742_p3 <= 
        ap_const_lv12_0 when (icmp_ln393_reg_2608(0) = '1') else 
        sub_ln404_fu_724_p2;
    select_ln393_102_fu_874_p3 <= 
        ap_const_lv11_2E8 when (icmp_ln393_reg_2608_pp0_iter1_reg(0) = '1') else 
        conv_6_inc_new_V_0_l_reg_2689;
    select_ln393_103_fu_880_p3 <= 
        ap_const_lv20_2546B when (icmp_ln393_reg_2608_pp0_iter1_reg(0) = '1') else 
        conv_6_bias_new_V_0_1_reg_2694;
    select_ln393_104_fu_886_p3 <= 
        ap_const_lv20_2946B when (icmp_ln393_reg_2608_pp0_iter1_reg(0) = '1') else 
        add_ln1353_reg_2709;
    select_ln393_105_fu_892_p3 <= 
        ap_const_lv11_2DB when (icmp_ln393_reg_2608_pp0_iter1_reg(0) = '1') else 
        conv_6_inc_new_V_1_l_reg_2699;
    select_ln393_106_fu_898_p3 <= 
        ap_const_lv20_42A93 when (icmp_ln393_reg_2608_pp0_iter1_reg(0) = '1') else 
        conv_6_bias_new_V_1_1_reg_2704;
    select_ln393_107_fu_904_p3 <= 
        ap_const_lv20_46A93 when (icmp_ln393_reg_2608_pp0_iter1_reg(0) = '1') else 
        add_ln1353_46_reg_2714;
    select_ln393_108_fu_760_p3 <= 
        ap_const_lv5_0 when (or_ln393_reg_2640(0) = '1') else 
        w_0_i_reg_482;
    select_ln393_109_fu_795_p3 <= 
        sub_ln404_5_fu_789_p2 when (and_ln393_18_reg_2624(0) = '1') else 
        select_ln393_101_fu_742_p3;
    select_ln393_110_fu_910_p3 <= 
        conv_6_inc_new_V_0_q1 when (and_ln393_18_reg_2624_pp0_iter1_reg(0) = '1') else 
        select_ln393_102_fu_874_p3;
    select_ln393_111_fu_917_p3 <= 
        conv_6_bias_new_V_0_q1 when (and_ln393_18_reg_2624_pp0_iter1_reg(0) = '1') else 
        select_ln393_103_fu_880_p3;
    select_ln393_112_fu_930_p3 <= 
        add_ln1353_47_fu_924_p2 when (and_ln393_18_reg_2624_pp0_iter1_reg(0) = '1') else 
        select_ln393_104_fu_886_p3;
    select_ln393_113_fu_937_p3 <= 
        conv_6_inc_new_V_1_q1 when (and_ln393_18_reg_2624_pp0_iter1_reg(0) = '1') else 
        select_ln393_105_fu_892_p3;
    select_ln393_114_fu_944_p3 <= 
        conv_6_bias_new_V_1_q1 when (and_ln393_18_reg_2624_pp0_iter1_reg(0) = '1') else 
        select_ln393_106_fu_898_p3;
    select_ln393_115_fu_957_p3 <= 
        add_ln1353_48_fu_951_p2 when (and_ln393_18_reg_2624_pp0_iter1_reg(0) = '1') else 
        select_ln393_107_fu_904_p3;
    select_ln393_116_fu_640_p3 <= 
        peIdx_fu_606_p2 when (and_ln393_18_fu_600_p2(0) = '1') else 
        select_ln393_fu_568_p3;
    select_ln393_117_fu_694_p3 <= 
        ap_const_lv16_1 when (icmp_ln393_fu_562_p2(0) = '1') else 
        add_ln393_5_fu_688_p2;
    select_ln393_fu_568_p3 <= 
        ap_const_lv6_0 when (icmp_ln393_fu_562_p2(0) = '1') else 
        peIdx_0_i_reg_449;
    select_ln394_5_fu_680_p3 <= 
        ap_const_lv10_1 when (or_ln393_fu_612_p2(0) = '1') else 
        add_ln394_5_fu_674_p2;
    select_ln394_fu_833_p3 <= 
        w_fu_814_p2 when (and_ln393_20_reg_2656(0) = '1') else 
        select_ln393_108_fu_760_p3;
    select_ln398_30_fu_1886_p3 <= 
        ap_sig_allocacmp_firPartialRes0_V_0_3_5 when (o_clear_fu_1774_p2(0) = '1') else 
        outPartialArr0_0_V_5_fu_214;
    select_ln398_31_fu_2076_p3 <= 
        firPartialRes0_0_V_fu_2059_p1 when (o_clear_reg_3022(0) = '1') else 
        firPartialRes0_0_V_5_fu_2066_p2;
    select_ln398_33_fu_1993_p3 <= 
        ap_sig_allocacmp_firPartialRes1_1_V_s when (o_clear_fu_1774_p2(0) = '1') else 
        outPartialArr1_V_1_3_fu_226;
    select_ln398_34_fu_2007_p3 <= 
        ap_sig_allocacmp_firPartialRes0_V_1_3_5 when (o_clear_fu_1774_p2(0) = '1') else 
        outPartialArr0_1_V_5_fu_218;
    select_ln398_35_fu_2119_p3 <= 
        firPartialRes0_1_V_fu_2102_p1 when (o_clear_reg_3022(0) = '1') else 
        firPartialRes0_1_V_5_fu_2109_p2;
    select_ln398_fu_1872_p3 <= 
        ap_sig_allocacmp_firPartialRes1_0_V_s when (o_clear_fu_1774_p2(0) = '1') else 
        outPartialArr1_V_0_3_fu_222;
    select_ln399_5_fu_826_p3 <= 
        icmp_ln399_8_fu_820_p2 when (and_ln393_20_reg_2656(0) = '1') else 
        and_ln393_19_fu_809_p2;
    select_ln399_fu_660_p3 <= 
        ap_const_lv6_0 when (or_ln399_5_fu_654_p2(0) = '1') else 
        infoldIdx_0_i_reg_471;
        sext_ln1352_12_fu_2239_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_70_reg_3086),30));

        sext_ln1352_13_fu_2301_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_73_reg_3092),30));

        sext_ln1352_14_fu_2363_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_76_reg_3098),30));

        sext_ln1352_fu_2177_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_reg_3080),30));

        sext_ln215_67_fu_1658_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_reg_2888),42));

        sext_ln215_72_fu_1704_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_52_reg_2928),42));

        sext_ln393_16_fu_2168_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln393_112_reg_2788_pp0_iter6_reg),29));

        sext_ln393_17_fu_2171_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln393_114_reg_2798_pp0_iter6_reg),30));

        sext_ln393_18_fu_2174_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln393_115_reg_2803_pp0_iter6_reg),29));

        sext_ln393_fu_2165_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln393_111_reg_2783_pp0_iter6_reg),30));

        sext_ln404_fu_860_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln404_fu_854_p2),32));

        sext_ln647_12_fu_2090_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_reg_3060),11));

        sext_ln647_fu_2047_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_reg_3035),11));

        sext_ln68_169_fu_1070_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln647_21_fu_1038_p1),16));

        sext_ln68_170_fu_1080_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_fu_1074_p2),26));

        sext_ln68_171_fu_1136_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_70_fu_1128_p3),16));

        sext_ln68_172_fu_1140_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_1_i8_i_fu_1090_p4),16));

        sext_ln68_173_fu_1150_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_77_fu_1144_p2),26));

        sext_ln68_174_fu_1206_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_72_fu_1198_p3),16));

        sext_ln68_175_fu_1210_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_i9_i_fu_1160_p4),16));

        sext_ln68_176_fu_1220_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_79_fu_1214_p2),26));

        sext_ln68_177_fu_1276_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_74_fu_1268_p3),16));

        sext_ln68_178_fu_1280_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_3_i10_i_fu_1230_p4),16));

        sext_ln68_179_fu_1290_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_81_fu_1284_p2),26));

        sext_ln68_180_fu_1328_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_76_fu_1320_p3),16));

        sext_ln68_181_fu_1332_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln647_22_fu_1300_p1),16));

        sext_ln68_182_fu_1342_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_83_fu_1336_p2),26));

        sext_ln68_183_fu_1398_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_78_fu_1390_p3),16));

        sext_ln68_184_fu_1402_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_1_i25_i_fu_1352_p4),16));

        sext_ln68_185_fu_1412_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_85_fu_1406_p2),26));

        sext_ln68_186_fu_1468_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_80_fu_1460_p3),16));

        sext_ln68_187_fu_1472_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_i35_i_fu_1422_p4),16));

        sext_ln68_188_fu_1482_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_87_fu_1476_p2),26));

        sext_ln68_189_fu_1538_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_82_fu_1530_p3),16));

        sext_ln68_190_fu_1542_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_3_i45_i_fu_1492_p4),16));

        sext_ln68_191_fu_1552_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_89_fu_1546_p2),26));

        sext_ln68_192_fu_1864_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln647_23_fu_1795_p1),18));

        sext_ln68_193_fu_1868_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln78_fu_1812_p2),18));

        sext_ln68_195_fu_2062_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln78_23_fu_2053_p2),18));

        sext_ln68_196_fu_1985_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln647_24_fu_1916_p1),18));

        sext_ln68_197_fu_1989_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln78_24_fu_1933_p2),18));

        sext_ln68_199_fu_2105_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln78_26_fu_2096_p2),18));

        sext_ln68_fu_1066_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_s_fu_1058_p3),16));

        sext_ln700_73_fu_1779_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln700_reg_2968),43));

        sext_ln700_74_fu_1670_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_50_reg_2908),42));

        sext_ln700_75_fu_1677_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_51_reg_2918),42));

        sext_ln700_76_fu_1782_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln700_139_reg_2974),43));

        sext_ln700_77_fu_1707_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_53_reg_2933),42));

        sext_ln700_78_fu_1900_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln700_101_reg_2985),43));

        sext_ln700_79_fu_1716_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_54_reg_2948),42));

        sext_ln700_80_fu_1723_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_55_reg_2958),42));

        sext_ln700_81_fu_1903_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln700_145_reg_2991),43));

        sext_ln700_fu_1661_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_49_reg_2893),42));

    shl_ln1_fu_1046_p3 <= (trunc_ln68_fu_1042_p1 & ap_const_lv22_0);
    shl_ln392_5_fu_498_p2 <= std_logic_vector(shift_left(unsigned(reps_read_reg_2562),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln392_fu_493_p2 <= std_logic_vector(shift_left(unsigned(reps_read_reg_2562),to_integer(unsigned('0' & ap_const_lv32_3(31-1 downto 0)))));
    shl_ln404_4_fu_713_p3 <= (trunc_ln404_reg_2573 & ap_const_lv4_0);
    shl_ln404_4_mid1_fu_778_p3 <= (trunc_ln404_5_reg_2645 & ap_const_lv4_0);
    shl_ln404_mid1_fu_767_p3 <= (trunc_ln404_5_reg_2645 & ap_const_lv6_0);
    shl_ln68_69_fu_1110_p3 <= (tmp_92_fu_1100_p4 & ap_const_lv22_0);
    shl_ln68_70_fu_1128_p3 <= (tmp_93_fu_1118_p4 & ap_const_lv11_0);
    shl_ln68_71_fu_1180_p3 <= (tmp_94_fu_1170_p4 & ap_const_lv22_0);
    shl_ln68_72_fu_1198_p3 <= (tmp_95_fu_1188_p4 & ap_const_lv11_0);
    shl_ln68_73_fu_1250_p3 <= (tmp_96_fu_1240_p4 & ap_const_lv22_0);
    shl_ln68_74_fu_1268_p3 <= (tmp_97_fu_1258_p4 & ap_const_lv11_0);
    shl_ln68_75_fu_1308_p3 <= (trunc_ln68_12_fu_1304_p1 & ap_const_lv22_0);
    shl_ln68_76_fu_1320_p3 <= (trunc_ln68_13_fu_1316_p1 & ap_const_lv11_0);
    shl_ln68_77_fu_1372_p3 <= (tmp_98_fu_1362_p4 & ap_const_lv22_0);
    shl_ln68_78_fu_1390_p3 <= (tmp_99_fu_1380_p4 & ap_const_lv11_0);
    shl_ln68_79_fu_1442_p3 <= (tmp_100_fu_1432_p4 & ap_const_lv22_0);
    shl_ln68_80_fu_1460_p3 <= (tmp_101_fu_1450_p4 & ap_const_lv11_0);
    shl_ln68_81_fu_1512_p3 <= (tmp_102_fu_1502_p4 & ap_const_lv22_0);
    shl_ln68_82_fu_1530_p3 <= (tmp_103_fu_1520_p4 & ap_const_lv11_0);
    shl_ln68_s_fu_1058_p3 <= (trunc_ln68_11_fu_1054_p1 & ap_const_lv11_0);
    shl_ln_fu_702_p3 <= (trunc_ln404_reg_2573 & ap_const_lv6_0);
    sub_ln404_5_fu_789_p2 <= std_logic_vector(unsigned(zext_ln404_13_fu_774_p1) - unsigned(zext_ln404_14_fu_785_p1));
    sub_ln404_fu_724_p2 <= std_logic_vector(unsigned(zext_ln404_fu_709_p1) - unsigned(zext_ln404_7_fu_720_p1));
    tmp_100_fu_1432_p4 <= conv_6_w_new_V_1_0_q0(11 downto 8);
    tmp_101_fu_1450_p4 <= conv_6_w_new_V_1_1_q0(11 downto 8);
    tmp_102_fu_1502_p4 <= conv_6_w_new_V_1_0_q0(15 downto 12);
    tmp_103_fu_1520_p4 <= conv_6_w_new_V_1_1_q0(15 downto 12);
    tmp_65_fu_1828_p3 <= add_ln700_140_fu_1785_p2(21 downto 21);
    tmp_68_fu_1949_p3 <= add_ln700_146_fu_1906_p2(21 downto 21);
    tmp_70_fu_2197_p4 <= ret_V_69_fu_2192_p2(28 downto 19);
    tmp_71_fu_2259_p4 <= ret_V_72_fu_2254_p2(28 downto 19);
    tmp_72_fu_2321_p4 <= ret_V_75_fu_2316_p2(28 downto 19);
    tmp_73_fu_2383_p4 <= ret_V_78_fu_2378_p2(28 downto 19);
    tmp_90_fu_509_p3 <= (add_ln392_fu_503_p2 & ap_const_lv14_0);
    tmp_91_fu_521_p3 <= (add_ln392_fu_503_p2 & ap_const_lv9_0);
    tmp_92_fu_1100_p4 <= conv_6_w_new_V_0_0_q0(7 downto 4);
    tmp_93_fu_1118_p4 <= conv_6_w_new_V_0_1_q0(7 downto 4);
    tmp_94_fu_1170_p4 <= conv_6_w_new_V_0_0_q0(11 downto 8);
    tmp_95_fu_1188_p4 <= conv_6_w_new_V_0_1_q0(11 downto 8);
    tmp_96_fu_1240_p4 <= conv_6_w_new_V_0_0_q0(15 downto 12);
    tmp_97_fu_1258_p4 <= conv_6_w_new_V_0_1_q0(15 downto 12);
    tmp_98_fu_1362_p4 <= conv_6_w_new_V_1_0_q0(7 downto 4);
    tmp_99_fu_1380_p4 <= conv_6_w_new_V_1_1_q0(7 downto 4);
    trunc_ln214_2_fu_2337_p4 <= ret_V_75_fu_2316_p2(18 downto 15);
    trunc_ln214_3_fu_2399_p4 <= ret_V_78_fu_2378_p2(18 downto 15);
    trunc_ln214_s_fu_2275_p4 <= ret_V_72_fu_2254_p2(18 downto 15);
    trunc_ln404_5_fu_618_p1 <= peIdx_fu_606_p2(5 - 1 downto 0);
    trunc_ln404_fu_539_p1 <= peIdx_0_i_reg_449(5 - 1 downto 0);
    trunc_ln647_21_fu_1038_p1 <= conv_6_w_new_V_0_2_q0(4 - 1 downto 0);
    trunc_ln647_22_fu_1300_p1 <= conv_6_w_new_V_1_2_q0(4 - 1 downto 0);
    trunc_ln647_23_fu_1795_p1 <= add_ln700_140_fu_1785_p2(11 - 1 downto 0);
    trunc_ln647_24_fu_1916_p1 <= add_ln700_146_fu_1906_p2(11 - 1 downto 0);
    trunc_ln647_fu_964_p1 <= vec_V_V_dout(4 - 1 downto 0);
    trunc_ln68_11_fu_1054_p1 <= conv_6_w_new_V_0_1_q0(4 - 1 downto 0);
    trunc_ln68_12_fu_1304_p1 <= conv_6_w_new_V_1_0_q0(4 - 1 downto 0);
    trunc_ln68_13_fu_1316_p1 <= conv_6_w_new_V_1_1_q0(4 - 1 downto 0);
    trunc_ln68_fu_1042_p1 <= conv_6_w_new_V_0_0_q0(4 - 1 downto 0);
    trunc_ln700_100_fu_1649_p1 <= mul_ln1352_54_fu_2476_p2(21 - 1 downto 0);
    trunc_ln700_101_fu_1655_p1 <= mul_ln1352_55_fu_2483_p2(21 - 1 downto 0);
    trunc_ln700_95_fu_1611_p1 <= mul_ln1352_49_fu_2441_p2(21 - 1 downto 0);
    trunc_ln700_96_fu_1621_p1 <= mul_ln1352_50_fu_2448_p2(21 - 1 downto 0);
    trunc_ln700_97_fu_1631_p1 <= mul_ln1352_51_fu_2455_p2(21 - 1 downto 0);
    trunc_ln700_98_fu_1640_p1 <= mul_ln1352_52_fu_2462_p2(21 - 1 downto 0);
    trunc_ln700_99_fu_1643_p1 <= mul_ln1352_53_fu_2469_p2(21 - 1 downto 0);
    trunc_ln700_fu_1608_p1 <= mul_ln1352_fu_2434_p2(21 - 1 downto 0);
    trunc_ln_fu_2213_p4 <= ret_V_69_fu_2192_p2(18 downto 15);

    vec_V_V_blk_n_assign_proc : process(vec_V_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, icmp_ln392_reg_2599_pp0_iter1_reg)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln392_reg_2599_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            vec_V_V_blk_n <= vec_V_V_empty_n;
        else 
            vec_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    vec_V_V_read_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln392_reg_2599_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln392_reg_2599_pp0_iter1_reg = ap_const_lv1_0))) then 
            vec_V_V_read <= ap_const_logic_1;
        else 
            vec_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    w_fu_814_p2 <= std_logic_vector(unsigned(ap_const_lv5_2) + unsigned(select_ln393_108_fu_760_p3));
    wpacks_0_0_V_fu_1084_p2 <= std_logic_vector(unsigned(shl_ln1_fu_1046_p3) + unsigned(sext_ln68_170_fu_1080_p1));
    wpacks_0_1_V_fu_1154_p2 <= std_logic_vector(unsigned(shl_ln68_69_fu_1110_p3) + unsigned(sext_ln68_173_fu_1150_p1));
    wpacks_0_2_V_fu_1224_p2 <= std_logic_vector(unsigned(shl_ln68_71_fu_1180_p3) + unsigned(sext_ln68_176_fu_1220_p1));
    wpacks_0_3_V_fu_1294_p2 <= std_logic_vector(unsigned(shl_ln68_73_fu_1250_p3) + unsigned(sext_ln68_179_fu_1290_p1));
    wpacks_1_0_V_fu_1346_p2 <= std_logic_vector(unsigned(shl_ln68_75_fu_1308_p3) + unsigned(sext_ln68_182_fu_1342_p1));
    wpacks_1_1_V_fu_1416_p2 <= std_logic_vector(unsigned(shl_ln68_77_fu_1372_p3) + unsigned(sext_ln68_185_fu_1412_p1));
    wpacks_1_2_V_fu_1486_p2 <= std_logic_vector(unsigned(shl_ln68_79_fu_1442_p3) + unsigned(sext_ln68_188_fu_1482_p1));
    wpacks_1_3_V_fu_1556_p2 <= std_logic_vector(unsigned(shl_ln68_81_fu_1512_p3) + unsigned(sext_ln68_191_fu_1552_p1));
    xor_ln393_5_fu_622_p2 <= (icmp_ln394_fu_594_p2 xor ap_const_lv1_1);
    xor_ln393_fu_576_p2 <= (icmp_ln393_fu_562_p2 xor ap_const_lv1_1);
    zext_ln215_33_fu_1604_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ipack_1_V_fu_1570_p4),41));
    zext_ln215_34_fu_1617_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ipack_2_V_fu_1578_p4),41));
    zext_ln215_35_fu_1627_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ipack_3_V_fu_1586_p4),41));
    zext_ln215_fu_1597_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ipack_0_V_fu_1562_p4),41));
    zext_ln393_13_fu_2044_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln393_113_reg_2793_pp0_iter5_reg),29));
    zext_ln393_fu_2041_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln393_110_reg_2778_pp0_iter5_reg),29));
    zext_ln395_fu_840_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln399_reg_2667),12));
    zext_ln404_13_fu_774_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln404_mid1_fu_767_p3),12));
    zext_ln404_14_fu_785_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln404_4_mid1_fu_778_p3),12));
    zext_ln404_7_fu_720_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln404_4_fu_713_p3),12));
    zext_ln404_8_fu_864_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln404_fu_860_p1),64));
    zext_ln404_fu_709_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_702_p3),12));
    zext_ln458_5_fu_802_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(peIdx_reg_2635),64));
    zext_ln458_fu_543_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(peIdx_0_i_reg_449),64));
    zext_ln78_22_fu_1836_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_65_fu_1828_p3),11));
    zext_ln78_23_fu_2050_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_66_reg_3040),11));
    zext_ln78_24_fu_1930_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_67_reg_2997),11));
    zext_ln78_25_fu_1957_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_68_fu_1949_p3),11));
    zext_ln78_26_fu_2093_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_69_reg_3065),11));
    zext_ln78_fu_1809_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_64_reg_2980),11));
end behav;
