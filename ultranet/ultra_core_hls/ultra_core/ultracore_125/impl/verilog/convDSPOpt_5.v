// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module convDSPOpt_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        vec_V_V_dout,
        vec_V_V_empty_n,
        vec_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write,
        reps_dout,
        reps_empty_n,
        reps_read
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_pp0_stage0 = 5'd8;
parameter    ap_ST_fsm_state15 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [127:0] vec_V_V_dout;
input   vec_V_V_empty_n;
output   vec_V_V_read;
output  [31:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;
input  [31:0] reps_dout;
input   reps_empty_n;
output   reps_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg vec_V_V_read;
reg out_V_V_write;
reg reps_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] conv_1_inc_new_V_0_address0;
reg    conv_1_inc_new_V_0_ce0;
wire   [11:0] conv_1_inc_new_V_0_q0;
wire   [2:0] conv_1_inc_new_V_0_address1;
reg    conv_1_inc_new_V_0_ce1;
wire   [11:0] conv_1_inc_new_V_0_q1;
wire   [2:0] conv_1_bias_new_V_0_address0;
reg    conv_1_bias_new_V_0_ce0;
wire   [22:0] conv_1_bias_new_V_0_q0;
wire   [2:0] conv_1_bias_new_V_0_address1;
reg    conv_1_bias_new_V_0_ce1;
wire   [22:0] conv_1_bias_new_V_0_q1;
wire   [2:0] conv_1_inc_new_V_1_address0;
reg    conv_1_inc_new_V_1_ce0;
wire   [12:0] conv_1_inc_new_V_1_q0;
wire   [2:0] conv_1_inc_new_V_1_address1;
reg    conv_1_inc_new_V_1_ce1;
wire   [12:0] conv_1_inc_new_V_1_q1;
wire   [2:0] conv_1_bias_new_V_1_address0;
reg    conv_1_bias_new_V_1_ce0;
wire   [22:0] conv_1_bias_new_V_1_q0;
wire   [2:0] conv_1_bias_new_V_1_address1;
reg    conv_1_bias_new_V_1_ce1;
wire   [22:0] conv_1_bias_new_V_1_q1;
wire   [2:0] conv_1_inc_new_V_2_address0;
reg    conv_1_inc_new_V_2_ce0;
wire   [10:0] conv_1_inc_new_V_2_q0;
wire   [2:0] conv_1_inc_new_V_2_address1;
reg    conv_1_inc_new_V_2_ce1;
wire   [10:0] conv_1_inc_new_V_2_q1;
wire   [2:0] conv_1_bias_new_V_2_address0;
reg    conv_1_bias_new_V_2_ce0;
wire   [20:0] conv_1_bias_new_V_2_q0;
wire   [2:0] conv_1_bias_new_V_2_address1;
reg    conv_1_bias_new_V_2_ce1;
wire   [20:0] conv_1_bias_new_V_2_q1;
wire   [2:0] conv_1_inc_new_V_3_address0;
reg    conv_1_inc_new_V_3_ce0;
wire   [11:0] conv_1_inc_new_V_3_q0;
wire   [2:0] conv_1_inc_new_V_3_address1;
reg    conv_1_inc_new_V_3_ce1;
wire   [11:0] conv_1_inc_new_V_3_q1;
wire   [2:0] conv_1_bias_new_V_3_address0;
reg    conv_1_bias_new_V_3_ce0;
wire   [22:0] conv_1_bias_new_V_3_q0;
wire   [2:0] conv_1_bias_new_V_3_address1;
reg    conv_1_bias_new_V_3_ce1;
wire   [22:0] conv_1_bias_new_V_3_q1;
wire   [4:0] conv_1_w_new_V_0_2_address0;
reg    conv_1_w_new_V_0_2_ce0;
wire   [63:0] conv_1_w_new_V_0_2_q0;
wire   [4:0] conv_1_w_new_V_0_1_address0;
reg    conv_1_w_new_V_0_1_ce0;
wire   [63:0] conv_1_w_new_V_0_1_q0;
wire   [4:0] conv_1_w_new_V_0_0_address0;
reg    conv_1_w_new_V_0_0_ce0;
wire   [63:0] conv_1_w_new_V_0_0_q0;
wire   [4:0] conv_1_w_new_V_1_2_address0;
reg    conv_1_w_new_V_1_2_ce0;
wire   [63:0] conv_1_w_new_V_1_2_q0;
wire   [4:0] conv_1_w_new_V_1_1_address0;
reg    conv_1_w_new_V_1_1_ce0;
wire   [63:0] conv_1_w_new_V_1_1_q0;
wire   [4:0] conv_1_w_new_V_1_0_address0;
reg    conv_1_w_new_V_1_0_ce0;
wire   [62:0] conv_1_w_new_V_1_0_q0;
wire   [4:0] conv_1_w_new_V_2_2_address0;
reg    conv_1_w_new_V_2_2_ce0;
wire   [63:0] conv_1_w_new_V_2_2_q0;
wire   [4:0] conv_1_w_new_V_2_1_address0;
reg    conv_1_w_new_V_2_1_ce0;
wire   [63:0] conv_1_w_new_V_2_1_q0;
wire   [4:0] conv_1_w_new_V_2_0_address0;
reg    conv_1_w_new_V_2_0_ce0;
wire   [63:0] conv_1_w_new_V_2_0_q0;
wire   [4:0] conv_1_w_new_V_3_2_address0;
reg    conv_1_w_new_V_3_2_ce0;
wire   [63:0] conv_1_w_new_V_3_2_q0;
wire   [4:0] conv_1_w_new_V_3_1_address0;
reg    conv_1_w_new_V_3_1_ce0;
wire   [63:0] conv_1_w_new_V_3_1_q0;
wire   [4:0] conv_1_w_new_V_3_0_address0;
reg    conv_1_w_new_V_3_0_ce0;
wire   [63:0] conv_1_w_new_V_3_0_q0;
reg    vec_V_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln392_reg_3490;
reg   [0:0] icmp_ln392_reg_3490_pp0_iter1_reg;
reg    out_V_V_blk_n;
reg    ap_enable_reg_pp0_iter10;
reg   [0:0] o_out_reg_3688;
reg   [0:0] o_out_reg_3688_pp0_iter9_reg;
reg    reps_blk_n;
reg   [42:0] indvar_flatten239_reg_745;
reg   [11:0] indvar_flatten53_reg_756;
reg   [3:0] peIdx_0_i_reg_767;
reg   [8:0] indvar_flatten_reg_778;
reg   [7:0] w_0_i_reg_789;
reg   [1:0] infoldIdx_0_i_reg_800;
wire   [31:0] add_ln392_fu_1006_p2;
reg   [31:0] add_ln392_reg_3430;
reg    ap_block_state1;
wire    ap_CS_fsm_state2;
wire   [42:0] grp_fu_1015_p2;
reg   [42:0] bound74_reg_3440;
wire    ap_CS_fsm_state3;
wire   [5:0] sub_ln404_fu_1041_p2;
reg   [5:0] sub_ln404_reg_3445;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
reg    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state8_pp0_stage0_iter4;
wire    ap_block_state9_pp0_stage0_iter5;
wire    ap_block_state10_pp0_stage0_iter6;
wire    ap_block_state11_pp0_stage0_iter7;
wire    ap_block_state12_pp0_stage0_iter8;
wire    ap_block_state13_pp0_stage0_iter9;
reg    ap_block_state14_pp0_stage0_iter10;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln392_fu_1059_p2;
reg   [0:0] icmp_ln392_reg_3490_pp0_iter2_reg;
reg   [0:0] icmp_ln392_reg_3490_pp0_iter3_reg;
reg   [0:0] icmp_ln392_reg_3490_pp0_iter4_reg;
reg   [0:0] icmp_ln392_reg_3490_pp0_iter5_reg;
reg   [0:0] icmp_ln392_reg_3490_pp0_iter6_reg;
wire   [42:0] add_ln392_2_fu_1064_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln393_fu_1070_p2;
reg   [0:0] icmp_ln393_reg_3499;
reg   [0:0] icmp_ln393_reg_3499_pp0_iter1_reg;
wire   [0:0] xor_ln393_fu_1084_p2;
reg   [0:0] xor_ln393_reg_3518;
wire   [0:0] icmp_ln394_fu_1090_p2;
reg   [0:0] icmp_ln394_reg_3524;
wire   [0:0] and_ln393_6_fu_1096_p2;
reg   [0:0] and_ln393_6_reg_3529;
reg   [0:0] and_ln393_6_reg_3529_pp0_iter1_reg;
wire   [3:0] peIdx_fu_1102_p2;
reg   [3:0] peIdx_reg_3547;
wire   [0:0] or_ln393_fu_1108_p2;
reg   [0:0] or_ln393_reg_3553;
wire   [2:0] trunc_ln404_2_fu_1114_p1;
reg   [2:0] trunc_ln404_2_reg_3558;
wire   [3:0] select_ln393_45_fu_1118_p3;
wire   [8:0] select_ln394_2_fu_1132_p3;
wire   [11:0] select_ln393_46_fu_1146_p3;
reg   [11:0] conv_1_inc_new_V_0_l_reg_3578;
reg    ap_enable_reg_pp0_iter1;
reg   [22:0] conv_1_bias_new_V_0_1_reg_3583;
reg   [12:0] conv_1_inc_new_V_1_l_reg_3588;
reg   [22:0] conv_1_bias_new_V_1_1_reg_3593;
reg   [10:0] conv_1_inc_new_V_2_l_reg_3598;
reg   [20:0] conv_1_bias_new_V_2_1_reg_3603;
reg   [11:0] conv_1_inc_new_V_3_l_reg_3608;
reg   [22:0] conv_1_bias_new_V_3_1_reg_3613;
wire   [22:0] add_ln1353_fu_1154_p2;
reg   [22:0] add_ln1353_reg_3618;
wire   [22:0] add_ln1353_12_fu_1160_p2;
reg   [22:0] add_ln1353_12_reg_3623;
wire   [20:0] add_ln1353_13_fu_1166_p2;
reg   [20:0] add_ln1353_13_reg_3628;
wire   [22:0] add_ln1353_14_fu_1172_p2;
reg   [22:0] add_ln1353_14_reg_3633;
wire   [1:0] select_ln399_fu_1289_p3;
reg   [1:0] select_ln399_reg_3678;
reg   [1:0] select_ln399_reg_3678_pp0_iter2_reg;
reg   [1:0] select_ln399_reg_3678_pp0_iter3_reg;
reg   [1:0] select_ln399_reg_3678_pp0_iter4_reg;
reg   [1:0] select_ln399_reg_3678_pp0_iter5_reg;
reg   [1:0] select_ln399_reg_3678_pp0_iter6_reg;
wire   [7:0] select_ln394_fu_1311_p3;
wire   [0:0] o_out_fu_1329_p2;
reg   [0:0] o_out_reg_3688_pp0_iter2_reg;
reg   [0:0] o_out_reg_3688_pp0_iter3_reg;
reg   [0:0] o_out_reg_3688_pp0_iter4_reg;
reg   [0:0] o_out_reg_3688_pp0_iter5_reg;
reg   [0:0] o_out_reg_3688_pp0_iter6_reg;
reg   [0:0] o_out_reg_3688_pp0_iter7_reg;
reg   [0:0] o_out_reg_3688_pp0_iter8_reg;
wire   [1:0] infoldIdx_fu_1361_p2;
wire   [11:0] select_ln393_33_fu_1439_p3;
reg   [11:0] select_ln393_33_reg_3757;
reg   [11:0] select_ln393_33_reg_3757_pp0_iter3_reg;
reg   [11:0] select_ln393_33_reg_3757_pp0_iter4_reg;
reg   [11:0] select_ln393_33_reg_3757_pp0_iter5_reg;
reg   [11:0] select_ln393_33_reg_3757_pp0_iter6_reg;
reg   [11:0] select_ln393_33_reg_3757_pp0_iter7_reg;
wire   [22:0] select_ln393_34_fu_1446_p3;
reg   [22:0] select_ln393_34_reg_3762;
reg   [22:0] select_ln393_34_reg_3762_pp0_iter3_reg;
reg   [22:0] select_ln393_34_reg_3762_pp0_iter4_reg;
reg   [22:0] select_ln393_34_reg_3762_pp0_iter5_reg;
reg   [22:0] select_ln393_34_reg_3762_pp0_iter6_reg;
reg   [22:0] select_ln393_34_reg_3762_pp0_iter7_reg;
reg   [22:0] select_ln393_34_reg_3762_pp0_iter8_reg;
wire   [22:0] select_ln393_35_fu_1459_p3;
reg   [22:0] select_ln393_35_reg_3767;
reg   [22:0] select_ln393_35_reg_3767_pp0_iter3_reg;
reg   [22:0] select_ln393_35_reg_3767_pp0_iter4_reg;
reg   [22:0] select_ln393_35_reg_3767_pp0_iter5_reg;
reg   [22:0] select_ln393_35_reg_3767_pp0_iter6_reg;
reg   [22:0] select_ln393_35_reg_3767_pp0_iter7_reg;
reg   [22:0] select_ln393_35_reg_3767_pp0_iter8_reg;
wire   [12:0] select_ln393_36_fu_1466_p3;
reg   [12:0] select_ln393_36_reg_3772;
reg   [12:0] select_ln393_36_reg_3772_pp0_iter3_reg;
reg   [12:0] select_ln393_36_reg_3772_pp0_iter4_reg;
reg   [12:0] select_ln393_36_reg_3772_pp0_iter5_reg;
reg   [12:0] select_ln393_36_reg_3772_pp0_iter6_reg;
reg   [12:0] select_ln393_36_reg_3772_pp0_iter7_reg;
wire   [22:0] select_ln393_37_fu_1473_p3;
reg   [22:0] select_ln393_37_reg_3777;
reg   [22:0] select_ln393_37_reg_3777_pp0_iter3_reg;
reg   [22:0] select_ln393_37_reg_3777_pp0_iter4_reg;
reg   [22:0] select_ln393_37_reg_3777_pp0_iter5_reg;
reg   [22:0] select_ln393_37_reg_3777_pp0_iter6_reg;
reg   [22:0] select_ln393_37_reg_3777_pp0_iter7_reg;
reg   [22:0] select_ln393_37_reg_3777_pp0_iter8_reg;
wire   [22:0] select_ln393_38_fu_1486_p3;
reg   [22:0] select_ln393_38_reg_3782;
reg   [22:0] select_ln393_38_reg_3782_pp0_iter3_reg;
reg   [22:0] select_ln393_38_reg_3782_pp0_iter4_reg;
reg   [22:0] select_ln393_38_reg_3782_pp0_iter5_reg;
reg   [22:0] select_ln393_38_reg_3782_pp0_iter6_reg;
reg   [22:0] select_ln393_38_reg_3782_pp0_iter7_reg;
reg   [22:0] select_ln393_38_reg_3782_pp0_iter8_reg;
wire   [10:0] select_ln393_39_fu_1493_p3;
reg   [10:0] select_ln393_39_reg_3787;
reg   [10:0] select_ln393_39_reg_3787_pp0_iter3_reg;
reg   [10:0] select_ln393_39_reg_3787_pp0_iter4_reg;
reg   [10:0] select_ln393_39_reg_3787_pp0_iter5_reg;
reg   [10:0] select_ln393_39_reg_3787_pp0_iter6_reg;
reg   [10:0] select_ln393_39_reg_3787_pp0_iter7_reg;
wire   [20:0] select_ln393_40_fu_1500_p3;
reg   [20:0] select_ln393_40_reg_3792;
reg   [20:0] select_ln393_40_reg_3792_pp0_iter3_reg;
reg   [20:0] select_ln393_40_reg_3792_pp0_iter4_reg;
reg   [20:0] select_ln393_40_reg_3792_pp0_iter5_reg;
reg   [20:0] select_ln393_40_reg_3792_pp0_iter6_reg;
reg   [20:0] select_ln393_40_reg_3792_pp0_iter7_reg;
reg   [20:0] select_ln393_40_reg_3792_pp0_iter8_reg;
wire   [20:0] select_ln393_41_fu_1513_p3;
reg   [20:0] select_ln393_41_reg_3797;
reg   [20:0] select_ln393_41_reg_3797_pp0_iter3_reg;
reg   [20:0] select_ln393_41_reg_3797_pp0_iter4_reg;
reg   [20:0] select_ln393_41_reg_3797_pp0_iter5_reg;
reg   [20:0] select_ln393_41_reg_3797_pp0_iter6_reg;
reg   [20:0] select_ln393_41_reg_3797_pp0_iter7_reg;
reg   [20:0] select_ln393_41_reg_3797_pp0_iter8_reg;
wire   [11:0] select_ln393_42_fu_1520_p3;
reg   [11:0] select_ln393_42_reg_3802;
reg   [11:0] select_ln393_42_reg_3802_pp0_iter3_reg;
reg   [11:0] select_ln393_42_reg_3802_pp0_iter4_reg;
reg   [11:0] select_ln393_42_reg_3802_pp0_iter5_reg;
reg   [11:0] select_ln393_42_reg_3802_pp0_iter6_reg;
reg   [11:0] select_ln393_42_reg_3802_pp0_iter7_reg;
wire   [22:0] select_ln393_43_fu_1527_p3;
reg   [22:0] select_ln393_43_reg_3807;
reg   [22:0] select_ln393_43_reg_3807_pp0_iter3_reg;
reg   [22:0] select_ln393_43_reg_3807_pp0_iter4_reg;
reg   [22:0] select_ln393_43_reg_3807_pp0_iter5_reg;
reg   [22:0] select_ln393_43_reg_3807_pp0_iter6_reg;
reg   [22:0] select_ln393_43_reg_3807_pp0_iter7_reg;
reg   [22:0] select_ln393_43_reg_3807_pp0_iter8_reg;
wire   [22:0] select_ln393_44_fu_1540_p3;
reg   [22:0] select_ln393_44_reg_3812;
reg   [22:0] select_ln393_44_reg_3812_pp0_iter3_reg;
reg   [22:0] select_ln393_44_reg_3812_pp0_iter4_reg;
reg   [22:0] select_ln393_44_reg_3812_pp0_iter5_reg;
reg   [22:0] select_ln393_44_reg_3812_pp0_iter6_reg;
reg   [22:0] select_ln393_44_reg_3812_pp0_iter7_reg;
reg   [22:0] select_ln393_44_reg_3812_pp0_iter8_reg;
wire   [3:0] trunc_ln647_fu_1547_p1;
reg   [3:0] trunc_ln647_reg_3817;
reg   [3:0] p_Result_82_i_i_reg_3822;
reg   [3:0] p_Result_1_i_i_reg_3827;
reg   [3:0] p_Result_82_1_i_i_reg_3832;
reg   [3:0] p_Result_2_i_i_reg_3837;
reg   [3:0] p_Result_82_2_i_i_reg_3842;
reg   [3:0] p_Result_3_i_i_reg_3847;
reg   [3:0] p_Result_82_3_i_i_reg_3852;
reg   [3:0] p_Result_4_i_i_reg_3857;
reg   [3:0] p_Result_82_4_i_i_reg_3862;
reg   [3:0] p_Result_5_i_i_reg_3867;
reg   [3:0] p_Result_82_5_i_i_reg_3872;
reg   [3:0] p_Result_6_i_i_reg_3877;
reg   [3:0] p_Result_82_6_i_i_reg_3882;
reg   [3:0] p_Result_7_i_i_reg_3887;
reg   [3:0] p_Result_82_7_i_i_reg_3892;
reg   [3:0] p_Result_8_i_i_reg_3897;
reg   [3:0] p_Result_82_8_i_i_reg_3902;
reg   [3:0] p_Result_9_i_i_reg_3907;
reg   [3:0] p_Result_82_9_i_i_reg_3912;
reg   [3:0] p_Result_10_i_i_reg_3917;
reg   [3:0] p_Result_82_i_i_133_reg_3922;
reg   [3:0] p_Result_11_i_i_reg_3927;
reg   [3:0] p_Result_82_10_i_i_reg_3932;
reg   [3:0] p_Result_12_i_i_reg_3937;
reg   [3:0] p_Result_82_11_i_i_reg_3942;
reg   [3:0] p_Result_13_i_i_reg_3947;
reg   [3:0] p_Result_82_12_i_i_reg_3952;
reg   [3:0] p_Result_14_i_i_reg_3957;
reg   [3:0] p_Result_82_13_i_i_reg_3962;
reg   [3:0] p_Result_i_i_reg_3967;
reg   [3:0] p_Result_82_14_i_i_reg_3972;
reg   [25:0] wpacks_0_0_V_reg_3977;
reg   [25:0] wpacks_0_1_V_reg_3982;
reg   [25:0] wpacks_0_2_V_reg_3987;
reg   [25:0] wpacks_0_3_V_reg_3992;
reg   [25:0] wpacks_0_4_V_reg_3997;
reg   [25:0] wpacks_0_5_V_reg_4002;
reg   [25:0] wpacks_0_6_V_reg_4007;
reg   [25:0] wpacks_0_7_V_reg_4012;
reg   [25:0] wpacks_0_8_V_reg_4017;
reg   [25:0] wpacks_0_9_V_reg_4022;
reg   [25:0] wpacks_0_10_V_reg_4027;
reg   [25:0] wpacks_0_11_V_reg_4032;
reg   [25:0] wpacks_0_12_V_reg_4037;
reg   [25:0] wpacks_0_13_V_reg_4042;
reg   [25:0] wpacks_0_14_V_reg_4047;
reg   [25:0] wpacks_0_15_V_reg_4052;
reg   [25:0] wpacks_1_0_V_reg_4057;
reg   [25:0] wpacks_1_1_V_reg_4062;
reg   [25:0] wpacks_1_2_V_reg_4067;
reg   [25:0] wpacks_1_3_V_reg_4072;
reg   [25:0] wpacks_1_4_V_reg_4077;
reg   [25:0] wpacks_1_5_V_reg_4082;
reg   [25:0] wpacks_1_6_V_reg_4087;
reg   [25:0] wpacks_1_7_V_reg_4092;
reg   [25:0] wpacks_1_8_V_reg_4097;
reg   [25:0] wpacks_1_9_V_reg_4102;
reg   [25:0] wpacks_1_10_V_reg_4107;
reg   [25:0] wpacks_1_11_V_reg_4112;
reg   [25:0] wpacks_1_12_V_reg_4117;
reg   [25:0] wpacks_1_13_V_reg_4122;
reg   [25:0] wpacks_1_14_V_reg_4127;
reg   [25:0] wpacks_1_15_V_reg_4132;
reg   [25:0] wpacks_2_0_V_reg_4137;
reg   [25:0] wpacks_2_1_V_reg_4142;
reg   [25:0] wpacks_2_2_V_reg_4147;
reg   [25:0] wpacks_2_3_V_reg_4152;
reg   [25:0] wpacks_2_4_V_reg_4157;
reg   [25:0] wpacks_2_5_V_reg_4162;
reg   [25:0] wpacks_2_6_V_reg_4167;
reg   [25:0] wpacks_2_7_V_reg_4172;
reg   [25:0] wpacks_2_8_V_reg_4177;
reg   [25:0] wpacks_2_9_V_reg_4182;
reg   [25:0] wpacks_2_10_V_reg_4187;
reg   [25:0] wpacks_2_11_V_reg_4192;
reg   [25:0] wpacks_2_12_V_reg_4197;
reg   [25:0] wpacks_2_13_V_reg_4202;
reg   [25:0] wpacks_2_14_V_reg_4207;
reg   [25:0] wpacks_2_15_V_reg_4212;
reg   [25:0] wpacks_3_0_V_reg_4217;
reg   [25:0] wpacks_3_1_V_reg_4222;
reg   [25:0] wpacks_3_2_V_reg_4227;
reg   [25:0] wpacks_3_3_V_reg_4232;
reg   [25:0] wpacks_3_4_V_reg_4237;
reg   [25:0] wpacks_3_5_V_reg_4242;
reg   [25:0] wpacks_3_6_V_reg_4247;
reg   [25:0] wpacks_3_7_V_reg_4252;
reg   [25:0] wpacks_3_8_V_reg_4257;
reg   [25:0] wpacks_3_9_V_reg_4262;
reg   [25:0] wpacks_3_10_V_reg_4267;
reg   [25:0] wpacks_3_11_V_reg_4272;
reg   [25:0] wpacks_3_12_V_reg_4277;
reg   [25:0] wpacks_3_13_V_reg_4282;
reg   [25:0] wpacks_3_14_V_reg_4287;
reg   [25:0] wpacks_3_15_V_reg_4292;
wire   [14:0] ipack_0_V_fu_2122_p4;
wire   [14:0] ipack_1_V_fu_2134_p4;
wire   [14:0] ipack_2_V_fu_2146_p4;
wire   [14:0] ipack_3_V_fu_2158_p4;
wire   [14:0] ipack_4_V_fu_2170_p4;
wire   [14:0] ipack_5_V_fu_2182_p4;
wire   [14:0] ipack_6_V_fu_2194_p4;
wire   [14:0] ipack_7_V_fu_2206_p4;
wire   [14:0] ipack_8_V_fu_2218_p4;
wire   [14:0] ipack_9_V_fu_2230_p4;
wire   [14:0] ipack_10_V_fu_2242_p4;
wire   [14:0] ipack_11_V_fu_2254_p4;
wire   [14:0] ipack_12_V_fu_2266_p4;
wire   [14:0] ipack_13_V_fu_2278_p4;
wire   [14:0] ipack_14_V_fu_2290_p4;
wire   [14:0] ipack_15_V_fu_2302_p4;
wire   [15:0] grp_simd_MAC_2_fu_811_ap_return_0;
wire   [15:0] grp_simd_MAC_2_fu_811_ap_return_1;
wire   [15:0] grp_simd_MAC_2_fu_811_ap_return_2;
wire   [15:0] grp_simd_MAC_2_fu_811_ap_return_3;
reg   [15:0] call_ret1_reg_4425_0;
reg   [15:0] call_ret1_reg_4425_1;
reg   [15:0] firPartialRes0_0_V_reg_4431;
reg   [15:0] firPartial3_V_0_i_reg_4437;
wire   [15:0] grp_simd_MAC_2_fu_847_ap_return_0;
wire   [15:0] grp_simd_MAC_2_fu_847_ap_return_1;
wire   [15:0] grp_simd_MAC_2_fu_847_ap_return_2;
wire   [15:0] grp_simd_MAC_2_fu_847_ap_return_3;
reg   [15:0] call_ret2_reg_4443_0;
reg   [15:0] call_ret2_reg_4443_1;
reg   [15:0] firPartialRes0_1_V_reg_4449;
reg   [15:0] firPartial3_V_0_1_i_reg_4455;
wire   [15:0] grp_simd_MAC_2_fu_883_ap_return_0;
wire   [15:0] grp_simd_MAC_2_fu_883_ap_return_1;
wire   [15:0] grp_simd_MAC_2_fu_883_ap_return_2;
wire   [15:0] grp_simd_MAC_2_fu_883_ap_return_3;
reg   [15:0] call_ret3_reg_4461_0;
reg   [15:0] call_ret3_reg_4461_1;
reg   [15:0] firPartialRes0_2_V_reg_4467;
reg   [15:0] firPartial3_V_0_2_i_reg_4473;
wire   [15:0] grp_simd_MAC_2_fu_919_ap_return_0;
wire   [15:0] grp_simd_MAC_2_fu_919_ap_return_1;
wire   [15:0] grp_simd_MAC_2_fu_919_ap_return_2;
wire   [15:0] grp_simd_MAC_2_fu_919_ap_return_3;
reg   [15:0] call_ret_reg_4479_0;
reg   [15:0] call_ret_reg_4479_1;
reg   [15:0] firPartialRes0_3_V_reg_4485;
reg   [15:0] firPartial3_V_0_3_i_reg_4491;
wire  signed [15:0] outPartialArr0_0_V_fu_2445_p2;
reg  signed [15:0] outPartialArr0_0_V_reg_4497;
wire  signed [15:0] outPartialArr1_0_V_fu_2451_p2;
reg  signed [15:0] outPartialArr1_0_V_reg_4502;
wire  signed [15:0] outPartialArr0_1_V_fu_2503_p2;
reg  signed [15:0] outPartialArr0_1_V_reg_4507;
wire  signed [15:0] outPartialArr1_1_V_fu_2509_p2;
reg  signed [15:0] outPartialArr1_1_V_reg_4512;
wire  signed [15:0] outPartialArr0_2_V_fu_2561_p2;
reg  signed [15:0] outPartialArr0_2_V_reg_4517;
wire  signed [15:0] outPartialArr1_2_V_fu_2567_p2;
reg  signed [15:0] outPartialArr1_2_V_reg_4522;
wire  signed [15:0] outPartialArr0_3_V_fu_2619_p2;
reg  signed [15:0] outPartialArr0_3_V_reg_4527;
wire  signed [15:0] outPartialArr1_3_V_fu_2625_p2;
reg  signed [15:0] outPartialArr1_3_V_reg_4532;
wire  signed [27:0] ret_V_fu_3286_p2;
reg  signed [27:0] ret_V_reg_4537;
wire  signed [27:0] ret_V_24_fu_3292_p2;
reg  signed [27:0] ret_V_24_reg_4542;
wire  signed [28:0] ret_V_27_fu_3298_p2;
reg  signed [28:0] ret_V_27_reg_4547;
wire  signed [28:0] ret_V_30_fu_3304_p2;
reg  signed [28:0] ret_V_30_reg_4553;
wire  signed [26:0] ret_V_33_fu_3310_p2;
reg  signed [26:0] ret_V_33_reg_4559;
wire  signed [26:0] ret_V_36_fu_3316_p2;
reg  signed [26:0] ret_V_36_reg_4564;
wire  signed [27:0] ret_V_39_fu_3322_p2;
reg  signed [27:0] ret_V_39_reg_4569;
wire  signed [27:0] ret_V_42_fu_3328_p2;
reg  signed [27:0] ret_V_42_reg_4574;
wire   [3:0] res_V_fu_2826_p3;
reg   [3:0] res_V_reg_4579;
wire   [3:0] res_V_4_fu_2889_p3;
reg   [3:0] res_V_4_reg_4584;
wire   [3:0] res_V_5_fu_2951_p3;
reg   [3:0] res_V_5_reg_4589;
wire   [3:0] res_V_6_fu_3013_p3;
reg   [3:0] res_V_6_reg_4594;
wire   [3:0] res_V_7_fu_3076_p3;
reg   [3:0] res_V_7_reg_4599;
wire   [3:0] res_V_8_fu_3139_p3;
reg   [3:0] res_V_8_reg_4604;
wire   [3:0] res_V_9_fu_3202_p3;
reg   [3:0] res_V_9_reg_4609;
wire   [3:0] res_V_10_fu_3265_p3;
reg   [3:0] res_V_10_reg_4614;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter1_state5;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    grp_simd_MAC_2_fu_811_ap_ce;
wire    ap_block_state4_pp0_stage0_iter0_ignore_call255;
wire    ap_block_state5_pp0_stage0_iter1_ignore_call255;
reg    ap_block_state6_pp0_stage0_iter2_ignore_call255;
wire    ap_block_state7_pp0_stage0_iter3_ignore_call255;
wire    ap_block_state8_pp0_stage0_iter4_ignore_call255;
wire    ap_block_state9_pp0_stage0_iter5_ignore_call255;
wire    ap_block_state10_pp0_stage0_iter6_ignore_call255;
wire    ap_block_state11_pp0_stage0_iter7_ignore_call255;
wire    ap_block_state12_pp0_stage0_iter8_ignore_call255;
wire    ap_block_state13_pp0_stage0_iter9_ignore_call255;
reg    ap_block_state14_pp0_stage0_iter10_ignore_call255;
reg    ap_block_pp0_stage0_11001_ignoreCallOp339;
reg    grp_simd_MAC_2_fu_847_ap_ce;
wire    ap_block_state4_pp0_stage0_iter0_ignore_call268;
wire    ap_block_state5_pp0_stage0_iter1_ignore_call268;
reg    ap_block_state6_pp0_stage0_iter2_ignore_call268;
wire    ap_block_state7_pp0_stage0_iter3_ignore_call268;
wire    ap_block_state8_pp0_stage0_iter4_ignore_call268;
wire    ap_block_state9_pp0_stage0_iter5_ignore_call268;
wire    ap_block_state10_pp0_stage0_iter6_ignore_call268;
wire    ap_block_state11_pp0_stage0_iter7_ignore_call268;
wire    ap_block_state12_pp0_stage0_iter8_ignore_call268;
wire    ap_block_state13_pp0_stage0_iter9_ignore_call268;
reg    ap_block_state14_pp0_stage0_iter10_ignore_call268;
reg    ap_block_pp0_stage0_11001_ignoreCallOp340;
reg    grp_simd_MAC_2_fu_883_ap_ce;
wire    ap_block_state4_pp0_stage0_iter0_ignore_call281;
wire    ap_block_state5_pp0_stage0_iter1_ignore_call281;
reg    ap_block_state6_pp0_stage0_iter2_ignore_call281;
wire    ap_block_state7_pp0_stage0_iter3_ignore_call281;
wire    ap_block_state8_pp0_stage0_iter4_ignore_call281;
wire    ap_block_state9_pp0_stage0_iter5_ignore_call281;
wire    ap_block_state10_pp0_stage0_iter6_ignore_call281;
wire    ap_block_state11_pp0_stage0_iter7_ignore_call281;
wire    ap_block_state12_pp0_stage0_iter8_ignore_call281;
wire    ap_block_state13_pp0_stage0_iter9_ignore_call281;
reg    ap_block_state14_pp0_stage0_iter10_ignore_call281;
reg    ap_block_pp0_stage0_11001_ignoreCallOp341;
reg    grp_simd_MAC_2_fu_919_ap_ce;
wire    ap_block_state4_pp0_stage0_iter0_ignore_call294;
wire    ap_block_state5_pp0_stage0_iter1_ignore_call294;
reg    ap_block_state6_pp0_stage0_iter2_ignore_call294;
wire    ap_block_state7_pp0_stage0_iter3_ignore_call294;
wire    ap_block_state8_pp0_stage0_iter4_ignore_call294;
wire    ap_block_state9_pp0_stage0_iter5_ignore_call294;
wire    ap_block_state10_pp0_stage0_iter6_ignore_call294;
wire    ap_block_state11_pp0_stage0_iter7_ignore_call294;
wire    ap_block_state12_pp0_stage0_iter8_ignore_call294;
wire    ap_block_state13_pp0_stage0_iter9_ignore_call294;
reg    ap_block_state14_pp0_stage0_iter10_ignore_call294;
reg    ap_block_pp0_stage0_11001_ignoreCallOp342;
wire    call_ret49_i_pack_weight_data_2_fu_955_ap_ready;
wire   [25:0] call_ret49_i_pack_weight_data_2_fu_955_ap_return_0;
wire   [25:0] call_ret49_i_pack_weight_data_2_fu_955_ap_return_1;
wire   [25:0] call_ret49_i_pack_weight_data_2_fu_955_ap_return_2;
wire   [25:0] call_ret49_i_pack_weight_data_2_fu_955_ap_return_3;
wire   [25:0] call_ret49_i_pack_weight_data_2_fu_955_ap_return_4;
wire   [25:0] call_ret49_i_pack_weight_data_2_fu_955_ap_return_5;
wire   [25:0] call_ret49_i_pack_weight_data_2_fu_955_ap_return_6;
wire   [25:0] call_ret49_i_pack_weight_data_2_fu_955_ap_return_7;
wire   [25:0] call_ret49_i_pack_weight_data_2_fu_955_ap_return_8;
wire   [25:0] call_ret49_i_pack_weight_data_2_fu_955_ap_return_9;
wire   [25:0] call_ret49_i_pack_weight_data_2_fu_955_ap_return_10;
wire   [25:0] call_ret49_i_pack_weight_data_2_fu_955_ap_return_11;
wire   [25:0] call_ret49_i_pack_weight_data_2_fu_955_ap_return_12;
wire   [25:0] call_ret49_i_pack_weight_data_2_fu_955_ap_return_13;
wire   [25:0] call_ret49_i_pack_weight_data_2_fu_955_ap_return_14;
wire   [25:0] call_ret49_i_pack_weight_data_2_fu_955_ap_return_15;
wire    call_ret50_i_pack_weight_data_2_fu_965_ap_ready;
wire   [63:0] call_ret50_i_pack_weight_data_2_fu_965_w0_V;
wire   [25:0] call_ret50_i_pack_weight_data_2_fu_965_ap_return_0;
wire   [25:0] call_ret50_i_pack_weight_data_2_fu_965_ap_return_1;
wire   [25:0] call_ret50_i_pack_weight_data_2_fu_965_ap_return_2;
wire   [25:0] call_ret50_i_pack_weight_data_2_fu_965_ap_return_3;
wire   [25:0] call_ret50_i_pack_weight_data_2_fu_965_ap_return_4;
wire   [25:0] call_ret50_i_pack_weight_data_2_fu_965_ap_return_5;
wire   [25:0] call_ret50_i_pack_weight_data_2_fu_965_ap_return_6;
wire   [25:0] call_ret50_i_pack_weight_data_2_fu_965_ap_return_7;
wire   [25:0] call_ret50_i_pack_weight_data_2_fu_965_ap_return_8;
wire   [25:0] call_ret50_i_pack_weight_data_2_fu_965_ap_return_9;
wire   [25:0] call_ret50_i_pack_weight_data_2_fu_965_ap_return_10;
wire   [25:0] call_ret50_i_pack_weight_data_2_fu_965_ap_return_11;
wire   [25:0] call_ret50_i_pack_weight_data_2_fu_965_ap_return_12;
wire   [25:0] call_ret50_i_pack_weight_data_2_fu_965_ap_return_13;
wire   [25:0] call_ret50_i_pack_weight_data_2_fu_965_ap_return_14;
wire   [25:0] call_ret50_i_pack_weight_data_2_fu_965_ap_return_15;
wire    call_ret51_i_pack_weight_data_2_fu_974_ap_ready;
wire   [25:0] call_ret51_i_pack_weight_data_2_fu_974_ap_return_0;
wire   [25:0] call_ret51_i_pack_weight_data_2_fu_974_ap_return_1;
wire   [25:0] call_ret51_i_pack_weight_data_2_fu_974_ap_return_2;
wire   [25:0] call_ret51_i_pack_weight_data_2_fu_974_ap_return_3;
wire   [25:0] call_ret51_i_pack_weight_data_2_fu_974_ap_return_4;
wire   [25:0] call_ret51_i_pack_weight_data_2_fu_974_ap_return_5;
wire   [25:0] call_ret51_i_pack_weight_data_2_fu_974_ap_return_6;
wire   [25:0] call_ret51_i_pack_weight_data_2_fu_974_ap_return_7;
wire   [25:0] call_ret51_i_pack_weight_data_2_fu_974_ap_return_8;
wire   [25:0] call_ret51_i_pack_weight_data_2_fu_974_ap_return_9;
wire   [25:0] call_ret51_i_pack_weight_data_2_fu_974_ap_return_10;
wire   [25:0] call_ret51_i_pack_weight_data_2_fu_974_ap_return_11;
wire   [25:0] call_ret51_i_pack_weight_data_2_fu_974_ap_return_12;
wire   [25:0] call_ret51_i_pack_weight_data_2_fu_974_ap_return_13;
wire   [25:0] call_ret51_i_pack_weight_data_2_fu_974_ap_return_14;
wire   [25:0] call_ret51_i_pack_weight_data_2_fu_974_ap_return_15;
wire    call_ret52_i_pack_weight_data_2_fu_984_ap_ready;
wire   [25:0] call_ret52_i_pack_weight_data_2_fu_984_ap_return_0;
wire   [25:0] call_ret52_i_pack_weight_data_2_fu_984_ap_return_1;
wire   [25:0] call_ret52_i_pack_weight_data_2_fu_984_ap_return_2;
wire   [25:0] call_ret52_i_pack_weight_data_2_fu_984_ap_return_3;
wire   [25:0] call_ret52_i_pack_weight_data_2_fu_984_ap_return_4;
wire   [25:0] call_ret52_i_pack_weight_data_2_fu_984_ap_return_5;
wire   [25:0] call_ret52_i_pack_weight_data_2_fu_984_ap_return_6;
wire   [25:0] call_ret52_i_pack_weight_data_2_fu_984_ap_return_7;
wire   [25:0] call_ret52_i_pack_weight_data_2_fu_984_ap_return_8;
wire   [25:0] call_ret52_i_pack_weight_data_2_fu_984_ap_return_9;
wire   [25:0] call_ret52_i_pack_weight_data_2_fu_984_ap_return_10;
wire   [25:0] call_ret52_i_pack_weight_data_2_fu_984_ap_return_11;
wire   [25:0] call_ret52_i_pack_weight_data_2_fu_984_ap_return_12;
wire   [25:0] call_ret52_i_pack_weight_data_2_fu_984_ap_return_13;
wire   [25:0] call_ret52_i_pack_weight_data_2_fu_984_ap_return_14;
wire   [25:0] call_ret52_i_pack_weight_data_2_fu_984_ap_return_15;
wire   [63:0] zext_ln458_fu_1047_p1;
wire   [63:0] zext_ln458_2_fu_1240_p1;
wire   [63:0] zext_ln404_6_fu_1345_p1;
reg   [15:0] firPartialRes0_V_0_3_fu_306;
wire   [15:0] select_ln398_9_fu_2431_p3;
reg   [15:0] firPartialRes0_V_1_3_fu_310;
wire   [15:0] select_ln398_13_fu_2489_p3;
reg   [15:0] firPartialRes0_V_2_3_fu_314;
wire   [15:0] select_ln398_17_fu_2547_p3;
reg   [15:0] firPartialRes0_V_3_3_fu_318;
wire   [15:0] select_ln398_21_fu_2605_p3;
reg   [15:0] firPartialRes1_0_V_2_fu_322;
wire   [15:0] firPartialRes1_0_V_fu_2438_p3;
reg   [15:0] firPartialRes1_1_V_2_fu_326;
wire   [15:0] firPartialRes1_1_V_fu_2496_p3;
reg   [15:0] firPartialRes1_2_V_1_fu_330;
wire   [15:0] firPartialRes1_2_V_fu_2554_p3;
reg   [15:0] firPartialRes1_3_V_1_fu_334;
wire   [15:0] firPartialRes1_3_V_fu_2612_p3;
reg   [15:0] outPartialArr0_0_V_2_fu_338;
reg   [15:0] outPartialArr0_1_V_2_fu_342;
reg   [15:0] outPartialArr0_2_V_1_fu_346;
reg   [15:0] outPartialArr0_3_V_1_fu_350;
reg   [15:0] outPartialArr1_0_V_1_fu_354;
reg   [15:0] outPartialArr1_1_V_1_fu_358;
reg   [15:0] outPartialArr1_2_V_1_fu_362;
reg   [15:0] outPartialArr1_3_V_1_fu_366;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] shl_ln392_fu_994_p2;
wire   [31:0] shl_ln392_2_fu_1000_p2;
wire   [11:0] grp_fu_1015_p0;
wire   [31:0] grp_fu_1015_p1;
wire   [2:0] trunc_ln404_fu_1025_p1;
wire   [4:0] shl_ln6_fu_1029_p3;
wire   [5:0] zext_ln404_fu_1037_p1;
wire   [5:0] zext_ln393_fu_1021_p1;
wire   [3:0] select_ln393_fu_1076_p3;
wire   [8:0] add_ln394_2_fu_1126_p2;
wire   [11:0] add_ln393_2_fu_1140_p2;
wire   [0:0] icmp_ln399_fu_1184_p2;
wire   [0:0] icmp_ln395_fu_1195_p2;
wire   [4:0] shl_ln404_mid1_fu_1216_p3;
wire   [5:0] zext_ln404_5_fu_1223_p1;
wire   [5:0] zext_ln393_1_fu_1213_p1;
wire   [5:0] sub_ln404_2_fu_1227_p2;
wire   [5:0] select_ln393_18_fu_1178_p3;
wire   [0:0] xor_ln393_2_fu_1251_p2;
wire   [0:0] and_ln393_fu_1190_p2;
wire   [0:0] or_ln393_2_fu_1256_p2;
wire   [0:0] and_ln393_5_fu_1201_p2;
wire   [7:0] select_ln393_31_fu_1206_p3;
wire   [0:0] and_ln393_8_fu_1267_p2;
wire   [0:0] or_ln399_fu_1279_p2;
wire   [0:0] or_ln399_2_fu_1284_p2;
wire   [7:0] w_fu_1273_p2;
wire   [0:0] icmp_ln399_3_fu_1297_p2;
wire   [0:0] and_ln393_7_fu_1261_p2;
wire   [0:0] icmp_ln399_4_fu_1323_p2;
wire   [0:0] select_ln399_2_fu_1303_p3;
wire   [5:0] select_ln393_32_fu_1233_p3;
wire   [5:0] zext_ln395_fu_1319_p1;
wire   [5:0] add_ln404_fu_1335_p2;
wire  signed [31:0] sext_ln404_fu_1341_p1;
wire   [11:0] select_ln393_19_fu_1367_p3;
wire   [22:0] select_ln393_20_fu_1373_p3;
wire   [22:0] add_ln1353_15_fu_1453_p2;
wire   [22:0] select_ln393_21_fu_1379_p3;
wire   [12:0] select_ln393_22_fu_1385_p3;
wire   [22:0] select_ln393_23_fu_1391_p3;
wire   [22:0] add_ln1353_16_fu_1480_p2;
wire   [22:0] select_ln393_24_fu_1397_p3;
wire   [10:0] select_ln393_25_fu_1403_p3;
wire   [20:0] select_ln393_26_fu_1409_p3;
wire   [20:0] add_ln1353_17_fu_1507_p2;
wire   [20:0] select_ln393_27_fu_1415_p3;
wire   [11:0] select_ln393_28_fu_1421_p3;
wire   [22:0] select_ln393_29_fu_1427_p3;
wire   [22:0] add_ln1353_18_fu_1534_p2;
wire   [22:0] select_ln393_30_fu_1433_p3;
wire   [0:0] o_clear_fu_2394_p2;
wire   [15:0] firPartialRes0_0_V_2_fu_2405_p2;
wire   [15:0] add_ln700_fu_2410_p2;
wire   [15:0] select_ln398_8_fu_2423_p3;
wire   [15:0] select_ln398_fu_2415_p3;
wire   [15:0] firPartialRes0_1_V_2_fu_2463_p2;
wire   [15:0] add_ln700_106_fu_2468_p2;
wire   [15:0] select_ln398_12_fu_2481_p3;
wire   [15:0] select_ln398_11_fu_2473_p3;
wire   [15:0] firPartialRes0_2_V_1_fu_2521_p2;
wire   [15:0] add_ln700_108_fu_2526_p2;
wire   [15:0] select_ln398_16_fu_2539_p3;
wire   [15:0] select_ln398_15_fu_2531_p3;
wire   [15:0] firPartialRes0_3_V_1_fu_2579_p2;
wire   [15:0] add_ln700_110_fu_2584_p2;
wire   [15:0] select_ln398_20_fu_2597_p3;
wire   [15:0] select_ln398_19_fu_2589_p3;
wire  signed [28:0] sext_ln393_fu_2747_p1;
wire  signed [28:0] sext_ln1352_fu_2771_p1;
wire   [28:0] ret_V_45_fu_2774_p2;
wire  signed [28:0] sext_ln393_4_fu_2750_p1;
wire   [28:0] ret_V_23_fu_2786_p2;
wire   [9:0] tmp_fu_2792_p4;
wire   [0:0] icmp_ln895_30_fu_2802_p2;
wire   [3:0] trunc_ln_fu_2808_p4;
wire   [0:0] icmp_ln895_fu_2780_p2;
wire   [3:0] select_ln192_fu_2818_p3;
wire  signed [28:0] sext_ln1352_4_fu_2834_p1;
wire   [28:0] ret_V_46_fu_2837_p2;
wire   [28:0] ret_V_26_fu_2849_p2;
wire   [9:0] tmp_47_fu_2855_p4;
wire   [0:0] icmp_ln895_32_fu_2865_p2;
wire   [3:0] trunc_ln214_s_fu_2871_p4;
wire   [0:0] icmp_ln895_31_fu_2843_p2;
wire   [3:0] select_ln192_4_fu_2881_p3;
wire  signed [29:0] sext_ln393_5_fu_2753_p1;
wire  signed [29:0] sext_ln1352_5_fu_2897_p1;
wire   [29:0] ret_V_47_fu_2900_p2;
wire  signed [28:0] sext_ln393_6_fu_2756_p1;
(* use_dsp48 = "no" *) wire   [28:0] ret_V_29_fu_2912_p2;
wire   [9:0] tmp_48_fu_2917_p4;
wire   [0:0] icmp_ln895_34_fu_2927_p2;
wire   [3:0] trunc_ln214_3_fu_2933_p4;
wire   [0:0] icmp_ln895_33_fu_2906_p2;
wire   [3:0] select_ln192_5_fu_2943_p3;
wire  signed [29:0] sext_ln1352_6_fu_2959_p1;
wire   [29:0] ret_V_48_fu_2962_p2;
(* use_dsp48 = "no" *) wire   [28:0] ret_V_32_fu_2974_p2;
wire   [9:0] tmp_49_fu_2979_p4;
wire   [0:0] icmp_ln895_36_fu_2989_p2;
wire   [3:0] trunc_ln214_4_fu_2995_p4;
wire   [0:0] icmp_ln895_35_fu_2968_p2;
wire   [3:0] select_ln192_6_fu_3005_p3;
wire  signed [27:0] sext_ln393_7_fu_2759_p1;
wire  signed [27:0] sext_ln1352_7_fu_3021_p1;
wire   [27:0] ret_V_49_fu_3024_p2;
wire  signed [27:0] sext_ln393_8_fu_2762_p1;
wire   [27:0] ret_V_35_fu_3036_p2;
wire   [8:0] tmp_50_fu_3042_p4;
wire   [0:0] icmp_ln895_38_fu_3052_p2;
wire   [3:0] trunc_ln214_5_fu_3058_p4;
wire   [0:0] icmp_ln895_37_fu_3030_p2;
wire   [3:0] select_ln192_7_fu_3068_p3;
wire  signed [27:0] sext_ln1352_8_fu_3084_p1;
wire   [27:0] ret_V_50_fu_3087_p2;
wire   [27:0] ret_V_38_fu_3099_p2;
wire   [8:0] tmp_51_fu_3105_p4;
wire   [0:0] icmp_ln895_40_fu_3115_p2;
wire   [3:0] trunc_ln214_6_fu_3121_p4;
wire   [0:0] icmp_ln895_39_fu_3093_p2;
wire   [3:0] select_ln192_8_fu_3131_p3;
wire  signed [28:0] sext_ln393_9_fu_2765_p1;
wire  signed [28:0] sext_ln1352_9_fu_3147_p1;
wire   [28:0] ret_V_51_fu_3150_p2;
wire  signed [28:0] sext_ln393_10_fu_2768_p1;
wire   [28:0] ret_V_41_fu_3162_p2;
wire   [9:0] tmp_52_fu_3168_p4;
wire   [0:0] icmp_ln895_42_fu_3178_p2;
wire   [3:0] trunc_ln214_7_fu_3184_p4;
wire   [0:0] icmp_ln895_41_fu_3156_p2;
wire   [3:0] select_ln192_9_fu_3194_p3;
wire  signed [28:0] sext_ln1352_10_fu_3210_p1;
wire   [28:0] ret_V_52_fu_3213_p2;
wire   [28:0] ret_V_44_fu_3225_p2;
wire   [9:0] tmp_53_fu_3231_p4;
wire   [0:0] icmp_ln895_44_fu_3241_p2;
wire   [3:0] trunc_ln214_8_fu_3247_p4;
wire   [0:0] icmp_ln895_43_fu_3219_p2;
wire   [3:0] select_ln192_10_fu_3257_p3;
wire   [11:0] ret_V_fu_3286_p0;
wire   [27:0] zext_ln393_2_fu_2711_p1;
wire   [11:0] ret_V_24_fu_3292_p0;
wire   [12:0] ret_V_27_fu_3298_p0;
wire   [28:0] zext_ln393_3_fu_2714_p1;
wire   [12:0] ret_V_30_fu_3304_p0;
wire   [10:0] ret_V_33_fu_3310_p0;
wire   [26:0] zext_ln393_4_fu_2717_p1;
wire   [10:0] ret_V_36_fu_3316_p0;
wire   [11:0] ret_V_39_fu_3322_p0;
wire   [27:0] zext_ln393_5_fu_2720_p1;
wire   [11:0] ret_V_42_fu_3328_p0;
wire    ap_CS_fsm_state15;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [42:0] grp_fu_1015_p10;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
end

convDSPOpt_5_convbnm #(
    .DataWidth( 12 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
conv_1_inc_new_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_inc_new_V_0_address0),
    .ce0(conv_1_inc_new_V_0_ce0),
    .q0(conv_1_inc_new_V_0_q0),
    .address1(conv_1_inc_new_V_0_address1),
    .ce1(conv_1_inc_new_V_0_ce1),
    .q1(conv_1_inc_new_V_0_q1)
);

convDSPOpt_5_convbom #(
    .DataWidth( 23 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
conv_1_bias_new_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_bias_new_V_0_address0),
    .ce0(conv_1_bias_new_V_0_ce0),
    .q0(conv_1_bias_new_V_0_q0),
    .address1(conv_1_bias_new_V_0_address1),
    .ce1(conv_1_bias_new_V_0_ce1),
    .q1(conv_1_bias_new_V_0_q1)
);

convDSPOpt_5_convbpm #(
    .DataWidth( 13 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
conv_1_inc_new_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_inc_new_V_1_address0),
    .ce0(conv_1_inc_new_V_1_ce0),
    .q0(conv_1_inc_new_V_1_q0),
    .address1(conv_1_inc_new_V_1_address1),
    .ce1(conv_1_inc_new_V_1_ce1),
    .q1(conv_1_inc_new_V_1_q1)
);

convDSPOpt_5_convbqm #(
    .DataWidth( 23 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
conv_1_bias_new_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_bias_new_V_1_address0),
    .ce0(conv_1_bias_new_V_1_ce0),
    .q0(conv_1_bias_new_V_1_q0),
    .address1(conv_1_bias_new_V_1_address1),
    .ce1(conv_1_bias_new_V_1_ce1),
    .q1(conv_1_bias_new_V_1_q1)
);

convDSPOpt_5_convbrm #(
    .DataWidth( 11 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
conv_1_inc_new_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_inc_new_V_2_address0),
    .ce0(conv_1_inc_new_V_2_ce0),
    .q0(conv_1_inc_new_V_2_q0),
    .address1(conv_1_inc_new_V_2_address1),
    .ce1(conv_1_inc_new_V_2_ce1),
    .q1(conv_1_inc_new_V_2_q1)
);

convDSPOpt_5_convbsm #(
    .DataWidth( 21 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
conv_1_bias_new_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_bias_new_V_2_address0),
    .ce0(conv_1_bias_new_V_2_ce0),
    .q0(conv_1_bias_new_V_2_q0),
    .address1(conv_1_bias_new_V_2_address1),
    .ce1(conv_1_bias_new_V_2_ce1),
    .q1(conv_1_bias_new_V_2_q1)
);

convDSPOpt_5_convbtn #(
    .DataWidth( 12 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
conv_1_inc_new_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_inc_new_V_3_address0),
    .ce0(conv_1_inc_new_V_3_ce0),
    .q0(conv_1_inc_new_V_3_q0),
    .address1(conv_1_inc_new_V_3_address1),
    .ce1(conv_1_inc_new_V_3_ce1),
    .q1(conv_1_inc_new_V_3_q1)
);

convDSPOpt_5_convbun #(
    .DataWidth( 23 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
conv_1_bias_new_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_bias_new_V_3_address0),
    .ce0(conv_1_bias_new_V_3_ce0),
    .q0(conv_1_bias_new_V_3_q0),
    .address1(conv_1_bias_new_V_3_address1),
    .ce1(conv_1_bias_new_V_3_ce1),
    .q1(conv_1_bias_new_V_3_q1)
);

convDSPOpt_5_convbvn #(
    .DataWidth( 64 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
conv_1_w_new_V_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_w_new_V_0_2_address0),
    .ce0(conv_1_w_new_V_0_2_ce0),
    .q0(conv_1_w_new_V_0_2_q0)
);

convDSPOpt_5_convbwn #(
    .DataWidth( 64 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
conv_1_w_new_V_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_w_new_V_0_1_address0),
    .ce0(conv_1_w_new_V_0_1_ce0),
    .q0(conv_1_w_new_V_0_1_q0)
);

convDSPOpt_5_convbxn #(
    .DataWidth( 64 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
conv_1_w_new_V_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_w_new_V_0_0_address0),
    .ce0(conv_1_w_new_V_0_0_ce0),
    .q0(conv_1_w_new_V_0_0_q0)
);

convDSPOpt_5_convbyn #(
    .DataWidth( 64 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
conv_1_w_new_V_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_w_new_V_1_2_address0),
    .ce0(conv_1_w_new_V_1_2_ce0),
    .q0(conv_1_w_new_V_1_2_q0)
);

convDSPOpt_5_convbzo #(
    .DataWidth( 64 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
conv_1_w_new_V_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_w_new_V_1_1_address0),
    .ce0(conv_1_w_new_V_1_1_ce0),
    .q0(conv_1_w_new_V_1_1_q0)
);

convDSPOpt_5_convbAo #(
    .DataWidth( 63 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
conv_1_w_new_V_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_w_new_V_1_0_address0),
    .ce0(conv_1_w_new_V_1_0_ce0),
    .q0(conv_1_w_new_V_1_0_q0)
);

convDSPOpt_5_convbBo #(
    .DataWidth( 64 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
conv_1_w_new_V_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_w_new_V_2_2_address0),
    .ce0(conv_1_w_new_V_2_2_ce0),
    .q0(conv_1_w_new_V_2_2_q0)
);

convDSPOpt_5_convbCo #(
    .DataWidth( 64 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
conv_1_w_new_V_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_w_new_V_2_1_address0),
    .ce0(conv_1_w_new_V_2_1_ce0),
    .q0(conv_1_w_new_V_2_1_q0)
);

convDSPOpt_5_convbDo #(
    .DataWidth( 64 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
conv_1_w_new_V_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_w_new_V_2_0_address0),
    .ce0(conv_1_w_new_V_2_0_ce0),
    .q0(conv_1_w_new_V_2_0_q0)
);

convDSPOpt_5_convbEo #(
    .DataWidth( 64 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
conv_1_w_new_V_3_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_w_new_V_3_2_address0),
    .ce0(conv_1_w_new_V_3_2_ce0),
    .q0(conv_1_w_new_V_3_2_q0)
);

convDSPOpt_5_convbFp #(
    .DataWidth( 64 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
conv_1_w_new_V_3_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_w_new_V_3_1_address0),
    .ce0(conv_1_w_new_V_3_1_ce0),
    .q0(conv_1_w_new_V_3_1_q0)
);

convDSPOpt_5_convbGp #(
    .DataWidth( 64 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
conv_1_w_new_V_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_w_new_V_3_0_address0),
    .ce0(conv_1_w_new_V_3_0_ce0),
    .q0(conv_1_w_new_V_3_0_q0)
);

simd_MAC_2 grp_simd_MAC_2_fu_811(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .wpack_0_V_read(wpacks_0_0_V_reg_3977),
    .wpack_1_V_read(wpacks_0_1_V_reg_3982),
    .wpack_2_V_read(wpacks_0_2_V_reg_3987),
    .wpack_3_V_read(wpacks_0_3_V_reg_3992),
    .wpack_4_V_read(wpacks_0_4_V_reg_3997),
    .wpack_5_V_read(wpacks_0_5_V_reg_4002),
    .wpack_6_V_read(wpacks_0_6_V_reg_4007),
    .wpack_7_V_read(wpacks_0_7_V_reg_4012),
    .wpack_8_V_read(wpacks_0_8_V_reg_4017),
    .wpack_9_V_read(wpacks_0_9_V_reg_4022),
    .wpack_10_V_read(wpacks_0_10_V_reg_4027),
    .wpack_11_V_read(wpacks_0_11_V_reg_4032),
    .wpack_12_V_read(wpacks_0_12_V_reg_4037),
    .wpack_13_V_read(wpacks_0_13_V_reg_4042),
    .wpack_14_V_read(wpacks_0_14_V_reg_4047),
    .wpack_15_V_read(wpacks_0_15_V_reg_4052),
    .ipack_0_V_read(ipack_0_V_fu_2122_p4),
    .ipack_1_V_read(ipack_1_V_fu_2134_p4),
    .ipack_2_V_read(ipack_2_V_fu_2146_p4),
    .ipack_3_V_read(ipack_3_V_fu_2158_p4),
    .ipack_4_V_read(ipack_4_V_fu_2170_p4),
    .ipack_5_V_read(ipack_5_V_fu_2182_p4),
    .ipack_6_V_read(ipack_6_V_fu_2194_p4),
    .ipack_7_V_read(ipack_7_V_fu_2206_p4),
    .ipack_8_V_read(ipack_8_V_fu_2218_p4),
    .ipack_9_V_read(ipack_9_V_fu_2230_p4),
    .ipack_10_V_read(ipack_10_V_fu_2242_p4),
    .ipack_11_V_read(ipack_11_V_fu_2254_p4),
    .ipack_12_V_read(ipack_12_V_fu_2266_p4),
    .ipack_13_V_read(ipack_13_V_fu_2278_p4),
    .ipack_14_V_read(ipack_14_V_fu_2290_p4),
    .ipack_15_V_read(ipack_15_V_fu_2302_p4),
    .ap_return_0(grp_simd_MAC_2_fu_811_ap_return_0),
    .ap_return_1(grp_simd_MAC_2_fu_811_ap_return_1),
    .ap_return_2(grp_simd_MAC_2_fu_811_ap_return_2),
    .ap_return_3(grp_simd_MAC_2_fu_811_ap_return_3),
    .ap_ce(grp_simd_MAC_2_fu_811_ap_ce)
);

simd_MAC_2 grp_simd_MAC_2_fu_847(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .wpack_0_V_read(wpacks_1_0_V_reg_4057),
    .wpack_1_V_read(wpacks_1_1_V_reg_4062),
    .wpack_2_V_read(wpacks_1_2_V_reg_4067),
    .wpack_3_V_read(wpacks_1_3_V_reg_4072),
    .wpack_4_V_read(wpacks_1_4_V_reg_4077),
    .wpack_5_V_read(wpacks_1_5_V_reg_4082),
    .wpack_6_V_read(wpacks_1_6_V_reg_4087),
    .wpack_7_V_read(wpacks_1_7_V_reg_4092),
    .wpack_8_V_read(wpacks_1_8_V_reg_4097),
    .wpack_9_V_read(wpacks_1_9_V_reg_4102),
    .wpack_10_V_read(wpacks_1_10_V_reg_4107),
    .wpack_11_V_read(wpacks_1_11_V_reg_4112),
    .wpack_12_V_read(wpacks_1_12_V_reg_4117),
    .wpack_13_V_read(wpacks_1_13_V_reg_4122),
    .wpack_14_V_read(wpacks_1_14_V_reg_4127),
    .wpack_15_V_read(wpacks_1_15_V_reg_4132),
    .ipack_0_V_read(ipack_0_V_fu_2122_p4),
    .ipack_1_V_read(ipack_1_V_fu_2134_p4),
    .ipack_2_V_read(ipack_2_V_fu_2146_p4),
    .ipack_3_V_read(ipack_3_V_fu_2158_p4),
    .ipack_4_V_read(ipack_4_V_fu_2170_p4),
    .ipack_5_V_read(ipack_5_V_fu_2182_p4),
    .ipack_6_V_read(ipack_6_V_fu_2194_p4),
    .ipack_7_V_read(ipack_7_V_fu_2206_p4),
    .ipack_8_V_read(ipack_8_V_fu_2218_p4),
    .ipack_9_V_read(ipack_9_V_fu_2230_p4),
    .ipack_10_V_read(ipack_10_V_fu_2242_p4),
    .ipack_11_V_read(ipack_11_V_fu_2254_p4),
    .ipack_12_V_read(ipack_12_V_fu_2266_p4),
    .ipack_13_V_read(ipack_13_V_fu_2278_p4),
    .ipack_14_V_read(ipack_14_V_fu_2290_p4),
    .ipack_15_V_read(ipack_15_V_fu_2302_p4),
    .ap_return_0(grp_simd_MAC_2_fu_847_ap_return_0),
    .ap_return_1(grp_simd_MAC_2_fu_847_ap_return_1),
    .ap_return_2(grp_simd_MAC_2_fu_847_ap_return_2),
    .ap_return_3(grp_simd_MAC_2_fu_847_ap_return_3),
    .ap_ce(grp_simd_MAC_2_fu_847_ap_ce)
);

simd_MAC_2 grp_simd_MAC_2_fu_883(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .wpack_0_V_read(wpacks_2_0_V_reg_4137),
    .wpack_1_V_read(wpacks_2_1_V_reg_4142),
    .wpack_2_V_read(wpacks_2_2_V_reg_4147),
    .wpack_3_V_read(wpacks_2_3_V_reg_4152),
    .wpack_4_V_read(wpacks_2_4_V_reg_4157),
    .wpack_5_V_read(wpacks_2_5_V_reg_4162),
    .wpack_6_V_read(wpacks_2_6_V_reg_4167),
    .wpack_7_V_read(wpacks_2_7_V_reg_4172),
    .wpack_8_V_read(wpacks_2_8_V_reg_4177),
    .wpack_9_V_read(wpacks_2_9_V_reg_4182),
    .wpack_10_V_read(wpacks_2_10_V_reg_4187),
    .wpack_11_V_read(wpacks_2_11_V_reg_4192),
    .wpack_12_V_read(wpacks_2_12_V_reg_4197),
    .wpack_13_V_read(wpacks_2_13_V_reg_4202),
    .wpack_14_V_read(wpacks_2_14_V_reg_4207),
    .wpack_15_V_read(wpacks_2_15_V_reg_4212),
    .ipack_0_V_read(ipack_0_V_fu_2122_p4),
    .ipack_1_V_read(ipack_1_V_fu_2134_p4),
    .ipack_2_V_read(ipack_2_V_fu_2146_p4),
    .ipack_3_V_read(ipack_3_V_fu_2158_p4),
    .ipack_4_V_read(ipack_4_V_fu_2170_p4),
    .ipack_5_V_read(ipack_5_V_fu_2182_p4),
    .ipack_6_V_read(ipack_6_V_fu_2194_p4),
    .ipack_7_V_read(ipack_7_V_fu_2206_p4),
    .ipack_8_V_read(ipack_8_V_fu_2218_p4),
    .ipack_9_V_read(ipack_9_V_fu_2230_p4),
    .ipack_10_V_read(ipack_10_V_fu_2242_p4),
    .ipack_11_V_read(ipack_11_V_fu_2254_p4),
    .ipack_12_V_read(ipack_12_V_fu_2266_p4),
    .ipack_13_V_read(ipack_13_V_fu_2278_p4),
    .ipack_14_V_read(ipack_14_V_fu_2290_p4),
    .ipack_15_V_read(ipack_15_V_fu_2302_p4),
    .ap_return_0(grp_simd_MAC_2_fu_883_ap_return_0),
    .ap_return_1(grp_simd_MAC_2_fu_883_ap_return_1),
    .ap_return_2(grp_simd_MAC_2_fu_883_ap_return_2),
    .ap_return_3(grp_simd_MAC_2_fu_883_ap_return_3),
    .ap_ce(grp_simd_MAC_2_fu_883_ap_ce)
);

simd_MAC_2 grp_simd_MAC_2_fu_919(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .wpack_0_V_read(wpacks_3_0_V_reg_4217),
    .wpack_1_V_read(wpacks_3_1_V_reg_4222),
    .wpack_2_V_read(wpacks_3_2_V_reg_4227),
    .wpack_3_V_read(wpacks_3_3_V_reg_4232),
    .wpack_4_V_read(wpacks_3_4_V_reg_4237),
    .wpack_5_V_read(wpacks_3_5_V_reg_4242),
    .wpack_6_V_read(wpacks_3_6_V_reg_4247),
    .wpack_7_V_read(wpacks_3_7_V_reg_4252),
    .wpack_8_V_read(wpacks_3_8_V_reg_4257),
    .wpack_9_V_read(wpacks_3_9_V_reg_4262),
    .wpack_10_V_read(wpacks_3_10_V_reg_4267),
    .wpack_11_V_read(wpacks_3_11_V_reg_4272),
    .wpack_12_V_read(wpacks_3_12_V_reg_4277),
    .wpack_13_V_read(wpacks_3_13_V_reg_4282),
    .wpack_14_V_read(wpacks_3_14_V_reg_4287),
    .wpack_15_V_read(wpacks_3_15_V_reg_4292),
    .ipack_0_V_read(ipack_0_V_fu_2122_p4),
    .ipack_1_V_read(ipack_1_V_fu_2134_p4),
    .ipack_2_V_read(ipack_2_V_fu_2146_p4),
    .ipack_3_V_read(ipack_3_V_fu_2158_p4),
    .ipack_4_V_read(ipack_4_V_fu_2170_p4),
    .ipack_5_V_read(ipack_5_V_fu_2182_p4),
    .ipack_6_V_read(ipack_6_V_fu_2194_p4),
    .ipack_7_V_read(ipack_7_V_fu_2206_p4),
    .ipack_8_V_read(ipack_8_V_fu_2218_p4),
    .ipack_9_V_read(ipack_9_V_fu_2230_p4),
    .ipack_10_V_read(ipack_10_V_fu_2242_p4),
    .ipack_11_V_read(ipack_11_V_fu_2254_p4),
    .ipack_12_V_read(ipack_12_V_fu_2266_p4),
    .ipack_13_V_read(ipack_13_V_fu_2278_p4),
    .ipack_14_V_read(ipack_14_V_fu_2290_p4),
    .ipack_15_V_read(ipack_15_V_fu_2302_p4),
    .ap_return_0(grp_simd_MAC_2_fu_919_ap_return_0),
    .ap_return_1(grp_simd_MAC_2_fu_919_ap_return_1),
    .ap_return_2(grp_simd_MAC_2_fu_919_ap_return_2),
    .ap_return_3(grp_simd_MAC_2_fu_919_ap_return_3),
    .ap_ce(grp_simd_MAC_2_fu_919_ap_ce)
);

pack_weight_data_2 call_ret49_i_pack_weight_data_2_fu_955(
    .ap_ready(call_ret49_i_pack_weight_data_2_fu_955_ap_ready),
    .w2_V(conv_1_w_new_V_0_2_q0),
    .w1_V(conv_1_w_new_V_0_1_q0),
    .w0_V(conv_1_w_new_V_0_0_q0),
    .ap_return_0(call_ret49_i_pack_weight_data_2_fu_955_ap_return_0),
    .ap_return_1(call_ret49_i_pack_weight_data_2_fu_955_ap_return_1),
    .ap_return_2(call_ret49_i_pack_weight_data_2_fu_955_ap_return_2),
    .ap_return_3(call_ret49_i_pack_weight_data_2_fu_955_ap_return_3),
    .ap_return_4(call_ret49_i_pack_weight_data_2_fu_955_ap_return_4),
    .ap_return_5(call_ret49_i_pack_weight_data_2_fu_955_ap_return_5),
    .ap_return_6(call_ret49_i_pack_weight_data_2_fu_955_ap_return_6),
    .ap_return_7(call_ret49_i_pack_weight_data_2_fu_955_ap_return_7),
    .ap_return_8(call_ret49_i_pack_weight_data_2_fu_955_ap_return_8),
    .ap_return_9(call_ret49_i_pack_weight_data_2_fu_955_ap_return_9),
    .ap_return_10(call_ret49_i_pack_weight_data_2_fu_955_ap_return_10),
    .ap_return_11(call_ret49_i_pack_weight_data_2_fu_955_ap_return_11),
    .ap_return_12(call_ret49_i_pack_weight_data_2_fu_955_ap_return_12),
    .ap_return_13(call_ret49_i_pack_weight_data_2_fu_955_ap_return_13),
    .ap_return_14(call_ret49_i_pack_weight_data_2_fu_955_ap_return_14),
    .ap_return_15(call_ret49_i_pack_weight_data_2_fu_955_ap_return_15)
);

pack_weight_data_2 call_ret50_i_pack_weight_data_2_fu_965(
    .ap_ready(call_ret50_i_pack_weight_data_2_fu_965_ap_ready),
    .w2_V(conv_1_w_new_V_1_2_q0),
    .w1_V(conv_1_w_new_V_1_1_q0),
    .w0_V(call_ret50_i_pack_weight_data_2_fu_965_w0_V),
    .ap_return_0(call_ret50_i_pack_weight_data_2_fu_965_ap_return_0),
    .ap_return_1(call_ret50_i_pack_weight_data_2_fu_965_ap_return_1),
    .ap_return_2(call_ret50_i_pack_weight_data_2_fu_965_ap_return_2),
    .ap_return_3(call_ret50_i_pack_weight_data_2_fu_965_ap_return_3),
    .ap_return_4(call_ret50_i_pack_weight_data_2_fu_965_ap_return_4),
    .ap_return_5(call_ret50_i_pack_weight_data_2_fu_965_ap_return_5),
    .ap_return_6(call_ret50_i_pack_weight_data_2_fu_965_ap_return_6),
    .ap_return_7(call_ret50_i_pack_weight_data_2_fu_965_ap_return_7),
    .ap_return_8(call_ret50_i_pack_weight_data_2_fu_965_ap_return_8),
    .ap_return_9(call_ret50_i_pack_weight_data_2_fu_965_ap_return_9),
    .ap_return_10(call_ret50_i_pack_weight_data_2_fu_965_ap_return_10),
    .ap_return_11(call_ret50_i_pack_weight_data_2_fu_965_ap_return_11),
    .ap_return_12(call_ret50_i_pack_weight_data_2_fu_965_ap_return_12),
    .ap_return_13(call_ret50_i_pack_weight_data_2_fu_965_ap_return_13),
    .ap_return_14(call_ret50_i_pack_weight_data_2_fu_965_ap_return_14),
    .ap_return_15(call_ret50_i_pack_weight_data_2_fu_965_ap_return_15)
);

pack_weight_data_2 call_ret51_i_pack_weight_data_2_fu_974(
    .ap_ready(call_ret51_i_pack_weight_data_2_fu_974_ap_ready),
    .w2_V(conv_1_w_new_V_2_2_q0),
    .w1_V(conv_1_w_new_V_2_1_q0),
    .w0_V(conv_1_w_new_V_2_0_q0),
    .ap_return_0(call_ret51_i_pack_weight_data_2_fu_974_ap_return_0),
    .ap_return_1(call_ret51_i_pack_weight_data_2_fu_974_ap_return_1),
    .ap_return_2(call_ret51_i_pack_weight_data_2_fu_974_ap_return_2),
    .ap_return_3(call_ret51_i_pack_weight_data_2_fu_974_ap_return_3),
    .ap_return_4(call_ret51_i_pack_weight_data_2_fu_974_ap_return_4),
    .ap_return_5(call_ret51_i_pack_weight_data_2_fu_974_ap_return_5),
    .ap_return_6(call_ret51_i_pack_weight_data_2_fu_974_ap_return_6),
    .ap_return_7(call_ret51_i_pack_weight_data_2_fu_974_ap_return_7),
    .ap_return_8(call_ret51_i_pack_weight_data_2_fu_974_ap_return_8),
    .ap_return_9(call_ret51_i_pack_weight_data_2_fu_974_ap_return_9),
    .ap_return_10(call_ret51_i_pack_weight_data_2_fu_974_ap_return_10),
    .ap_return_11(call_ret51_i_pack_weight_data_2_fu_974_ap_return_11),
    .ap_return_12(call_ret51_i_pack_weight_data_2_fu_974_ap_return_12),
    .ap_return_13(call_ret51_i_pack_weight_data_2_fu_974_ap_return_13),
    .ap_return_14(call_ret51_i_pack_weight_data_2_fu_974_ap_return_14),
    .ap_return_15(call_ret51_i_pack_weight_data_2_fu_974_ap_return_15)
);

pack_weight_data_2 call_ret52_i_pack_weight_data_2_fu_984(
    .ap_ready(call_ret52_i_pack_weight_data_2_fu_984_ap_ready),
    .w2_V(conv_1_w_new_V_3_2_q0),
    .w1_V(conv_1_w_new_V_3_1_q0),
    .w0_V(conv_1_w_new_V_3_0_q0),
    .ap_return_0(call_ret52_i_pack_weight_data_2_fu_984_ap_return_0),
    .ap_return_1(call_ret52_i_pack_weight_data_2_fu_984_ap_return_1),
    .ap_return_2(call_ret52_i_pack_weight_data_2_fu_984_ap_return_2),
    .ap_return_3(call_ret52_i_pack_weight_data_2_fu_984_ap_return_3),
    .ap_return_4(call_ret52_i_pack_weight_data_2_fu_984_ap_return_4),
    .ap_return_5(call_ret52_i_pack_weight_data_2_fu_984_ap_return_5),
    .ap_return_6(call_ret52_i_pack_weight_data_2_fu_984_ap_return_6),
    .ap_return_7(call_ret52_i_pack_weight_data_2_fu_984_ap_return_7),
    .ap_return_8(call_ret52_i_pack_weight_data_2_fu_984_ap_return_8),
    .ap_return_9(call_ret52_i_pack_weight_data_2_fu_984_ap_return_9),
    .ap_return_10(call_ret52_i_pack_weight_data_2_fu_984_ap_return_10),
    .ap_return_11(call_ret52_i_pack_weight_data_2_fu_984_ap_return_11),
    .ap_return_12(call_ret52_i_pack_weight_data_2_fu_984_ap_return_12),
    .ap_return_13(call_ret52_i_pack_weight_data_2_fu_984_ap_return_13),
    .ap_return_14(call_ret52_i_pack_weight_data_2_fu_984_ap_return_14),
    .ap_return_15(call_ret52_i_pack_weight_data_2_fu_984_ap_return_15)
);

ultra_net_mul_12nbHp #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 43 ))
ultra_net_mul_12nbHp_U287(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1015_p0),
    .din1(grp_fu_1015_p1),
    .ce(1'b1),
    .dout(grp_fu_1015_p2)
);

ultra_net_mul_mulbIp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 28 ))
ultra_net_mul_mulbIp_U288(
    .din0(ret_V_fu_3286_p0),
    .din1(outPartialArr0_0_V_reg_4497),
    .dout(ret_V_fu_3286_p2)
);

ultra_net_mul_mulbIp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 28 ))
ultra_net_mul_mulbIp_U289(
    .din0(ret_V_24_fu_3292_p0),
    .din1(outPartialArr1_0_V_reg_4502),
    .dout(ret_V_24_fu_3292_p2)
);

ultra_net_mul_mulbJp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
ultra_net_mul_mulbJp_U290(
    .din0(ret_V_27_fu_3298_p0),
    .din1(outPartialArr0_1_V_reg_4507),
    .dout(ret_V_27_fu_3298_p2)
);

ultra_net_mul_mulbJp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
ultra_net_mul_mulbJp_U291(
    .din0(ret_V_30_fu_3304_p0),
    .din1(outPartialArr1_1_V_reg_4512),
    .dout(ret_V_30_fu_3304_p2)
);

ultra_net_mul_mulbKp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 27 ))
ultra_net_mul_mulbKp_U292(
    .din0(ret_V_33_fu_3310_p0),
    .din1(outPartialArr0_2_V_reg_4517),
    .dout(ret_V_33_fu_3310_p2)
);

ultra_net_mul_mulbKp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 27 ))
ultra_net_mul_mulbKp_U293(
    .din0(ret_V_36_fu_3316_p0),
    .din1(outPartialArr1_2_V_reg_4522),
    .dout(ret_V_36_fu_3316_p2)
);

ultra_net_mul_mulbIp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 28 ))
ultra_net_mul_mulbIp_U294(
    .din0(ret_V_39_fu_3322_p0),
    .din1(outPartialArr0_3_V_reg_4527),
    .dout(ret_V_39_fu_3322_p2)
);

ultra_net_mul_mulbIp #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 28 ))
ultra_net_mul_mulbIp_U295(
    .din0(ret_V_42_fu_3328_p0),
    .din1(outPartialArr1_3_V_reg_4532),
    .dout(ret_V_42_fu_3328_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state15)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((icmp_ln392_fu_1059_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter10 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state5)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln392_fu_1059_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten239_reg_745 <= add_ln392_2_fu_1064_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        indvar_flatten239_reg_745 <= 43'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln392_fu_1059_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten53_reg_756 <= select_ln393_46_fu_1146_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        indvar_flatten53_reg_756 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln392_fu_1059_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_778 <= select_ln394_2_fu_1132_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        indvar_flatten_reg_778 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln392_reg_3490 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        infoldIdx_0_i_reg_800 <= infoldIdx_fu_1361_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        infoldIdx_0_i_reg_800 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln392_fu_1059_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        peIdx_0_i_reg_767 <= select_ln393_45_fu_1118_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        peIdx_0_i_reg_767 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln392_reg_3490 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_0_i_reg_789 <= select_ln394_fu_1311_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        w_0_i_reg_789 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd0 == and_ln393_6_reg_3529) & (icmp_ln393_reg_3499 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln1353_12_reg_3623 <= add_ln1353_12_fu_1160_p2;
        add_ln1353_13_reg_3628 <= add_ln1353_13_fu_1166_p2;
        add_ln1353_14_reg_3633 <= add_ln1353_14_fu_1172_p2;
        add_ln1353_reg_3618 <= add_ln1353_fu_1154_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((reps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        add_ln392_reg_3430[31 : 4] <= add_ln392_fu_1006_p2[31 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln392_fu_1059_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln393_6_reg_3529 <= and_ln393_6_fu_1096_p2;
        icmp_ln393_reg_3499 <= icmp_ln393_fu_1070_p2;
        icmp_ln394_reg_3524 <= icmp_ln394_fu_1090_p2;
        or_ln393_reg_3553 <= or_ln393_fu_1108_p2;
        peIdx_reg_3547 <= peIdx_fu_1102_p2;
        trunc_ln404_2_reg_3558 <= trunc_ln404_2_fu_1114_p1;
        xor_ln393_reg_3518 <= xor_ln393_fu_1084_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln393_6_reg_3529_pp0_iter1_reg <= and_ln393_6_reg_3529;
        icmp_ln392_reg_3490 <= icmp_ln392_fu_1059_p2;
        icmp_ln392_reg_3490_pp0_iter1_reg <= icmp_ln392_reg_3490;
        icmp_ln393_reg_3499_pp0_iter1_reg <= icmp_ln393_reg_3499;
        sub_ln404_reg_3445 <= sub_ln404_fu_1041_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bound74_reg_3440 <= grp_fu_1015_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln392_reg_3490_pp0_iter5_reg == 1'd0))) begin
        call_ret1_reg_4425_0 <= grp_simd_MAC_2_fu_811_ap_return_0;
        call_ret1_reg_4425_1 <= grp_simd_MAC_2_fu_811_ap_return_1;
        call_ret2_reg_4443_0 <= grp_simd_MAC_2_fu_847_ap_return_0;
        call_ret2_reg_4443_1 <= grp_simd_MAC_2_fu_847_ap_return_1;
        call_ret3_reg_4461_0 <= grp_simd_MAC_2_fu_883_ap_return_0;
        call_ret3_reg_4461_1 <= grp_simd_MAC_2_fu_883_ap_return_1;
        call_ret_reg_4479_0 <= grp_simd_MAC_2_fu_919_ap_return_0;
        call_ret_reg_4479_1 <= grp_simd_MAC_2_fu_919_ap_return_1;
        firPartial3_V_0_1_i_reg_4455 <= grp_simd_MAC_2_fu_847_ap_return_3;
        firPartial3_V_0_2_i_reg_4473 <= grp_simd_MAC_2_fu_883_ap_return_3;
        firPartial3_V_0_3_i_reg_4491 <= grp_simd_MAC_2_fu_919_ap_return_3;
        firPartial3_V_0_i_reg_4437 <= grp_simd_MAC_2_fu_811_ap_return_3;
        firPartialRes0_0_V_reg_4431 <= grp_simd_MAC_2_fu_811_ap_return_2;
        firPartialRes0_1_V_reg_4449 <= grp_simd_MAC_2_fu_847_ap_return_2;
        firPartialRes0_2_V_reg_4467 <= grp_simd_MAC_2_fu_883_ap_return_2;
        firPartialRes0_3_V_reg_4485 <= grp_simd_MAC_2_fu_919_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_bias_new_V_0_1_reg_3583 <= conv_1_bias_new_V_0_q0;
        conv_1_bias_new_V_1_1_reg_3593 <= conv_1_bias_new_V_1_q0;
        conv_1_bias_new_V_2_1_reg_3603 <= conv_1_bias_new_V_2_q0;
        conv_1_bias_new_V_3_1_reg_3613 <= conv_1_bias_new_V_3_q0;
        conv_1_inc_new_V_0_l_reg_3578 <= conv_1_inc_new_V_0_q0;
        conv_1_inc_new_V_1_l_reg_3588 <= conv_1_inc_new_V_1_q0;
        conv_1_inc_new_V_2_l_reg_3598 <= conv_1_inc_new_V_2_q0;
        conv_1_inc_new_V_3_l_reg_3608 <= conv_1_inc_new_V_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln392_reg_3490_pp0_iter6_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        firPartialRes0_V_0_3_fu_306 <= select_ln398_9_fu_2431_p3;
        firPartialRes0_V_1_3_fu_310 <= select_ln398_13_fu_2489_p3;
        firPartialRes0_V_2_3_fu_314 <= select_ln398_17_fu_2547_p3;
        firPartialRes0_V_3_3_fu_318 <= select_ln398_21_fu_2605_p3;
        firPartialRes1_0_V_2_fu_322 <= firPartialRes1_0_V_fu_2438_p3;
        firPartialRes1_1_V_2_fu_326 <= firPartialRes1_1_V_fu_2496_p3;
        firPartialRes1_2_V_1_fu_330 <= firPartialRes1_2_V_fu_2554_p3;
        firPartialRes1_3_V_1_fu_334 <= firPartialRes1_3_V_fu_2612_p3;
        outPartialArr0_0_V_2_fu_338 <= outPartialArr0_0_V_fu_2445_p2;
        outPartialArr0_1_V_2_fu_342 <= outPartialArr0_1_V_fu_2503_p2;
        outPartialArr0_2_V_1_fu_346 <= outPartialArr0_2_V_fu_2561_p2;
        outPartialArr0_3_V_1_fu_350 <= outPartialArr0_3_V_fu_2619_p2;
        outPartialArr1_0_V_1_fu_354 <= outPartialArr1_0_V_fu_2451_p2;
        outPartialArr1_1_V_1_fu_358 <= outPartialArr1_1_V_fu_2509_p2;
        outPartialArr1_2_V_1_fu_362 <= outPartialArr1_2_V_fu_2567_p2;
        outPartialArr1_3_V_1_fu_366 <= outPartialArr1_3_V_fu_2625_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln392_reg_3490_pp0_iter2_reg <= icmp_ln392_reg_3490_pp0_iter1_reg;
        icmp_ln392_reg_3490_pp0_iter3_reg <= icmp_ln392_reg_3490_pp0_iter2_reg;
        icmp_ln392_reg_3490_pp0_iter4_reg <= icmp_ln392_reg_3490_pp0_iter3_reg;
        icmp_ln392_reg_3490_pp0_iter5_reg <= icmp_ln392_reg_3490_pp0_iter4_reg;
        icmp_ln392_reg_3490_pp0_iter6_reg <= icmp_ln392_reg_3490_pp0_iter5_reg;
        o_out_reg_3688_pp0_iter2_reg <= o_out_reg_3688;
        o_out_reg_3688_pp0_iter3_reg <= o_out_reg_3688_pp0_iter2_reg;
        o_out_reg_3688_pp0_iter4_reg <= o_out_reg_3688_pp0_iter3_reg;
        o_out_reg_3688_pp0_iter5_reg <= o_out_reg_3688_pp0_iter4_reg;
        o_out_reg_3688_pp0_iter6_reg <= o_out_reg_3688_pp0_iter5_reg;
        o_out_reg_3688_pp0_iter7_reg <= o_out_reg_3688_pp0_iter6_reg;
        o_out_reg_3688_pp0_iter8_reg <= o_out_reg_3688_pp0_iter7_reg;
        o_out_reg_3688_pp0_iter9_reg <= o_out_reg_3688_pp0_iter8_reg;
        select_ln393_33_reg_3757_pp0_iter3_reg <= select_ln393_33_reg_3757;
        select_ln393_33_reg_3757_pp0_iter4_reg <= select_ln393_33_reg_3757_pp0_iter3_reg;
        select_ln393_33_reg_3757_pp0_iter5_reg <= select_ln393_33_reg_3757_pp0_iter4_reg;
        select_ln393_33_reg_3757_pp0_iter6_reg <= select_ln393_33_reg_3757_pp0_iter5_reg;
        select_ln393_33_reg_3757_pp0_iter7_reg <= select_ln393_33_reg_3757_pp0_iter6_reg;
        select_ln393_34_reg_3762_pp0_iter3_reg <= select_ln393_34_reg_3762;
        select_ln393_34_reg_3762_pp0_iter4_reg <= select_ln393_34_reg_3762_pp0_iter3_reg;
        select_ln393_34_reg_3762_pp0_iter5_reg <= select_ln393_34_reg_3762_pp0_iter4_reg;
        select_ln393_34_reg_3762_pp0_iter6_reg <= select_ln393_34_reg_3762_pp0_iter5_reg;
        select_ln393_34_reg_3762_pp0_iter7_reg <= select_ln393_34_reg_3762_pp0_iter6_reg;
        select_ln393_34_reg_3762_pp0_iter8_reg <= select_ln393_34_reg_3762_pp0_iter7_reg;
        select_ln393_35_reg_3767_pp0_iter3_reg <= select_ln393_35_reg_3767;
        select_ln393_35_reg_3767_pp0_iter4_reg <= select_ln393_35_reg_3767_pp0_iter3_reg;
        select_ln393_35_reg_3767_pp0_iter5_reg <= select_ln393_35_reg_3767_pp0_iter4_reg;
        select_ln393_35_reg_3767_pp0_iter6_reg <= select_ln393_35_reg_3767_pp0_iter5_reg;
        select_ln393_35_reg_3767_pp0_iter7_reg <= select_ln393_35_reg_3767_pp0_iter6_reg;
        select_ln393_35_reg_3767_pp0_iter8_reg <= select_ln393_35_reg_3767_pp0_iter7_reg;
        select_ln393_36_reg_3772_pp0_iter3_reg <= select_ln393_36_reg_3772;
        select_ln393_36_reg_3772_pp0_iter4_reg <= select_ln393_36_reg_3772_pp0_iter3_reg;
        select_ln393_36_reg_3772_pp0_iter5_reg <= select_ln393_36_reg_3772_pp0_iter4_reg;
        select_ln393_36_reg_3772_pp0_iter6_reg <= select_ln393_36_reg_3772_pp0_iter5_reg;
        select_ln393_36_reg_3772_pp0_iter7_reg <= select_ln393_36_reg_3772_pp0_iter6_reg;
        select_ln393_37_reg_3777_pp0_iter3_reg <= select_ln393_37_reg_3777;
        select_ln393_37_reg_3777_pp0_iter4_reg <= select_ln393_37_reg_3777_pp0_iter3_reg;
        select_ln393_37_reg_3777_pp0_iter5_reg <= select_ln393_37_reg_3777_pp0_iter4_reg;
        select_ln393_37_reg_3777_pp0_iter6_reg <= select_ln393_37_reg_3777_pp0_iter5_reg;
        select_ln393_37_reg_3777_pp0_iter7_reg <= select_ln393_37_reg_3777_pp0_iter6_reg;
        select_ln393_37_reg_3777_pp0_iter8_reg <= select_ln393_37_reg_3777_pp0_iter7_reg;
        select_ln393_38_reg_3782_pp0_iter3_reg <= select_ln393_38_reg_3782;
        select_ln393_38_reg_3782_pp0_iter4_reg <= select_ln393_38_reg_3782_pp0_iter3_reg;
        select_ln393_38_reg_3782_pp0_iter5_reg <= select_ln393_38_reg_3782_pp0_iter4_reg;
        select_ln393_38_reg_3782_pp0_iter6_reg <= select_ln393_38_reg_3782_pp0_iter5_reg;
        select_ln393_38_reg_3782_pp0_iter7_reg <= select_ln393_38_reg_3782_pp0_iter6_reg;
        select_ln393_38_reg_3782_pp0_iter8_reg <= select_ln393_38_reg_3782_pp0_iter7_reg;
        select_ln393_39_reg_3787_pp0_iter3_reg <= select_ln393_39_reg_3787;
        select_ln393_39_reg_3787_pp0_iter4_reg <= select_ln393_39_reg_3787_pp0_iter3_reg;
        select_ln393_39_reg_3787_pp0_iter5_reg <= select_ln393_39_reg_3787_pp0_iter4_reg;
        select_ln393_39_reg_3787_pp0_iter6_reg <= select_ln393_39_reg_3787_pp0_iter5_reg;
        select_ln393_39_reg_3787_pp0_iter7_reg <= select_ln393_39_reg_3787_pp0_iter6_reg;
        select_ln393_40_reg_3792_pp0_iter3_reg <= select_ln393_40_reg_3792;
        select_ln393_40_reg_3792_pp0_iter4_reg <= select_ln393_40_reg_3792_pp0_iter3_reg;
        select_ln393_40_reg_3792_pp0_iter5_reg <= select_ln393_40_reg_3792_pp0_iter4_reg;
        select_ln393_40_reg_3792_pp0_iter6_reg <= select_ln393_40_reg_3792_pp0_iter5_reg;
        select_ln393_40_reg_3792_pp0_iter7_reg <= select_ln393_40_reg_3792_pp0_iter6_reg;
        select_ln393_40_reg_3792_pp0_iter8_reg <= select_ln393_40_reg_3792_pp0_iter7_reg;
        select_ln393_41_reg_3797_pp0_iter3_reg <= select_ln393_41_reg_3797;
        select_ln393_41_reg_3797_pp0_iter4_reg <= select_ln393_41_reg_3797_pp0_iter3_reg;
        select_ln393_41_reg_3797_pp0_iter5_reg <= select_ln393_41_reg_3797_pp0_iter4_reg;
        select_ln393_41_reg_3797_pp0_iter6_reg <= select_ln393_41_reg_3797_pp0_iter5_reg;
        select_ln393_41_reg_3797_pp0_iter7_reg <= select_ln393_41_reg_3797_pp0_iter6_reg;
        select_ln393_41_reg_3797_pp0_iter8_reg <= select_ln393_41_reg_3797_pp0_iter7_reg;
        select_ln393_42_reg_3802_pp0_iter3_reg <= select_ln393_42_reg_3802;
        select_ln393_42_reg_3802_pp0_iter4_reg <= select_ln393_42_reg_3802_pp0_iter3_reg;
        select_ln393_42_reg_3802_pp0_iter5_reg <= select_ln393_42_reg_3802_pp0_iter4_reg;
        select_ln393_42_reg_3802_pp0_iter6_reg <= select_ln393_42_reg_3802_pp0_iter5_reg;
        select_ln393_42_reg_3802_pp0_iter7_reg <= select_ln393_42_reg_3802_pp0_iter6_reg;
        select_ln393_43_reg_3807_pp0_iter3_reg <= select_ln393_43_reg_3807;
        select_ln393_43_reg_3807_pp0_iter4_reg <= select_ln393_43_reg_3807_pp0_iter3_reg;
        select_ln393_43_reg_3807_pp0_iter5_reg <= select_ln393_43_reg_3807_pp0_iter4_reg;
        select_ln393_43_reg_3807_pp0_iter6_reg <= select_ln393_43_reg_3807_pp0_iter5_reg;
        select_ln393_43_reg_3807_pp0_iter7_reg <= select_ln393_43_reg_3807_pp0_iter6_reg;
        select_ln393_43_reg_3807_pp0_iter8_reg <= select_ln393_43_reg_3807_pp0_iter7_reg;
        select_ln393_44_reg_3812_pp0_iter3_reg <= select_ln393_44_reg_3812;
        select_ln393_44_reg_3812_pp0_iter4_reg <= select_ln393_44_reg_3812_pp0_iter3_reg;
        select_ln393_44_reg_3812_pp0_iter5_reg <= select_ln393_44_reg_3812_pp0_iter4_reg;
        select_ln393_44_reg_3812_pp0_iter6_reg <= select_ln393_44_reg_3812_pp0_iter5_reg;
        select_ln393_44_reg_3812_pp0_iter7_reg <= select_ln393_44_reg_3812_pp0_iter6_reg;
        select_ln393_44_reg_3812_pp0_iter8_reg <= select_ln393_44_reg_3812_pp0_iter7_reg;
        select_ln399_reg_3678_pp0_iter2_reg <= select_ln399_reg_3678;
        select_ln399_reg_3678_pp0_iter3_reg <= select_ln399_reg_3678_pp0_iter2_reg;
        select_ln399_reg_3678_pp0_iter4_reg <= select_ln399_reg_3678_pp0_iter3_reg;
        select_ln399_reg_3678_pp0_iter5_reg <= select_ln399_reg_3678_pp0_iter4_reg;
        select_ln399_reg_3678_pp0_iter6_reg <= select_ln399_reg_3678_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln392_reg_3490 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        o_out_reg_3688 <= o_out_fu_1329_p2;
        select_ln399_reg_3678 <= select_ln399_fu_1289_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln392_reg_3490_pp0_iter6_reg == 1'd0))) begin
        outPartialArr0_0_V_reg_4497 <= outPartialArr0_0_V_fu_2445_p2;
        outPartialArr0_1_V_reg_4507 <= outPartialArr0_1_V_fu_2503_p2;
        outPartialArr0_2_V_reg_4517 <= outPartialArr0_2_V_fu_2561_p2;
        outPartialArr0_3_V_reg_4527 <= outPartialArr0_3_V_fu_2619_p2;
        outPartialArr1_0_V_reg_4502 <= outPartialArr1_0_V_fu_2451_p2;
        outPartialArr1_1_V_reg_4512 <= outPartialArr1_1_V_fu_2509_p2;
        outPartialArr1_2_V_reg_4522 <= outPartialArr1_2_V_fu_2567_p2;
        outPartialArr1_3_V_reg_4532 <= outPartialArr1_3_V_fu_2625_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln392_reg_3490_pp0_iter1_reg == 1'd0))) begin
        p_Result_10_i_i_reg_3917 <= {{vec_V_V_dout[43:40]}};
        p_Result_11_i_i_reg_3927 <= {{vec_V_V_dout[47:44]}};
        p_Result_12_i_i_reg_3937 <= {{vec_V_V_dout[51:48]}};
        p_Result_13_i_i_reg_3947 <= {{vec_V_V_dout[55:52]}};
        p_Result_14_i_i_reg_3957 <= {{vec_V_V_dout[59:56]}};
        p_Result_1_i_i_reg_3827 <= {{vec_V_V_dout[7:4]}};
        p_Result_2_i_i_reg_3837 <= {{vec_V_V_dout[11:8]}};
        p_Result_3_i_i_reg_3847 <= {{vec_V_V_dout[15:12]}};
        p_Result_4_i_i_reg_3857 <= {{vec_V_V_dout[19:16]}};
        p_Result_5_i_i_reg_3867 <= {{vec_V_V_dout[23:20]}};
        p_Result_6_i_i_reg_3877 <= {{vec_V_V_dout[27:24]}};
        p_Result_7_i_i_reg_3887 <= {{vec_V_V_dout[31:28]}};
        p_Result_82_10_i_i_reg_3932 <= {{vec_V_V_dout[111:108]}};
        p_Result_82_11_i_i_reg_3942 <= {{vec_V_V_dout[115:112]}};
        p_Result_82_12_i_i_reg_3952 <= {{vec_V_V_dout[119:116]}};
        p_Result_82_13_i_i_reg_3962 <= {{vec_V_V_dout[123:120]}};
        p_Result_82_14_i_i_reg_3972 <= {{vec_V_V_dout[127:124]}};
        p_Result_82_1_i_i_reg_3832 <= {{vec_V_V_dout[71:68]}};
        p_Result_82_2_i_i_reg_3842 <= {{vec_V_V_dout[75:72]}};
        p_Result_82_3_i_i_reg_3852 <= {{vec_V_V_dout[79:76]}};
        p_Result_82_4_i_i_reg_3862 <= {{vec_V_V_dout[83:80]}};
        p_Result_82_5_i_i_reg_3872 <= {{vec_V_V_dout[87:84]}};
        p_Result_82_6_i_i_reg_3882 <= {{vec_V_V_dout[91:88]}};
        p_Result_82_7_i_i_reg_3892 <= {{vec_V_V_dout[95:92]}};
        p_Result_82_8_i_i_reg_3902 <= {{vec_V_V_dout[99:96]}};
        p_Result_82_9_i_i_reg_3912 <= {{vec_V_V_dout[103:100]}};
        p_Result_82_i_i_133_reg_3922 <= {{vec_V_V_dout[107:104]}};
        p_Result_82_i_i_reg_3822 <= {{vec_V_V_dout[67:64]}};
        p_Result_8_i_i_reg_3897 <= {{vec_V_V_dout[35:32]}};
        p_Result_9_i_i_reg_3907 <= {{vec_V_V_dout[39:36]}};
        p_Result_i_i_reg_3967 <= {{vec_V_V_dout[63:60]}};
        select_ln393_33_reg_3757 <= select_ln393_33_fu_1439_p3;
        select_ln393_34_reg_3762 <= select_ln393_34_fu_1446_p3;
        select_ln393_35_reg_3767 <= select_ln393_35_fu_1459_p3;
        select_ln393_36_reg_3772 <= select_ln393_36_fu_1466_p3;
        select_ln393_37_reg_3777 <= select_ln393_37_fu_1473_p3;
        select_ln393_38_reg_3782 <= select_ln393_38_fu_1486_p3;
        select_ln393_39_reg_3787 <= select_ln393_39_fu_1493_p3;
        select_ln393_40_reg_3792 <= select_ln393_40_fu_1500_p3;
        select_ln393_41_reg_3797 <= select_ln393_41_fu_1513_p3;
        select_ln393_42_reg_3802 <= select_ln393_42_fu_1520_p3;
        select_ln393_43_reg_3807 <= select_ln393_43_fu_1527_p3;
        select_ln393_44_reg_3812 <= select_ln393_44_fu_1540_p3;
        trunc_ln647_reg_3817 <= trunc_ln647_fu_1547_p1;
        wpacks_0_0_V_reg_3977 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_0;
        wpacks_0_10_V_reg_4027 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_10;
        wpacks_0_11_V_reg_4032 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_11;
        wpacks_0_12_V_reg_4037 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_12;
        wpacks_0_13_V_reg_4042 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_13;
        wpacks_0_14_V_reg_4047 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_14;
        wpacks_0_15_V_reg_4052 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_15;
        wpacks_0_1_V_reg_3982 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_1;
        wpacks_0_2_V_reg_3987 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_2;
        wpacks_0_3_V_reg_3992 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_3;
        wpacks_0_4_V_reg_3997 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_4;
        wpacks_0_5_V_reg_4002 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_5;
        wpacks_0_6_V_reg_4007 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_6;
        wpacks_0_7_V_reg_4012 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_7;
        wpacks_0_8_V_reg_4017 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_8;
        wpacks_0_9_V_reg_4022 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_9;
        wpacks_1_0_V_reg_4057 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_0;
        wpacks_1_10_V_reg_4107 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_10;
        wpacks_1_11_V_reg_4112 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_11;
        wpacks_1_12_V_reg_4117 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_12;
        wpacks_1_13_V_reg_4122 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_13;
        wpacks_1_14_V_reg_4127 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_14;
        wpacks_1_15_V_reg_4132 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_15;
        wpacks_1_1_V_reg_4062 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_1;
        wpacks_1_2_V_reg_4067 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_2;
        wpacks_1_3_V_reg_4072 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_3;
        wpacks_1_4_V_reg_4077 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_4;
        wpacks_1_5_V_reg_4082 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_5;
        wpacks_1_6_V_reg_4087 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_6;
        wpacks_1_7_V_reg_4092 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_7;
        wpacks_1_8_V_reg_4097 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_8;
        wpacks_1_9_V_reg_4102 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_9;
        wpacks_2_0_V_reg_4137 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_0;
        wpacks_2_10_V_reg_4187 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_10;
        wpacks_2_11_V_reg_4192 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_11;
        wpacks_2_12_V_reg_4197 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_12;
        wpacks_2_13_V_reg_4202 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_13;
        wpacks_2_14_V_reg_4207 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_14;
        wpacks_2_15_V_reg_4212 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_15;
        wpacks_2_1_V_reg_4142 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_1;
        wpacks_2_2_V_reg_4147 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_2;
        wpacks_2_3_V_reg_4152 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_3;
        wpacks_2_4_V_reg_4157 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_4;
        wpacks_2_5_V_reg_4162 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_5;
        wpacks_2_6_V_reg_4167 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_6;
        wpacks_2_7_V_reg_4172 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_7;
        wpacks_2_8_V_reg_4177 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_8;
        wpacks_2_9_V_reg_4182 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_9;
        wpacks_3_0_V_reg_4217 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_0;
        wpacks_3_10_V_reg_4267 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_10;
        wpacks_3_11_V_reg_4272 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_11;
        wpacks_3_12_V_reg_4277 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_12;
        wpacks_3_13_V_reg_4282 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_13;
        wpacks_3_14_V_reg_4287 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_14;
        wpacks_3_15_V_reg_4292 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_15;
        wpacks_3_1_V_reg_4222 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_1;
        wpacks_3_2_V_reg_4227 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_2;
        wpacks_3_3_V_reg_4232 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_3;
        wpacks_3_4_V_reg_4237 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_4;
        wpacks_3_5_V_reg_4242 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_5;
        wpacks_3_6_V_reg_4247 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_6;
        wpacks_3_7_V_reg_4252 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_7;
        wpacks_3_8_V_reg_4257 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_8;
        wpacks_3_9_V_reg_4262 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_9;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (o_out_reg_3688_pp0_iter8_reg == 1'd1))) begin
        res_V_10_reg_4614 <= res_V_10_fu_3265_p3;
        res_V_4_reg_4584 <= res_V_4_fu_2889_p3;
        res_V_5_reg_4589 <= res_V_5_fu_2951_p3;
        res_V_6_reg_4594 <= res_V_6_fu_3013_p3;
        res_V_7_reg_4599 <= res_V_7_fu_3076_p3;
        res_V_8_reg_4604 <= res_V_8_fu_3139_p3;
        res_V_9_reg_4609 <= res_V_9_fu_3202_p3;
        res_V_reg_4579 <= res_V_fu_2826_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (o_out_reg_3688_pp0_iter7_reg == 1'd1))) begin
        ret_V_24_reg_4542 <= ret_V_24_fu_3292_p2;
        ret_V_27_reg_4547 <= ret_V_27_fu_3298_p2;
        ret_V_30_reg_4553 <= ret_V_30_fu_3304_p2;
        ret_V_33_reg_4559 <= ret_V_33_fu_3310_p2;
        ret_V_36_reg_4564 <= ret_V_36_fu_3316_p2;
        ret_V_39_reg_4569 <= ret_V_39_fu_3322_p2;
        ret_V_42_reg_4574 <= ret_V_42_fu_3328_p2;
        ret_V_reg_4537 <= ret_V_fu_3286_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_bias_new_V_0_ce0 = 1'b1;
    end else begin
        conv_1_bias_new_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_bias_new_V_0_ce1 = 1'b1;
    end else begin
        conv_1_bias_new_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_bias_new_V_1_ce0 = 1'b1;
    end else begin
        conv_1_bias_new_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_bias_new_V_1_ce1 = 1'b1;
    end else begin
        conv_1_bias_new_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_bias_new_V_2_ce0 = 1'b1;
    end else begin
        conv_1_bias_new_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_bias_new_V_2_ce1 = 1'b1;
    end else begin
        conv_1_bias_new_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_bias_new_V_3_ce0 = 1'b1;
    end else begin
        conv_1_bias_new_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_bias_new_V_3_ce1 = 1'b1;
    end else begin
        conv_1_bias_new_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_inc_new_V_0_ce0 = 1'b1;
    end else begin
        conv_1_inc_new_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_inc_new_V_0_ce1 = 1'b1;
    end else begin
        conv_1_inc_new_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_inc_new_V_1_ce0 = 1'b1;
    end else begin
        conv_1_inc_new_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_inc_new_V_1_ce1 = 1'b1;
    end else begin
        conv_1_inc_new_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_inc_new_V_2_ce0 = 1'b1;
    end else begin
        conv_1_inc_new_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_inc_new_V_2_ce1 = 1'b1;
    end else begin
        conv_1_inc_new_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_inc_new_V_3_ce0 = 1'b1;
    end else begin
        conv_1_inc_new_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_inc_new_V_3_ce1 = 1'b1;
    end else begin
        conv_1_inc_new_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_w_new_V_0_0_ce0 = 1'b1;
    end else begin
        conv_1_w_new_V_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_w_new_V_0_1_ce0 = 1'b1;
    end else begin
        conv_1_w_new_V_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_w_new_V_0_2_ce0 = 1'b1;
    end else begin
        conv_1_w_new_V_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_w_new_V_1_0_ce0 = 1'b1;
    end else begin
        conv_1_w_new_V_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_w_new_V_1_1_ce0 = 1'b1;
    end else begin
        conv_1_w_new_V_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_w_new_V_1_2_ce0 = 1'b1;
    end else begin
        conv_1_w_new_V_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_w_new_V_2_0_ce0 = 1'b1;
    end else begin
        conv_1_w_new_V_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_w_new_V_2_1_ce0 = 1'b1;
    end else begin
        conv_1_w_new_V_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_w_new_V_2_2_ce0 = 1'b1;
    end else begin
        conv_1_w_new_V_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_w_new_V_3_0_ce0 = 1'b1;
    end else begin
        conv_1_w_new_V_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_w_new_V_3_1_ce0 = 1'b1;
    end else begin
        conv_1_w_new_V_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_w_new_V_3_2_ce0 = 1'b1;
    end else begin
        conv_1_w_new_V_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp339))) begin
        grp_simd_MAC_2_fu_811_ap_ce = 1'b1;
    end else begin
        grp_simd_MAC_2_fu_811_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp340))) begin
        grp_simd_MAC_2_fu_847_ap_ce = 1'b1;
    end else begin
        grp_simd_MAC_2_fu_847_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp341))) begin
        grp_simd_MAC_2_fu_883_ap_ce = 1'b1;
    end else begin
        grp_simd_MAC_2_fu_883_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp342))) begin
        grp_simd_MAC_2_fu_919_ap_ce = 1'b1;
    end else begin
        grp_simd_MAC_2_fu_919_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((o_out_reg_3688_pp0_iter9_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (o_out_reg_3688_pp0_iter9_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        reps_blk_n = reps_empty_n;
    end else begin
        reps_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((reps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        reps_read = 1'b1;
    end else begin
        reps_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln392_reg_3490_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        vec_V_V_blk_n = vec_V_V_empty_n;
    end else begin
        vec_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln392_reg_3490_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        vec_V_V_read = 1'b1;
    end else begin
        vec_V_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((reps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter10 == 1'b1) & (ap_enable_reg_pp0_iter9 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter10 == 1'b1) & (ap_enable_reg_pp0_iter9 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1353_12_fu_1160_p2 = (23'd16384 + conv_1_bias_new_V_1_q0);

assign add_ln1353_13_fu_1166_p2 = (21'd16384 + conv_1_bias_new_V_2_q0);

assign add_ln1353_14_fu_1172_p2 = (23'd16384 + conv_1_bias_new_V_3_q0);

assign add_ln1353_15_fu_1453_p2 = (23'd16384 + conv_1_bias_new_V_0_q1);

assign add_ln1353_16_fu_1480_p2 = (23'd16384 + conv_1_bias_new_V_1_q1);

assign add_ln1353_17_fu_1507_p2 = (21'd16384 + conv_1_bias_new_V_2_q1);

assign add_ln1353_18_fu_1534_p2 = (23'd16384 + conv_1_bias_new_V_3_q1);

assign add_ln1353_fu_1154_p2 = (23'd16384 + conv_1_bias_new_V_0_q0);

assign add_ln392_2_fu_1064_p2 = (43'd1 + indvar_flatten239_reg_745);

assign add_ln392_fu_1006_p2 = (shl_ln392_fu_994_p2 + shl_ln392_2_fu_1000_p2);

assign add_ln393_2_fu_1140_p2 = (indvar_flatten53_reg_756 + 12'd1);

assign add_ln394_2_fu_1126_p2 = (indvar_flatten_reg_778 + 9'd1);

assign add_ln404_fu_1335_p2 = (select_ln393_32_fu_1233_p3 + zext_ln395_fu_1319_p1);

assign add_ln700_106_fu_2468_p2 = (firPartialRes1_1_V_2_fu_326 + firPartial3_V_0_1_i_reg_4455);

assign add_ln700_108_fu_2526_p2 = (firPartialRes1_2_V_1_fu_330 + firPartial3_V_0_2_i_reg_4473);

assign add_ln700_110_fu_2584_p2 = (firPartialRes1_3_V_1_fu_334 + firPartial3_V_0_3_i_reg_4491);

assign add_ln700_fu_2410_p2 = (firPartialRes1_0_V_2_fu_322 + firPartial3_V_0_i_reg_4437);

assign and_ln393_5_fu_1201_p2 = (xor_ln393_reg_3518 & icmp_ln395_fu_1195_p2);

assign and_ln393_6_fu_1096_p2 = (xor_ln393_fu_1084_p2 & icmp_ln394_fu_1090_p2);

assign and_ln393_7_fu_1261_p2 = (or_ln393_2_fu_1256_p2 & and_ln393_fu_1190_p2);

assign and_ln393_8_fu_1267_p2 = (or_ln393_2_fu_1256_p2 & and_ln393_5_fu_1201_p2);

assign and_ln393_fu_1190_p2 = (xor_ln393_reg_3518 & icmp_ln399_fu_1184_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((out_V_V_full_n == 1'b0) & (o_out_reg_3688_pp0_iter9_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1)) | ((vec_V_V_empty_n == 1'b0) & (icmp_ln392_reg_3490_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((out_V_V_full_n == 1'b0) & (o_out_reg_3688_pp0_iter9_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1)) | ((vec_V_V_empty_n == 1'b0) & (icmp_ln392_reg_3490_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp339 = (((out_V_V_full_n == 1'b0) & (o_out_reg_3688_pp0_iter9_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1)) | ((vec_V_V_empty_n == 1'b0) & (icmp_ln392_reg_3490_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp340 = (((out_V_V_full_n == 1'b0) & (o_out_reg_3688_pp0_iter9_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1)) | ((vec_V_V_empty_n == 1'b0) & (icmp_ln392_reg_3490_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp341 = (((out_V_V_full_n == 1'b0) & (o_out_reg_3688_pp0_iter9_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1)) | ((vec_V_V_empty_n == 1'b0) & (icmp_ln392_reg_3490_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp342 = (((out_V_V_full_n == 1'b0) & (o_out_reg_3688_pp0_iter9_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1)) | ((vec_V_V_empty_n == 1'b0) & (icmp_ln392_reg_3490_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((out_V_V_full_n == 1'b0) & (o_out_reg_3688_pp0_iter9_reg == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1)) | ((vec_V_V_empty_n == 1'b0) & (icmp_ln392_reg_3490_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((reps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter6_ignore_call255 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter6_ignore_call268 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter6_ignore_call281 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter6_ignore_call294 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter7_ignore_call255 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter7_ignore_call268 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter7_ignore_call281 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter7_ignore_call294 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter8_ignore_call255 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter8_ignore_call268 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter8_ignore_call281 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter8_ignore_call294 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter9_ignore_call255 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter9_ignore_call268 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter9_ignore_call281 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter9_ignore_call294 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp0_stage0_iter10 = ((out_V_V_full_n == 1'b0) & (o_out_reg_3688_pp0_iter9_reg == 1'd1));
end

always @ (*) begin
    ap_block_state14_pp0_stage0_iter10_ignore_call255 = ((out_V_V_full_n == 1'b0) & (o_out_reg_3688_pp0_iter9_reg == 1'd1));
end

always @ (*) begin
    ap_block_state14_pp0_stage0_iter10_ignore_call268 = ((out_V_V_full_n == 1'b0) & (o_out_reg_3688_pp0_iter9_reg == 1'd1));
end

always @ (*) begin
    ap_block_state14_pp0_stage0_iter10_ignore_call281 = ((out_V_V_full_n == 1'b0) & (o_out_reg_3688_pp0_iter9_reg == 1'd1));
end

always @ (*) begin
    ap_block_state14_pp0_stage0_iter10_ignore_call294 = ((out_V_V_full_n == 1'b0) & (o_out_reg_3688_pp0_iter9_reg == 1'd1));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0_ignore_call255 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0_ignore_call268 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0_ignore_call281 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0_ignore_call294 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1_ignore_call255 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1_ignore_call268 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1_ignore_call281 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1_ignore_call294 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter2 = ((vec_V_V_empty_n == 1'b0) & (icmp_ln392_reg_3490_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state6_pp0_stage0_iter2_ignore_call255 = ((vec_V_V_empty_n == 1'b0) & (icmp_ln392_reg_3490_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state6_pp0_stage0_iter2_ignore_call268 = ((vec_V_V_empty_n == 1'b0) & (icmp_ln392_reg_3490_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state6_pp0_stage0_iter2_ignore_call281 = ((vec_V_V_empty_n == 1'b0) & (icmp_ln392_reg_3490_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state6_pp0_stage0_iter2_ignore_call294 = ((vec_V_V_empty_n == 1'b0) & (icmp_ln392_reg_3490_pp0_iter1_reg == 1'd0));
end

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3_ignore_call255 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3_ignore_call268 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3_ignore_call281 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3_ignore_call294 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter4_ignore_call255 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter4_ignore_call268 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter4_ignore_call281 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter4_ignore_call294 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter5_ignore_call255 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter5_ignore_call268 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter5_ignore_call281 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter5_ignore_call294 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign call_ret50_i_pack_weight_data_2_fu_965_w0_V = $signed(conv_1_w_new_V_1_0_q0);

assign conv_1_bias_new_V_0_address0 = zext_ln458_fu_1047_p1;

assign conv_1_bias_new_V_0_address1 = zext_ln458_2_fu_1240_p1;

assign conv_1_bias_new_V_1_address0 = zext_ln458_fu_1047_p1;

assign conv_1_bias_new_V_1_address1 = zext_ln458_2_fu_1240_p1;

assign conv_1_bias_new_V_2_address0 = zext_ln458_fu_1047_p1;

assign conv_1_bias_new_V_2_address1 = zext_ln458_2_fu_1240_p1;

assign conv_1_bias_new_V_3_address0 = zext_ln458_fu_1047_p1;

assign conv_1_bias_new_V_3_address1 = zext_ln458_2_fu_1240_p1;

assign conv_1_inc_new_V_0_address0 = zext_ln458_fu_1047_p1;

assign conv_1_inc_new_V_0_address1 = zext_ln458_2_fu_1240_p1;

assign conv_1_inc_new_V_1_address0 = zext_ln458_fu_1047_p1;

assign conv_1_inc_new_V_1_address1 = zext_ln458_2_fu_1240_p1;

assign conv_1_inc_new_V_2_address0 = zext_ln458_fu_1047_p1;

assign conv_1_inc_new_V_2_address1 = zext_ln458_2_fu_1240_p1;

assign conv_1_inc_new_V_3_address0 = zext_ln458_fu_1047_p1;

assign conv_1_inc_new_V_3_address1 = zext_ln458_2_fu_1240_p1;

assign conv_1_w_new_V_0_0_address0 = zext_ln404_6_fu_1345_p1;

assign conv_1_w_new_V_0_1_address0 = zext_ln404_6_fu_1345_p1;

assign conv_1_w_new_V_0_2_address0 = zext_ln404_6_fu_1345_p1;

assign conv_1_w_new_V_1_0_address0 = zext_ln404_6_fu_1345_p1;

assign conv_1_w_new_V_1_1_address0 = zext_ln404_6_fu_1345_p1;

assign conv_1_w_new_V_1_2_address0 = zext_ln404_6_fu_1345_p1;

assign conv_1_w_new_V_2_0_address0 = zext_ln404_6_fu_1345_p1;

assign conv_1_w_new_V_2_1_address0 = zext_ln404_6_fu_1345_p1;

assign conv_1_w_new_V_2_2_address0 = zext_ln404_6_fu_1345_p1;

assign conv_1_w_new_V_3_0_address0 = zext_ln404_6_fu_1345_p1;

assign conv_1_w_new_V_3_1_address0 = zext_ln404_6_fu_1345_p1;

assign conv_1_w_new_V_3_2_address0 = zext_ln404_6_fu_1345_p1;

assign firPartialRes0_0_V_2_fu_2405_p2 = (firPartialRes0_V_0_3_fu_306 + firPartialRes0_0_V_reg_4431);

assign firPartialRes0_1_V_2_fu_2463_p2 = (firPartialRes0_V_1_3_fu_310 + firPartialRes0_1_V_reg_4449);

assign firPartialRes0_2_V_1_fu_2521_p2 = (firPartialRes0_V_2_3_fu_314 + firPartialRes0_2_V_reg_4467);

assign firPartialRes0_3_V_1_fu_2579_p2 = (firPartialRes0_V_3_3_fu_318 + firPartialRes0_3_V_reg_4485);

assign firPartialRes1_0_V_fu_2438_p3 = ((o_clear_fu_2394_p2[0:0] === 1'b1) ? firPartial3_V_0_i_reg_4437 : add_ln700_fu_2410_p2);

assign firPartialRes1_1_V_fu_2496_p3 = ((o_clear_fu_2394_p2[0:0] === 1'b1) ? firPartial3_V_0_1_i_reg_4455 : add_ln700_106_fu_2468_p2);

assign firPartialRes1_2_V_fu_2554_p3 = ((o_clear_fu_2394_p2[0:0] === 1'b1) ? firPartial3_V_0_2_i_reg_4473 : add_ln700_108_fu_2526_p2);

assign firPartialRes1_3_V_fu_2612_p3 = ((o_clear_fu_2394_p2[0:0] === 1'b1) ? firPartial3_V_0_3_i_reg_4491 : add_ln700_110_fu_2584_p2);

assign grp_fu_1015_p0 = 43'd1944;

assign grp_fu_1015_p1 = grp_fu_1015_p10;

assign grp_fu_1015_p10 = add_ln392_reg_3430;

assign icmp_ln392_fu_1059_p2 = ((indvar_flatten239_reg_745 == bound74_reg_3440) ? 1'b1 : 1'b0);

assign icmp_ln393_fu_1070_p2 = ((indvar_flatten53_reg_756 == 12'd1944) ? 1'b1 : 1'b0);

assign icmp_ln394_fu_1090_p2 = ((indvar_flatten_reg_778 == 9'd243) ? 1'b1 : 1'b0);

assign icmp_ln395_fu_1195_p2 = ((infoldIdx_0_i_reg_800 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln399_3_fu_1297_p2 = ((w_fu_1273_p2 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln399_4_fu_1323_p2 = ((select_ln399_fu_1289_p3 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln399_fu_1184_p2 = ((w_0_i_reg_789 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_30_fu_2802_p2 = ((tmp_fu_2792_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_31_fu_2843_p2 = (($signed(ret_V_46_fu_2837_p2) > $signed(29'd0)) ? 1'b1 : 1'b0);

assign icmp_ln895_32_fu_2865_p2 = ((tmp_47_fu_2855_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_33_fu_2906_p2 = (($signed(ret_V_47_fu_2900_p2) > $signed(30'd0)) ? 1'b1 : 1'b0);

assign icmp_ln895_34_fu_2927_p2 = ((tmp_48_fu_2917_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_35_fu_2968_p2 = (($signed(ret_V_48_fu_2962_p2) > $signed(30'd0)) ? 1'b1 : 1'b0);

assign icmp_ln895_36_fu_2989_p2 = ((tmp_49_fu_2979_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_37_fu_3030_p2 = (($signed(ret_V_49_fu_3024_p2) > $signed(28'd0)) ? 1'b1 : 1'b0);

assign icmp_ln895_38_fu_3052_p2 = ((tmp_50_fu_3042_p4 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_39_fu_3093_p2 = (($signed(ret_V_50_fu_3087_p2) > $signed(28'd0)) ? 1'b1 : 1'b0);

assign icmp_ln895_40_fu_3115_p2 = ((tmp_51_fu_3105_p4 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_41_fu_3156_p2 = (($signed(ret_V_51_fu_3150_p2) > $signed(29'd0)) ? 1'b1 : 1'b0);

assign icmp_ln895_42_fu_3178_p2 = ((tmp_52_fu_3168_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_43_fu_3219_p2 = (($signed(ret_V_52_fu_3213_p2) > $signed(29'd0)) ? 1'b1 : 1'b0);

assign icmp_ln895_44_fu_3241_p2 = ((tmp_53_fu_3231_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln895_fu_2780_p2 = (($signed(ret_V_45_fu_2774_p2) > $signed(29'd0)) ? 1'b1 : 1'b0);

assign infoldIdx_fu_1361_p2 = (select_ln399_fu_1289_p3 + 2'd1);

assign ipack_0_V_fu_2122_p4 = {{{p_Result_82_i_i_reg_3822}, {7'd0}}, {trunc_ln647_reg_3817}};

assign ipack_10_V_fu_2242_p4 = {{{p_Result_82_i_i_133_reg_3922}, {7'd0}}, {p_Result_10_i_i_reg_3917}};

assign ipack_11_V_fu_2254_p4 = {{{p_Result_82_10_i_i_reg_3932}, {7'd0}}, {p_Result_11_i_i_reg_3927}};

assign ipack_12_V_fu_2266_p4 = {{{p_Result_82_11_i_i_reg_3942}, {7'd0}}, {p_Result_12_i_i_reg_3937}};

assign ipack_13_V_fu_2278_p4 = {{{p_Result_82_12_i_i_reg_3952}, {7'd0}}, {p_Result_13_i_i_reg_3947}};

assign ipack_14_V_fu_2290_p4 = {{{p_Result_82_13_i_i_reg_3962}, {7'd0}}, {p_Result_14_i_i_reg_3957}};

assign ipack_15_V_fu_2302_p4 = {{{p_Result_82_14_i_i_reg_3972}, {7'd0}}, {p_Result_i_i_reg_3967}};

assign ipack_1_V_fu_2134_p4 = {{{p_Result_82_1_i_i_reg_3832}, {7'd0}}, {p_Result_1_i_i_reg_3827}};

assign ipack_2_V_fu_2146_p4 = {{{p_Result_82_2_i_i_reg_3842}, {7'd0}}, {p_Result_2_i_i_reg_3837}};

assign ipack_3_V_fu_2158_p4 = {{{p_Result_82_3_i_i_reg_3852}, {7'd0}}, {p_Result_3_i_i_reg_3847}};

assign ipack_4_V_fu_2170_p4 = {{{p_Result_82_4_i_i_reg_3862}, {7'd0}}, {p_Result_4_i_i_reg_3857}};

assign ipack_5_V_fu_2182_p4 = {{{p_Result_82_5_i_i_reg_3872}, {7'd0}}, {p_Result_5_i_i_reg_3867}};

assign ipack_6_V_fu_2194_p4 = {{{p_Result_82_6_i_i_reg_3882}, {7'd0}}, {p_Result_6_i_i_reg_3877}};

assign ipack_7_V_fu_2206_p4 = {{{p_Result_82_7_i_i_reg_3892}, {7'd0}}, {p_Result_7_i_i_reg_3887}};

assign ipack_8_V_fu_2218_p4 = {{{p_Result_82_8_i_i_reg_3902}, {7'd0}}, {p_Result_8_i_i_reg_3897}};

assign ipack_9_V_fu_2230_p4 = {{{p_Result_82_9_i_i_reg_3912}, {7'd0}}, {p_Result_9_i_i_reg_3907}};

assign o_clear_fu_2394_p2 = ((select_ln399_reg_3678_pp0_iter6_reg == 2'd0) ? 1'b1 : 1'b0);

assign o_out_fu_1329_p2 = (select_ln399_2_fu_1303_p3 & icmp_ln399_4_fu_1323_p2);

assign or_ln393_2_fu_1256_p2 = (xor_ln393_2_fu_1251_p2 | icmp_ln393_reg_3499);

assign or_ln393_fu_1108_p2 = (icmp_ln393_fu_1070_p2 | and_ln393_6_fu_1096_p2);

assign or_ln399_2_fu_1284_p2 = (or_ln399_fu_1279_p2 | icmp_ln393_reg_3499);

assign or_ln399_fu_1279_p2 = (and_ln393_8_fu_1267_p2 | and_ln393_6_reg_3529);

assign outPartialArr0_0_V_fu_2445_p2 = (select_ln398_8_fu_2423_p3 + call_ret1_reg_4425_0);

assign outPartialArr0_1_V_fu_2503_p2 = (select_ln398_12_fu_2481_p3 + call_ret2_reg_4443_0);

assign outPartialArr0_2_V_fu_2561_p2 = (select_ln398_16_fu_2539_p3 + call_ret3_reg_4461_0);

assign outPartialArr0_3_V_fu_2619_p2 = (select_ln398_20_fu_2597_p3 + call_ret_reg_4479_0);

assign outPartialArr1_0_V_fu_2451_p2 = (select_ln398_fu_2415_p3 + call_ret1_reg_4425_1);

assign outPartialArr1_1_V_fu_2509_p2 = (select_ln398_11_fu_2473_p3 + call_ret2_reg_4443_1);

assign outPartialArr1_2_V_fu_2567_p2 = (select_ln398_15_fu_2531_p3 + call_ret3_reg_4461_1);

assign outPartialArr1_3_V_fu_2625_p2 = (select_ln398_19_fu_2589_p3 + call_ret_reg_4479_1);

assign out_V_V_din = {{{{{{{{res_V_10_reg_4614}, {res_V_8_reg_4604}}, {res_V_6_reg_4594}}, {res_V_4_reg_4584}}, {res_V_9_reg_4609}}, {res_V_7_reg_4599}}, {res_V_5_reg_4589}}, {res_V_reg_4579}};

assign peIdx_fu_1102_p2 = (4'd1 + select_ln393_fu_1076_p3);

assign res_V_10_fu_3265_p3 = ((icmp_ln895_43_fu_3219_p2[0:0] === 1'b1) ? select_ln192_10_fu_3257_p3 : 4'd0);

assign res_V_4_fu_2889_p3 = ((icmp_ln895_31_fu_2843_p2[0:0] === 1'b1) ? select_ln192_4_fu_2881_p3 : 4'd0);

assign res_V_5_fu_2951_p3 = ((icmp_ln895_33_fu_2906_p2[0:0] === 1'b1) ? select_ln192_5_fu_2943_p3 : 4'd0);

assign res_V_6_fu_3013_p3 = ((icmp_ln895_35_fu_2968_p2[0:0] === 1'b1) ? select_ln192_6_fu_3005_p3 : 4'd0);

assign res_V_7_fu_3076_p3 = ((icmp_ln895_37_fu_3030_p2[0:0] === 1'b1) ? select_ln192_7_fu_3068_p3 : 4'd0);

assign res_V_8_fu_3139_p3 = ((icmp_ln895_39_fu_3093_p2[0:0] === 1'b1) ? select_ln192_8_fu_3131_p3 : 4'd0);

assign res_V_9_fu_3202_p3 = ((icmp_ln895_41_fu_3156_p2[0:0] === 1'b1) ? select_ln192_9_fu_3194_p3 : 4'd0);

assign res_V_fu_2826_p3 = ((icmp_ln895_fu_2780_p2[0:0] === 1'b1) ? select_ln192_fu_2818_p3 : 4'd0);

assign ret_V_23_fu_2786_p2 = ($signed(sext_ln1352_fu_2771_p1) + $signed(sext_ln393_4_fu_2750_p1));

assign ret_V_24_fu_3292_p0 = zext_ln393_2_fu_2711_p1;

assign ret_V_26_fu_2849_p2 = ($signed(sext_ln1352_4_fu_2834_p1) + $signed(sext_ln393_4_fu_2750_p1));

assign ret_V_27_fu_3298_p0 = zext_ln393_3_fu_2714_p1;

assign ret_V_29_fu_2912_p2 = ($signed(ret_V_27_reg_4547) + $signed(sext_ln393_6_fu_2756_p1));

assign ret_V_30_fu_3304_p0 = zext_ln393_3_fu_2714_p1;

assign ret_V_32_fu_2974_p2 = ($signed(ret_V_30_reg_4553) + $signed(sext_ln393_6_fu_2756_p1));

assign ret_V_33_fu_3310_p0 = zext_ln393_4_fu_2717_p1;

assign ret_V_35_fu_3036_p2 = ($signed(sext_ln1352_7_fu_3021_p1) + $signed(sext_ln393_8_fu_2762_p1));

assign ret_V_36_fu_3316_p0 = zext_ln393_4_fu_2717_p1;

assign ret_V_38_fu_3099_p2 = ($signed(sext_ln1352_8_fu_3084_p1) + $signed(sext_ln393_8_fu_2762_p1));

assign ret_V_39_fu_3322_p0 = zext_ln393_5_fu_2720_p1;

assign ret_V_41_fu_3162_p2 = ($signed(sext_ln1352_9_fu_3147_p1) + $signed(sext_ln393_10_fu_2768_p1));

assign ret_V_42_fu_3328_p0 = zext_ln393_5_fu_2720_p1;

assign ret_V_44_fu_3225_p2 = ($signed(sext_ln1352_10_fu_3210_p1) + $signed(sext_ln393_10_fu_2768_p1));

assign ret_V_45_fu_2774_p2 = ($signed(sext_ln393_fu_2747_p1) + $signed(sext_ln1352_fu_2771_p1));

assign ret_V_46_fu_2837_p2 = ($signed(sext_ln393_fu_2747_p1) + $signed(sext_ln1352_4_fu_2834_p1));

assign ret_V_47_fu_2900_p2 = ($signed(sext_ln393_5_fu_2753_p1) + $signed(sext_ln1352_5_fu_2897_p1));

assign ret_V_48_fu_2962_p2 = ($signed(sext_ln393_5_fu_2753_p1) + $signed(sext_ln1352_6_fu_2959_p1));

assign ret_V_49_fu_3024_p2 = ($signed(sext_ln393_7_fu_2759_p1) + $signed(sext_ln1352_7_fu_3021_p1));

assign ret_V_50_fu_3087_p2 = ($signed(sext_ln393_7_fu_2759_p1) + $signed(sext_ln1352_8_fu_3084_p1));

assign ret_V_51_fu_3150_p2 = ($signed(sext_ln393_9_fu_2765_p1) + $signed(sext_ln1352_9_fu_3147_p1));

assign ret_V_52_fu_3213_p2 = ($signed(sext_ln393_9_fu_2765_p1) + $signed(sext_ln1352_10_fu_3210_p1));

assign ret_V_fu_3286_p0 = zext_ln393_2_fu_2711_p1;

assign select_ln192_10_fu_3257_p3 = ((icmp_ln895_44_fu_3241_p2[0:0] === 1'b1) ? 4'd15 : trunc_ln214_8_fu_3247_p4);

assign select_ln192_4_fu_2881_p3 = ((icmp_ln895_32_fu_2865_p2[0:0] === 1'b1) ? 4'd15 : trunc_ln214_s_fu_2871_p4);

assign select_ln192_5_fu_2943_p3 = ((icmp_ln895_34_fu_2927_p2[0:0] === 1'b1) ? 4'd15 : trunc_ln214_3_fu_2933_p4);

assign select_ln192_6_fu_3005_p3 = ((icmp_ln895_36_fu_2989_p2[0:0] === 1'b1) ? 4'd15 : trunc_ln214_4_fu_2995_p4);

assign select_ln192_7_fu_3068_p3 = ((icmp_ln895_38_fu_3052_p2[0:0] === 1'b1) ? 4'd15 : trunc_ln214_5_fu_3058_p4);

assign select_ln192_8_fu_3131_p3 = ((icmp_ln895_40_fu_3115_p2[0:0] === 1'b1) ? 4'd15 : trunc_ln214_6_fu_3121_p4);

assign select_ln192_9_fu_3194_p3 = ((icmp_ln895_42_fu_3178_p2[0:0] === 1'b1) ? 4'd15 : trunc_ln214_7_fu_3184_p4);

assign select_ln192_fu_2818_p3 = ((icmp_ln895_30_fu_2802_p2[0:0] === 1'b1) ? 4'd15 : trunc_ln_fu_2808_p4);

assign select_ln393_18_fu_1178_p3 = ((icmp_ln393_reg_3499[0:0] === 1'b1) ? 6'd0 : sub_ln404_reg_3445);

assign select_ln393_19_fu_1367_p3 = ((icmp_ln393_reg_3499_pp0_iter1_reg[0:0] === 1'b1) ? 12'd1268 : conv_1_inc_new_V_0_l_reg_3578);

assign select_ln393_20_fu_1373_p3 = ((icmp_ln393_reg_3499_pp0_iter1_reg[0:0] === 1'b1) ? 23'd38850 : conv_1_bias_new_V_0_1_reg_3583);

assign select_ln393_21_fu_1379_p3 = ((icmp_ln393_reg_3499_pp0_iter1_reg[0:0] === 1'b1) ? 23'd55234 : add_ln1353_reg_3618);

assign select_ln393_22_fu_1385_p3 = ((icmp_ln393_reg_3499_pp0_iter1_reg[0:0] === 1'b1) ? 13'd1170 : conv_1_inc_new_V_1_l_reg_3588);

assign select_ln393_23_fu_1391_p3 = ((icmp_ln393_reg_3499_pp0_iter1_reg[0:0] === 1'b1) ? 23'd7881495 : conv_1_bias_new_V_1_1_reg_3593);

assign select_ln393_24_fu_1397_p3 = ((icmp_ln393_reg_3499_pp0_iter1_reg[0:0] === 1'b1) ? 23'd7897879 : add_ln1353_12_reg_3623);

assign select_ln393_25_fu_1403_p3 = ((icmp_ln393_reg_3499_pp0_iter1_reg[0:0] === 1'b1) ? 11'd1027 : conv_1_inc_new_V_2_l_reg_3598);

assign select_ln393_26_fu_1409_p3 = ((icmp_ln393_reg_3499_pp0_iter1_reg[0:0] === 1'b1) ? 21'd1781769 : conv_1_bias_new_V_2_1_reg_3603);

assign select_ln393_27_fu_1415_p3 = ((icmp_ln393_reg_3499_pp0_iter1_reg[0:0] === 1'b1) ? 21'd1798153 : add_ln1353_13_reg_3628);

assign select_ln393_28_fu_1421_p3 = ((icmp_ln393_reg_3499_pp0_iter1_reg[0:0] === 1'b1) ? 12'd797 : conv_1_inc_new_V_3_l_reg_3608);

assign select_ln393_29_fu_1427_p3 = ((icmp_ln393_reg_3499_pp0_iter1_reg[0:0] === 1'b1) ? 23'd796971 : conv_1_bias_new_V_3_1_reg_3613);

assign select_ln393_30_fu_1433_p3 = ((icmp_ln393_reg_3499_pp0_iter1_reg[0:0] === 1'b1) ? 23'd813355 : add_ln1353_14_reg_3633);

assign select_ln393_31_fu_1206_p3 = ((or_ln393_reg_3553[0:0] === 1'b1) ? 8'd0 : w_0_i_reg_789);

assign select_ln393_32_fu_1233_p3 = ((and_ln393_6_reg_3529[0:0] === 1'b1) ? sub_ln404_2_fu_1227_p2 : select_ln393_18_fu_1178_p3);

assign select_ln393_33_fu_1439_p3 = ((and_ln393_6_reg_3529_pp0_iter1_reg[0:0] === 1'b1) ? conv_1_inc_new_V_0_q1 : select_ln393_19_fu_1367_p3);

assign select_ln393_34_fu_1446_p3 = ((and_ln393_6_reg_3529_pp0_iter1_reg[0:0] === 1'b1) ? conv_1_bias_new_V_0_q1 : select_ln393_20_fu_1373_p3);

assign select_ln393_35_fu_1459_p3 = ((and_ln393_6_reg_3529_pp0_iter1_reg[0:0] === 1'b1) ? add_ln1353_15_fu_1453_p2 : select_ln393_21_fu_1379_p3);

assign select_ln393_36_fu_1466_p3 = ((and_ln393_6_reg_3529_pp0_iter1_reg[0:0] === 1'b1) ? conv_1_inc_new_V_1_q1 : select_ln393_22_fu_1385_p3);

assign select_ln393_37_fu_1473_p3 = ((and_ln393_6_reg_3529_pp0_iter1_reg[0:0] === 1'b1) ? conv_1_bias_new_V_1_q1 : select_ln393_23_fu_1391_p3);

assign select_ln393_38_fu_1486_p3 = ((and_ln393_6_reg_3529_pp0_iter1_reg[0:0] === 1'b1) ? add_ln1353_16_fu_1480_p2 : select_ln393_24_fu_1397_p3);

assign select_ln393_39_fu_1493_p3 = ((and_ln393_6_reg_3529_pp0_iter1_reg[0:0] === 1'b1) ? conv_1_inc_new_V_2_q1 : select_ln393_25_fu_1403_p3);

assign select_ln393_40_fu_1500_p3 = ((and_ln393_6_reg_3529_pp0_iter1_reg[0:0] === 1'b1) ? conv_1_bias_new_V_2_q1 : select_ln393_26_fu_1409_p3);

assign select_ln393_41_fu_1513_p3 = ((and_ln393_6_reg_3529_pp0_iter1_reg[0:0] === 1'b1) ? add_ln1353_17_fu_1507_p2 : select_ln393_27_fu_1415_p3);

assign select_ln393_42_fu_1520_p3 = ((and_ln393_6_reg_3529_pp0_iter1_reg[0:0] === 1'b1) ? conv_1_inc_new_V_3_q1 : select_ln393_28_fu_1421_p3);

assign select_ln393_43_fu_1527_p3 = ((and_ln393_6_reg_3529_pp0_iter1_reg[0:0] === 1'b1) ? conv_1_bias_new_V_3_q1 : select_ln393_29_fu_1427_p3);

assign select_ln393_44_fu_1540_p3 = ((and_ln393_6_reg_3529_pp0_iter1_reg[0:0] === 1'b1) ? add_ln1353_18_fu_1534_p2 : select_ln393_30_fu_1433_p3);

assign select_ln393_45_fu_1118_p3 = ((and_ln393_6_fu_1096_p2[0:0] === 1'b1) ? peIdx_fu_1102_p2 : select_ln393_fu_1076_p3);

assign select_ln393_46_fu_1146_p3 = ((icmp_ln393_fu_1070_p2[0:0] === 1'b1) ? 12'd1 : add_ln393_2_fu_1140_p2);

assign select_ln393_fu_1076_p3 = ((icmp_ln393_fu_1070_p2[0:0] === 1'b1) ? 4'd0 : peIdx_0_i_reg_767);

assign select_ln394_2_fu_1132_p3 = ((or_ln393_fu_1108_p2[0:0] === 1'b1) ? 9'd1 : add_ln394_2_fu_1126_p2);

assign select_ln394_fu_1311_p3 = ((and_ln393_8_fu_1267_p2[0:0] === 1'b1) ? w_fu_1273_p2 : select_ln393_31_fu_1206_p3);

assign select_ln398_11_fu_2473_p3 = ((o_clear_fu_2394_p2[0:0] === 1'b1) ? firPartialRes1_1_V_2_fu_326 : outPartialArr1_1_V_1_fu_358);

assign select_ln398_12_fu_2481_p3 = ((o_clear_fu_2394_p2[0:0] === 1'b1) ? firPartialRes0_V_1_3_fu_310 : outPartialArr0_1_V_2_fu_342);

assign select_ln398_13_fu_2489_p3 = ((o_clear_fu_2394_p2[0:0] === 1'b1) ? firPartialRes0_1_V_reg_4449 : firPartialRes0_1_V_2_fu_2463_p2);

assign select_ln398_15_fu_2531_p3 = ((o_clear_fu_2394_p2[0:0] === 1'b1) ? firPartialRes1_2_V_1_fu_330 : outPartialArr1_2_V_1_fu_362);

assign select_ln398_16_fu_2539_p3 = ((o_clear_fu_2394_p2[0:0] === 1'b1) ? firPartialRes0_V_2_3_fu_314 : outPartialArr0_2_V_1_fu_346);

assign select_ln398_17_fu_2547_p3 = ((o_clear_fu_2394_p2[0:0] === 1'b1) ? firPartialRes0_2_V_reg_4467 : firPartialRes0_2_V_1_fu_2521_p2);

assign select_ln398_19_fu_2589_p3 = ((o_clear_fu_2394_p2[0:0] === 1'b1) ? firPartialRes1_3_V_1_fu_334 : outPartialArr1_3_V_1_fu_366);

assign select_ln398_20_fu_2597_p3 = ((o_clear_fu_2394_p2[0:0] === 1'b1) ? firPartialRes0_V_3_3_fu_318 : outPartialArr0_3_V_1_fu_350);

assign select_ln398_21_fu_2605_p3 = ((o_clear_fu_2394_p2[0:0] === 1'b1) ? firPartialRes0_3_V_reg_4485 : firPartialRes0_3_V_1_fu_2579_p2);

assign select_ln398_8_fu_2423_p3 = ((o_clear_fu_2394_p2[0:0] === 1'b1) ? firPartialRes0_V_0_3_fu_306 : outPartialArr0_0_V_2_fu_338);

assign select_ln398_9_fu_2431_p3 = ((o_clear_fu_2394_p2[0:0] === 1'b1) ? firPartialRes0_0_V_reg_4431 : firPartialRes0_0_V_2_fu_2405_p2);

assign select_ln398_fu_2415_p3 = ((o_clear_fu_2394_p2[0:0] === 1'b1) ? firPartialRes1_0_V_2_fu_322 : outPartialArr1_0_V_1_fu_354);

assign select_ln399_2_fu_1303_p3 = ((and_ln393_8_fu_1267_p2[0:0] === 1'b1) ? icmp_ln399_3_fu_1297_p2 : and_ln393_7_fu_1261_p2);

assign select_ln399_fu_1289_p3 = ((or_ln399_2_fu_1284_p2[0:0] === 1'b1) ? 2'd0 : infoldIdx_0_i_reg_800);

assign sext_ln1352_10_fu_3210_p1 = ret_V_42_reg_4574;

assign sext_ln1352_4_fu_2834_p1 = ret_V_24_reg_4542;

assign sext_ln1352_5_fu_2897_p1 = ret_V_27_reg_4547;

assign sext_ln1352_6_fu_2959_p1 = ret_V_30_reg_4553;

assign sext_ln1352_7_fu_3021_p1 = ret_V_33_reg_4559;

assign sext_ln1352_8_fu_3084_p1 = ret_V_36_reg_4564;

assign sext_ln1352_9_fu_3147_p1 = ret_V_39_reg_4569;

assign sext_ln1352_fu_2771_p1 = ret_V_reg_4537;

assign sext_ln393_10_fu_2768_p1 = $signed(select_ln393_44_reg_3812_pp0_iter8_reg);

assign sext_ln393_4_fu_2750_p1 = $signed(select_ln393_35_reg_3767_pp0_iter8_reg);

assign sext_ln393_5_fu_2753_p1 = $signed(select_ln393_37_reg_3777_pp0_iter8_reg);

assign sext_ln393_6_fu_2756_p1 = $signed(select_ln393_38_reg_3782_pp0_iter8_reg);

assign sext_ln393_7_fu_2759_p1 = $signed(select_ln393_40_reg_3792_pp0_iter8_reg);

assign sext_ln393_8_fu_2762_p1 = $signed(select_ln393_41_reg_3797_pp0_iter8_reg);

assign sext_ln393_9_fu_2765_p1 = $signed(select_ln393_43_reg_3807_pp0_iter8_reg);

assign sext_ln393_fu_2747_p1 = $signed(select_ln393_34_reg_3762_pp0_iter8_reg);

assign sext_ln404_fu_1341_p1 = $signed(add_ln404_fu_1335_p2);

assign shl_ln392_2_fu_1000_p2 = reps_dout << 32'd4;

assign shl_ln392_fu_994_p2 = reps_dout << 32'd6;

assign shl_ln404_mid1_fu_1216_p3 = {{trunc_ln404_2_reg_3558}, {2'd0}};

assign shl_ln6_fu_1029_p3 = {{trunc_ln404_fu_1025_p1}, {2'd0}};

assign sub_ln404_2_fu_1227_p2 = (zext_ln404_5_fu_1223_p1 - zext_ln393_1_fu_1213_p1);

assign sub_ln404_fu_1041_p2 = (zext_ln404_fu_1037_p1 - zext_ln393_fu_1021_p1);

assign tmp_47_fu_2855_p4 = {{ret_V_26_fu_2849_p2[28:19]}};

assign tmp_48_fu_2917_p4 = {{ret_V_29_fu_2912_p2[28:19]}};

assign tmp_49_fu_2979_p4 = {{ret_V_32_fu_2974_p2[28:19]}};

assign tmp_50_fu_3042_p4 = {{ret_V_35_fu_3036_p2[27:19]}};

assign tmp_51_fu_3105_p4 = {{ret_V_38_fu_3099_p2[27:19]}};

assign tmp_52_fu_3168_p4 = {{ret_V_41_fu_3162_p2[28:19]}};

assign tmp_53_fu_3231_p4 = {{ret_V_44_fu_3225_p2[28:19]}};

assign tmp_fu_2792_p4 = {{ret_V_23_fu_2786_p2[28:19]}};

assign trunc_ln214_3_fu_2933_p4 = {{ret_V_29_fu_2912_p2[18:15]}};

assign trunc_ln214_4_fu_2995_p4 = {{ret_V_32_fu_2974_p2[18:15]}};

assign trunc_ln214_5_fu_3058_p4 = {{ret_V_35_fu_3036_p2[18:15]}};

assign trunc_ln214_6_fu_3121_p4 = {{ret_V_38_fu_3099_p2[18:15]}};

assign trunc_ln214_7_fu_3184_p4 = {{ret_V_41_fu_3162_p2[18:15]}};

assign trunc_ln214_8_fu_3247_p4 = {{ret_V_44_fu_3225_p2[18:15]}};

assign trunc_ln214_s_fu_2871_p4 = {{ret_V_26_fu_2849_p2[18:15]}};

assign trunc_ln404_2_fu_1114_p1 = peIdx_fu_1102_p2[2:0];

assign trunc_ln404_fu_1025_p1 = peIdx_0_i_reg_767[2:0];

assign trunc_ln647_fu_1547_p1 = vec_V_V_dout[3:0];

assign trunc_ln_fu_2808_p4 = {{ret_V_23_fu_2786_p2[18:15]}};

assign w_fu_1273_p2 = (8'd2 + select_ln393_31_fu_1206_p3);

assign xor_ln393_2_fu_1251_p2 = (icmp_ln394_reg_3524 ^ 1'd1);

assign xor_ln393_fu_1084_p2 = (icmp_ln393_fu_1070_p2 ^ 1'd1);

assign zext_ln393_1_fu_1213_p1 = peIdx_reg_3547;

assign zext_ln393_2_fu_2711_p1 = select_ln393_33_reg_3757_pp0_iter7_reg;

assign zext_ln393_3_fu_2714_p1 = select_ln393_36_reg_3772_pp0_iter7_reg;

assign zext_ln393_4_fu_2717_p1 = select_ln393_39_reg_3787_pp0_iter7_reg;

assign zext_ln393_5_fu_2720_p1 = select_ln393_42_reg_3802_pp0_iter7_reg;

assign zext_ln393_fu_1021_p1 = peIdx_0_i_reg_767;

assign zext_ln395_fu_1319_p1 = select_ln399_fu_1289_p3;

assign zext_ln404_5_fu_1223_p1 = shl_ln404_mid1_fu_1216_p3;

assign zext_ln404_6_fu_1345_p1 = $unsigned(sext_ln404_fu_1341_p1);

assign zext_ln404_fu_1037_p1 = shl_ln6_fu_1029_p3;

assign zext_ln458_2_fu_1240_p1 = peIdx_reg_3547;

assign zext_ln458_fu_1047_p1 = peIdx_0_i_reg_767;

always @ (posedge ap_clk) begin
    add_ln392_reg_3430[3:0] <= 4'b0000;
end

endmodule //convDSPOpt_5
