-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bn_qurelu_fixed is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    in_V : IN STD_LOGIC_VECTOR (25 downto 0);
    inc_V : IN STD_LOGIC_VECTOR (14 downto 0);
    bias_V : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (3 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of bn_qurelu_fixed is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv40_0 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000000";
    constant ap_const_lv40_400000 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000010000000000000000000000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";

    signal grp_fu_116_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal ret_V_133_reg_124 : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ret_V_fu_69_p2 : STD_LOGIC_VECTOR (39 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of ret_V_fu_69_p2 : signal is "no";
    signal tmp_fu_74_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln895_72_fu_84_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln_fu_90_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln895_fu_64_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln192_fu_100_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_116_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal res_V_fu_108_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal ap_return_int_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_116_p00 : STD_LOGIC_VECTOR (39 downto 0);

    component ultra_net_mac_mulbgk IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (25 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;



begin
    ultra_net_mac_mulbgk_U193 : component ultra_net_mac_mulbgk
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 15,
        din1_WIDTH => 26,
        din2_WIDTH => 32,
        dout_WIDTH => 40)
    port map (
        din0 => grp_fu_116_p0,
        din1 => in_V,
        din2 => bias_V,
        dout => grp_fu_116_p3);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= res_V_fu_108_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ret_V_133_reg_124 <= grp_fu_116_p3;
            end if;
        end if;
    end process;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(res_V_fu_108_p3, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= res_V_fu_108_p3;
        end if; 
    end process;

    grp_fu_116_p0 <= grp_fu_116_p00(15 - 1 downto 0);
    grp_fu_116_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(inc_V),40));
    icmp_ln895_72_fu_84_p2 <= "0" when (tmp_fu_74_p4 = ap_const_lv13_0) else "1";
    icmp_ln895_fu_64_p2 <= "1" when (signed(ret_V_133_reg_124) > signed(ap_const_lv40_0)) else "0";
    res_V_fu_108_p3 <= 
        select_ln192_fu_100_p3 when (icmp_ln895_fu_64_p2(0) = '1') else 
        ap_const_lv4_0;
    ret_V_fu_69_p2 <= std_logic_vector(unsigned(ap_const_lv40_400000) + unsigned(ret_V_133_reg_124));
    select_ln192_fu_100_p3 <= 
        ap_const_lv4_F when (icmp_ln895_72_fu_84_p2(0) = '1') else 
        trunc_ln_fu_90_p4;
    tmp_fu_74_p4 <= ret_V_fu_69_p2(39 downto 27);
    trunc_ln_fu_90_p4 <= ret_V_fu_69_p2(26 downto 23);
end behav;
