-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity convDSPOpt_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    vec_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    vec_V_V_empty_n : IN STD_LOGIC;
    vec_V_V_read : OUT STD_LOGIC;
    out_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_V_V_full_n : IN STD_LOGIC;
    out_V_V_write : OUT STD_LOGIC;
    reps_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    reps_empty_n : IN STD_LOGIC;
    reps_read : OUT STD_LOGIC );
end;


architecture behav of convDSPOpt_3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv47_0 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv47_1 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000000000001";
    constant ap_const_lv16_4200 : STD_LOGIC_VECTOR (15 downto 0) := "0100001000000000";
    constant ap_const_lv6_30 : STD_LOGIC_VECTOR (5 downto 0) := "110000";
    constant ap_const_lv10_210 : STD_LOGIC_VECTOR (9 downto 0) := "1000010000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv21_4000 : STD_LOGIC_VECTOR (20 downto 0) := "000000100000000000000";
    constant ap_const_lv20_4000 : STD_LOGIC_VECTOR (19 downto 0) := "00000100000000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv6_2F : STD_LOGIC_VECTOR (5 downto 0) := "101111";
    constant ap_const_lv10_259 : STD_LOGIC_VECTOR (9 downto 0) := "1001011001";
    constant ap_const_lv21_39029 : STD_LOGIC_VECTOR (20 downto 0) := "000111001000000101001";
    constant ap_const_lv21_3D029 : STD_LOGIC_VECTOR (20 downto 0) := "000111101000000101001";
    constant ap_const_lv10_204 : STD_LOGIC_VECTOR (9 downto 0) := "1000000100";
    constant ap_const_lv20_F829 : STD_LOGIC_VECTOR (19 downto 0) := "00001111100000101001";
    constant ap_const_lv20_13829 : STD_LOGIC_VECTOR (19 downto 0) := "00010011100000101001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv29_0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal conv_5_inc_new_V_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_5_inc_new_V_0_ce0 : STD_LOGIC;
    signal conv_5_inc_new_V_0_q0 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_5_inc_new_V_0_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_5_inc_new_V_0_ce1 : STD_LOGIC;
    signal conv_5_inc_new_V_0_q1 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_5_bias_new_V_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_5_bias_new_V_0_ce0 : STD_LOGIC;
    signal conv_5_bias_new_V_0_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal conv_5_bias_new_V_0_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_5_bias_new_V_0_ce1 : STD_LOGIC;
    signal conv_5_bias_new_V_0_q1 : STD_LOGIC_VECTOR (20 downto 0);
    signal conv_5_inc_new_V_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_5_inc_new_V_1_ce0 : STD_LOGIC;
    signal conv_5_inc_new_V_1_q0 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_5_inc_new_V_1_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_5_inc_new_V_1_ce1 : STD_LOGIC;
    signal conv_5_inc_new_V_1_q1 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_5_bias_new_V_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_5_bias_new_V_1_ce0 : STD_LOGIC;
    signal conv_5_bias_new_V_1_q0 : STD_LOGIC_VECTOR (19 downto 0);
    signal conv_5_bias_new_V_1_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_5_bias_new_V_1_ce1 : STD_LOGIC;
    signal conv_5_bias_new_V_1_q1 : STD_LOGIC_VECTOR (19 downto 0);
    signal conv_5_w_new_V_0_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_5_w_new_V_0_2_ce0 : STD_LOGIC;
    signal conv_5_w_new_V_0_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_5_w_new_V_0_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_5_w_new_V_0_1_ce0 : STD_LOGIC;
    signal conv_5_w_new_V_0_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_5_w_new_V_0_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_5_w_new_V_0_0_ce0 : STD_LOGIC;
    signal conv_5_w_new_V_0_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_5_w_new_V_1_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_5_w_new_V_1_2_ce0 : STD_LOGIC;
    signal conv_5_w_new_V_1_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_5_w_new_V_1_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_5_w_new_V_1_1_ce0 : STD_LOGIC;
    signal conv_5_w_new_V_1_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_5_w_new_V_1_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_5_w_new_V_1_0_ce0 : STD_LOGIC;
    signal conv_5_w_new_V_1_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal vec_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln392_reg_2601 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln392_reg_2601_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal o_out_reg_2746 : STD_LOGIC_VECTOR (0 downto 0);
    signal o_out_reg_2746_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal reps_blk_n : STD_LOGIC;
    signal indvar_flatten145_reg_429 : STD_LOGIC_VECTOR (46 downto 0);
    signal indvar_flatten33_reg_440 : STD_LOGIC_VECTOR (15 downto 0);
    signal peIdx_0_i_reg_451 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten_reg_462 : STD_LOGIC_VECTOR (9 downto 0);
    signal infoldIdx_0_i_reg_473 : STD_LOGIC_VECTOR (5 downto 0);
    signal w_0_i_reg_484 : STD_LOGIC_VECTOR (4 downto 0);
    signal reps_read_reg_2564 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal bound46_fu_535_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal bound46_reg_2570 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal trunc_ln404_fu_541_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln404_reg_2575 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln392_fu_553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln392_reg_2601_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln392_reg_2601_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln392_reg_2601_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln392_reg_2601_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln392_4_fu_558_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal icmp_ln393_fu_564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln393_reg_2610 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln393_reg_2610_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln393_fu_578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln393_reg_2621 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln393_14_fu_602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln393_14_reg_2626 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln393_14_reg_2626_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal peIdx_fu_608_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal peIdx_reg_2637 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln393_fu_614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln393_reg_2642 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln404_4_fu_620_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln404_4_reg_2647 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln393_4_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln393_4_reg_2653 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln393_16_fu_636_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln393_16_reg_2658 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln393_99_fu_642_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln399_fu_662_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln399_reg_2669 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln399_reg_2669_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln399_reg_2669_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln399_reg_2669_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln399_reg_2669_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal infoldIdx_fu_670_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln394_4_fu_682_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln393_100_fu_696_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_5_inc_new_V_0_l_reg_2691 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal conv_5_bias_new_V_0_1_reg_2696 : STD_LOGIC_VECTOR (20 downto 0);
    signal conv_5_inc_new_V_1_l_reg_2701 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_5_bias_new_V_1_1_reg_2706 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln1353_fu_732_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln1353_reg_2711 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln1353_35_fu_738_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln1353_35_reg_2716 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln394_fu_835_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal o_out_fu_850_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal o_out_reg_2746_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal o_out_reg_2746_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal o_out_reg_2746_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal o_out_reg_2746_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal o_out_reg_2746_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln393_93_fu_912_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln393_93_reg_2780 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln393_93_reg_2780_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln393_93_reg_2780_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln393_93_reg_2780_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln393_94_fu_919_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_94_reg_2785 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_94_reg_2785_pp0_iter3_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_94_reg_2785_pp0_iter4_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_94_reg_2785_pp0_iter5_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_94_reg_2785_pp0_iter6_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_95_fu_932_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_95_reg_2790 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_95_reg_2790_pp0_iter3_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_95_reg_2790_pp0_iter4_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_95_reg_2790_pp0_iter5_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_95_reg_2790_pp0_iter6_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_96_fu_939_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln393_96_reg_2795 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln393_96_reg_2795_pp0_iter3_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln393_96_reg_2795_pp0_iter4_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln393_96_reg_2795_pp0_iter5_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln393_97_fu_946_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_97_reg_2800 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_97_reg_2800_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_97_reg_2800_pp0_iter4_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_97_reg_2800_pp0_iter5_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_97_reg_2800_pp0_iter6_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_98_fu_959_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_98_reg_2805 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_98_reg_2805_pp0_iter3_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_98_reg_2805_pp0_iter4_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_98_reg_2805_pp0_iter5_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_98_reg_2805_pp0_iter6_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln647_fu_966_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln647_reg_2810 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_78_i_i_reg_2815 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_1_i_i_reg_2820 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_78_1_i_i_reg_2825 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_2_i_i_reg_2830 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_78_2_i_i_reg_2835 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_3_i_i_reg_2840 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_78_3_i_i_reg_2845 : STD_LOGIC_VECTOR (3 downto 0);
    signal wpacks_0_0_V_fu_1086_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_0_V_reg_2850 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_1_V_fu_1156_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_1_V_reg_2855 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_2_V_fu_1226_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_2_V_reg_2860 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_3_V_fu_1296_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_3_V_reg_2865 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_0_V_fu_1348_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_0_V_reg_2870 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_1_V_fu_1418_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_1_V_reg_2875 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_2_V_fu_1488_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_2_V_reg_2880 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_3_V_fu_1558_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_3_V_reg_2885 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1352_fu_2436_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_reg_2890 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_38_fu_2443_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_38_reg_2895 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln700_fu_1610_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_reg_2900 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_88_fu_1613_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_88_reg_2905 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1352_39_fu_2450_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_39_reg_2910 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln700_89_fu_1623_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_89_reg_2915 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1352_40_fu_2457_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_40_reg_2920 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln700_90_fu_1633_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_90_reg_2925 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1352_41_fu_2464_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_41_reg_2930 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_42_fu_2471_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_42_reg_2935 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln700_91_fu_1642_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_91_reg_2940 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_92_fu_1645_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_92_reg_2945 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1352_43_fu_2478_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_43_reg_2950 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln700_93_fu_1651_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_93_reg_2955 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1352_44_fu_2485_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_44_reg_2960 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln700_94_fu_1657_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_94_reg_2965 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln700_fu_1666_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln700_reg_2970 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln700_127_fu_1682_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln700_127_reg_2976 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_54_reg_2982 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_112_fu_1712_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln700_112_reg_2987 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln700_133_fu_1728_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln700_133_reg_2993 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_57_reg_2999 : STD_LOGIC_VECTOR (0 downto 0);
    signal firPartialRes0_V_0_3_4_reg_3004 : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes0_V_1_3_4_reg_3009 : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes1_0_V_s_reg_3014 : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes1_1_V_s_reg_3019 : STD_LOGIC_VECTOR (17 downto 0);
    signal o_clear_fu_1776_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal o_clear_reg_3024 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln78_17_fu_1842_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln78_17_reg_3032 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_reg_3037 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_56_reg_3042 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln398_fu_1882_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln398_reg_3047 : STD_LOGIC_VECTOR (17 downto 0);
    signal outPartialArr0_0_V_fu_1896_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal outPartialArr0_0_V_reg_3052 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln78_20_fu_1963_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln78_20_reg_3057 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_s_reg_3062 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_59_reg_3067 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln398_7_fu_2003_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln398_7_reg_3072 : STD_LOGIC_VECTOR (17 downto 0);
    signal outPartialArr0_1_V_fu_2017_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal outPartialArr0_1_V_reg_3077 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_fu_2492_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_reg_3082 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_55_fu_2498_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_55_reg_3088 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_58_fu_2504_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_58_reg_3094 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_61_fu_2510_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_61_reg_3100 : STD_LOGIC_VECTOR (27 downto 0);
    signal res_V_fu_2233_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_reg_3106 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_11_fu_2295_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_11_reg_3111 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_12_fu_2357_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_12_reg_3116 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_13_fu_2419_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_13_reg_3121 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter1_state4 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal zext_ln458_fu_545_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln458_4_fu_804_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln404_10_fu_866_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal firPartialRes0_V_0_3_fu_200 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln398_38_fu_2078_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_sig_allocacmp_firPartialRes0_V_0_3_4 : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes0_V_1_3_fu_204 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln398_42_fu_2121_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_sig_allocacmp_firPartialRes0_V_1_3_4 : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes1_0_V_4_fu_208 : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes1_0_V_fu_2085_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_sig_allocacmp_firPartialRes1_0_V_s : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes1_1_V_4_fu_212 : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes1_1_V_fu_2128_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_sig_allocacmp_firPartialRes1_1_V_s : STD_LOGIC_VECTOR (17 downto 0);
    signal outPartialArr0_0_V_4_fu_216 : STD_LOGIC_VECTOR (17 downto 0);
    signal outPartialArr0_1_V_4_fu_220 : STD_LOGIC_VECTOR (17 downto 0);
    signal outPartialArr1_V_0_3_fu_224 : STD_LOGIC_VECTOR (17 downto 0);
    signal outPartialArr1_V_1_3_fu_228 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal shl_ln392_4_fu_500_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln392_fu_495_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_fu_505_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_76_fu_511_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_77_fu_523_p3 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_shl232_fu_531_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_shl_fu_519_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal icmp_ln395_fu_584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln394_fu_596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln393_fu_570_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln393_4_fu_624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln393_13_fu_590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln399_fu_650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln399_4_fu_656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln394_4_fu_676_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln393_4_fu_690_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln8_fu_704_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln404_5_fu_715_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln404_fu_711_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln404_9_fu_722_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln404_fu_726_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln399_fu_751_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln404_mid1_fu_769_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln404_5_mid1_fu_780_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln404_11_fu_776_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln404_12_fu_787_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln404_4_fu_791_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_84_fu_744_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal and_ln393_fu_757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln393_91_fu_762_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_fu_816_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln399_7_fu_822_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln393_15_fu_811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln399_5_fu_845_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln399_4_fu_828_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln393_92_fu_797_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln395_fu_842_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln404_fu_856_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln404_fu_862_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln393_85_fu_876_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln393_86_fu_882_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln1353_36_fu_926_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_87_fu_888_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_88_fu_894_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln393_89_fu_900_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln1353_37_fu_953_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln393_90_fu_906_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln68_fu_1044_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln68_8_fu_1056_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln68_s_fu_1060_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln647_17_fu_1040_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln68_fu_1068_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln68_138_fu_1072_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln68_fu_1076_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln9_fu_1048_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln68_139_fu_1082_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_78_fu_1102_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_79_fu_1120_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln68_56_fu_1130_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Result_1_i8_i_fu_1092_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln68_140_fu_1138_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln68_141_fu_1142_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln68_65_fu_1146_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln68_55_fu_1112_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln68_142_fu_1152_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_80_fu_1172_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_81_fu_1190_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln68_58_fu_1200_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Result_2_i9_i_fu_1162_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln68_143_fu_1208_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln68_144_fu_1212_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln68_67_fu_1216_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln68_57_fu_1182_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln68_145_fu_1222_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_82_fu_1242_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_83_fu_1260_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln68_60_fu_1270_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Result_3_i10_i_fu_1232_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln68_146_fu_1278_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln68_147_fu_1282_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln68_69_fu_1286_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln68_59_fu_1252_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln68_148_fu_1292_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln68_9_fu_1306_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln68_10_fu_1318_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln68_62_fu_1322_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln647_18_fu_1302_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln68_149_fu_1330_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln68_150_fu_1334_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln68_71_fu_1338_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln68_61_fu_1310_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln68_151_fu_1344_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_84_fu_1364_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_85_fu_1382_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln68_64_fu_1392_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Result_1_i25_i_fu_1354_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln68_152_fu_1400_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln68_153_fu_1404_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln68_73_fu_1408_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln68_63_fu_1374_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln68_154_fu_1414_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_86_fu_1434_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_87_fu_1452_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln68_66_fu_1462_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Result_2_i35_i_fu_1424_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln68_155_fu_1470_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln68_156_fu_1474_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln68_75_fu_1478_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln68_65_fu_1444_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln68_157_fu_1484_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_88_fu_1504_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_89_fu_1522_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln68_68_fu_1532_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Result_3_i45_i_fu_1494_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln68_158_fu_1540_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln68_159_fu_1544_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln68_77_fu_1548_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln68_67_fu_1514_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln68_160_fu_1554_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal ipack_0_V_fu_1564_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ipack_1_V_fu_1572_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ipack_2_V_fu_1580_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ipack_3_V_fu_1588_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln700_fu_1663_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln215_54_fu_1660_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln700_65_fu_1672_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln700_66_fu_1679_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln700_129_fu_1688_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln700_126_fu_1675_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln700_130_fu_1692_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln700_68_fu_1709_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln215_59_fu_1706_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln700_70_fu_1718_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln700_71_fu_1725_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln700_135_fu_1734_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln700_132_fu_1721_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln700_136_fu_1738_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln700_67_fu_1784_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal sext_ln700_64_fu_1781_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal add_ln700_128_fu_1787_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal p_Result_i_i_i_i2_s_fu_1801_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln78_fu_1811_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_55_fu_1830_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_i_i_i_i4_s_fu_1820_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln78_17_fu_1838_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln700_108_fu_1791_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal trunc_ln647_19_fu_1797_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln78_fu_1814_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln398_fu_1874_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln68_162_fu_1870_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln398_37_fu_1888_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln68_161_fu_1866_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln700_72_fu_1905_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal sext_ln700_69_fu_1902_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal add_ln700_134_fu_1908_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal p_Result_i_i_i_i2_2_fu_1922_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln78_19_fu_1932_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_58_fu_1951_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_i_i_i_i4_2_fu_1941_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln78_20_fu_1959_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln700_114_fu_1912_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal trunc_ln647_20_fu_1918_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln78_19_fu_1935_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln398_40_fu_1995_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln68_166_fu_1991_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln398_41_fu_2009_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln68_165_fu_1987_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln647_fu_2049_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln78_18_fu_2052_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln78_18_fu_2055_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal firPartialRes0_0_V_fu_2061_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln68_164_fu_2064_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes0_0_V_4_fu_2068_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln700_111_fu_2073_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln647_11_fu_2092_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln78_21_fu_2095_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln78_21_fu_2098_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal firPartialRes0_1_V_fu_2104_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln68_168_fu_2107_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes0_1_V_4_fu_2111_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln700_117_fu_2116_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln393_fu_2167_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal sext_ln1352_fu_2179_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_64_fu_2182_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal sext_ln393_13_fu_2170_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_54_fu_2194_p2 : STD_LOGIC_VECTOR (27 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of ret_V_54_fu_2194_p2 : signal is "no";
    signal tmp_60_fu_2199_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln895_45_fu_2209_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln_fu_2215_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln895_fu_2188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln192_fu_2225_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1352_11_fu_2241_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_65_fu_2244_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_57_fu_2256_p2 : STD_LOGIC_VECTOR (27 downto 0);
    attribute use_dsp48 of ret_V_57_fu_2256_p2 : signal is "no";
    signal tmp_61_fu_2261_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln895_47_fu_2271_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln214_s_fu_2277_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln895_46_fu_2250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln192_11_fu_2287_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln393_14_fu_2173_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal sext_ln1352_12_fu_2303_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_66_fu_2306_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal sext_ln393_15_fu_2176_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_60_fu_2318_p2 : STD_LOGIC_VECTOR (27 downto 0);
    attribute use_dsp48 of ret_V_60_fu_2318_p2 : signal is "no";
    signal tmp_62_fu_2323_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln895_49_fu_2333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln214_9_fu_2339_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln895_48_fu_2312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln192_12_fu_2349_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1352_13_fu_2365_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_67_fu_2368_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_63_fu_2380_p2 : STD_LOGIC_VECTOR (27 downto 0);
    attribute use_dsp48 of ret_V_63_fu_2380_p2 : signal is "no";
    signal tmp_63_fu_2385_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln895_51_fu_2395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln214_1_fu_2401_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln895_50_fu_2374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln192_13_fu_2411_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln1352_fu_2436_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln215_fu_1599_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_38_fu_2443_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln215_30_fu_1606_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_39_fu_2450_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln215_31_fu_1619_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_40_fu_2457_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln215_32_fu_1629_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_41_fu_2464_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1352_42_fu_2471_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1352_43_fu_2478_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1352_44_fu_2485_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ret_V_fu_2492_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln393_fu_2043_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_55_fu_2498_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_58_fu_2504_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln393_12_fu_2046_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_61_fu_2510_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component ultra_net_mul_mulbml IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (25 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (40 downto 0) );
    end component;


    component ultra_net_mul_mulcUB IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component convDSPOpt_3_convdcE IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component convDSPOpt_3_convddE IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (20 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component convDSPOpt_3_convdeE IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component convDSPOpt_3_convdfE IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (19 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component convDSPOpt_3_convdgE IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component convDSPOpt_3_convdhF IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component convDSPOpt_3_convdiF IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component convDSPOpt_3_convdjF IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component convDSPOpt_3_convdkF IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component convDSPOpt_3_convdlF IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    conv_5_inc_new_V_0_U : component convDSPOpt_3_convdcE
    generic map (
        DataWidth => 10,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_5_inc_new_V_0_address0,
        ce0 => conv_5_inc_new_V_0_ce0,
        q0 => conv_5_inc_new_V_0_q0,
        address1 => conv_5_inc_new_V_0_address1,
        ce1 => conv_5_inc_new_V_0_ce1,
        q1 => conv_5_inc_new_V_0_q1);

    conv_5_bias_new_V_0_U : component convDSPOpt_3_convddE
    generic map (
        DataWidth => 21,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_5_bias_new_V_0_address0,
        ce0 => conv_5_bias_new_V_0_ce0,
        q0 => conv_5_bias_new_V_0_q0,
        address1 => conv_5_bias_new_V_0_address1,
        ce1 => conv_5_bias_new_V_0_ce1,
        q1 => conv_5_bias_new_V_0_q1);

    conv_5_inc_new_V_1_U : component convDSPOpt_3_convdeE
    generic map (
        DataWidth => 10,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_5_inc_new_V_1_address0,
        ce0 => conv_5_inc_new_V_1_ce0,
        q0 => conv_5_inc_new_V_1_q0,
        address1 => conv_5_inc_new_V_1_address1,
        ce1 => conv_5_inc_new_V_1_ce1,
        q1 => conv_5_inc_new_V_1_q1);

    conv_5_bias_new_V_1_U : component convDSPOpt_3_convdfE
    generic map (
        DataWidth => 20,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_5_bias_new_V_1_address0,
        ce0 => conv_5_bias_new_V_1_ce0,
        q0 => conv_5_bias_new_V_1_q0,
        address1 => conv_5_bias_new_V_1_address1,
        ce1 => conv_5_bias_new_V_1_ce1,
        q1 => conv_5_bias_new_V_1_q1);

    conv_5_w_new_V_0_2_U : component convDSPOpt_3_convdgE
    generic map (
        DataWidth => 16,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_5_w_new_V_0_2_address0,
        ce0 => conv_5_w_new_V_0_2_ce0,
        q0 => conv_5_w_new_V_0_2_q0);

    conv_5_w_new_V_0_1_U : component convDSPOpt_3_convdhF
    generic map (
        DataWidth => 16,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_5_w_new_V_0_1_address0,
        ce0 => conv_5_w_new_V_0_1_ce0,
        q0 => conv_5_w_new_V_0_1_q0);

    conv_5_w_new_V_0_0_U : component convDSPOpt_3_convdiF
    generic map (
        DataWidth => 16,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_5_w_new_V_0_0_address0,
        ce0 => conv_5_w_new_V_0_0_ce0,
        q0 => conv_5_w_new_V_0_0_q0);

    conv_5_w_new_V_1_2_U : component convDSPOpt_3_convdjF
    generic map (
        DataWidth => 16,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_5_w_new_V_1_2_address0,
        ce0 => conv_5_w_new_V_1_2_ce0,
        q0 => conv_5_w_new_V_1_2_q0);

    conv_5_w_new_V_1_1_U : component convDSPOpt_3_convdkF
    generic map (
        DataWidth => 16,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_5_w_new_V_1_1_address0,
        ce0 => conv_5_w_new_V_1_1_ce0,
        q0 => conv_5_w_new_V_1_1_q0);

    conv_5_w_new_V_1_0_U : component convDSPOpt_3_convdlF
    generic map (
        DataWidth => 16,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_5_w_new_V_1_0_address0,
        ce0 => conv_5_w_new_V_1_0_ce0,
        q0 => conv_5_w_new_V_1_0_q0);

    ultra_net_mul_mulbml_U598 : component ultra_net_mul_mulbml
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 15,
        dout_WIDTH => 41)
    port map (
        din0 => wpacks_0_0_V_reg_2850,
        din1 => mul_ln1352_fu_2436_p1,
        dout => mul_ln1352_fu_2436_p2);

    ultra_net_mul_mulbml_U599 : component ultra_net_mul_mulbml
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 15,
        dout_WIDTH => 41)
    port map (
        din0 => wpacks_0_1_V_reg_2855,
        din1 => mul_ln1352_38_fu_2443_p1,
        dout => mul_ln1352_38_fu_2443_p2);

    ultra_net_mul_mulbml_U600 : component ultra_net_mul_mulbml
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 15,
        dout_WIDTH => 41)
    port map (
        din0 => wpacks_0_2_V_reg_2860,
        din1 => mul_ln1352_39_fu_2450_p1,
        dout => mul_ln1352_39_fu_2450_p2);

    ultra_net_mul_mulbml_U601 : component ultra_net_mul_mulbml
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 15,
        dout_WIDTH => 41)
    port map (
        din0 => wpacks_0_3_V_reg_2865,
        din1 => mul_ln1352_40_fu_2457_p1,
        dout => mul_ln1352_40_fu_2457_p2);

    ultra_net_mul_mulbml_U602 : component ultra_net_mul_mulbml
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 15,
        dout_WIDTH => 41)
    port map (
        din0 => wpacks_1_0_V_reg_2870,
        din1 => mul_ln1352_41_fu_2464_p1,
        dout => mul_ln1352_41_fu_2464_p2);

    ultra_net_mul_mulbml_U603 : component ultra_net_mul_mulbml
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 15,
        dout_WIDTH => 41)
    port map (
        din0 => wpacks_1_1_V_reg_2875,
        din1 => mul_ln1352_42_fu_2471_p1,
        dout => mul_ln1352_42_fu_2471_p2);

    ultra_net_mul_mulbml_U604 : component ultra_net_mul_mulbml
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 15,
        dout_WIDTH => 41)
    port map (
        din0 => wpacks_1_2_V_reg_2880,
        din1 => mul_ln1352_43_fu_2478_p1,
        dout => mul_ln1352_43_fu_2478_p2);

    ultra_net_mul_mulbml_U605 : component ultra_net_mul_mulbml
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 15,
        dout_WIDTH => 41)
    port map (
        din0 => wpacks_1_3_V_reg_2885,
        din1 => mul_ln1352_44_fu_2485_p1,
        dout => mul_ln1352_44_fu_2485_p2);

    ultra_net_mul_mulcUB_U606 : component ultra_net_mul_mulcUB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 18,
        dout_WIDTH => 28)
    port map (
        din0 => ret_V_fu_2492_p0,
        din1 => outPartialArr0_0_V_reg_3052,
        dout => ret_V_fu_2492_p2);

    ultra_net_mul_mulcUB_U607 : component ultra_net_mul_mulcUB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 18,
        dout_WIDTH => 28)
    port map (
        din0 => ret_V_55_fu_2498_p0,
        din1 => add_ln398_reg_3047,
        dout => ret_V_55_fu_2498_p2);

    ultra_net_mul_mulcUB_U608 : component ultra_net_mul_mulcUB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 18,
        dout_WIDTH => 28)
    port map (
        din0 => ret_V_58_fu_2504_p0,
        din1 => outPartialArr0_1_V_reg_3077,
        dout => ret_V_58_fu_2504_p2);

    ultra_net_mul_mulcUB_U609 : component ultra_net_mul_mulcUB
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 18,
        dout_WIDTH => 28)
    port map (
        din0 => ret_V_61_fu_2510_p0,
        din1 => add_ln398_7_reg_3072,
        dout => ret_V_61_fu_2510_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln392_fu_553_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter1_state4)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten145_reg_429_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln392_fu_553_p2 = ap_const_lv1_0))) then 
                indvar_flatten145_reg_429 <= add_ln392_4_fu_558_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                indvar_flatten145_reg_429 <= ap_const_lv47_0;
            end if; 
        end if;
    end process;

    indvar_flatten33_reg_440_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln392_fu_553_p2 = ap_const_lv1_0))) then 
                indvar_flatten33_reg_440 <= select_ln393_100_fu_696_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                indvar_flatten33_reg_440 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_462_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln392_fu_553_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_462 <= select_ln394_4_fu_682_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                indvar_flatten_reg_462 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    infoldIdx_0_i_reg_473_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln392_fu_553_p2 = ap_const_lv1_0))) then 
                infoldIdx_0_i_reg_473 <= infoldIdx_fu_670_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                infoldIdx_0_i_reg_473 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    peIdx_0_i_reg_451_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln392_fu_553_p2 = ap_const_lv1_0))) then 
                peIdx_0_i_reg_451 <= select_ln393_99_fu_642_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                peIdx_0_i_reg_451 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    w_0_i_reg_484_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln392_reg_2601 = ap_const_lv1_0))) then 
                w_0_i_reg_484 <= select_ln394_fu_835_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                w_0_i_reg_484 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = and_ln393_14_reg_2626) and (icmp_ln393_reg_2610 = ap_const_lv1_0))) then
                add_ln1353_35_reg_2716 <= add_ln1353_35_fu_738_p2;
                add_ln1353_reg_2711 <= add_ln1353_fu_732_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln392_reg_2601_pp0_iter4_reg = ap_const_lv1_0))) then
                add_ln398_7_reg_3072 <= add_ln398_7_fu_2003_p2;
                add_ln398_reg_3047 <= add_ln398_fu_1882_p2;
                add_ln78_17_reg_3032 <= add_ln78_17_fu_1842_p2;
                add_ln78_20_reg_3057 <= add_ln78_20_fu_1963_p2;
                firPartialRes0_V_0_3_4_reg_3004 <= ap_sig_allocacmp_firPartialRes0_V_0_3_4;
                firPartialRes0_V_1_3_4_reg_3009 <= ap_sig_allocacmp_firPartialRes0_V_1_3_4;
                firPartialRes1_0_V_s_reg_3014 <= ap_sig_allocacmp_firPartialRes1_0_V_s;
                firPartialRes1_1_V_s_reg_3019 <= ap_sig_allocacmp_firPartialRes1_1_V_s;
                o_clear_reg_3024 <= o_clear_fu_1776_p2;
                outPartialArr0_0_V_reg_3052 <= outPartialArr0_0_V_fu_1896_p2;
                outPartialArr0_1_V_reg_3077 <= outPartialArr0_1_V_fu_2017_p2;
                tmp_56_reg_3042 <= add_ln700_128_fu_1787_p2(32 downto 32);
                tmp_59_reg_3067 <= add_ln700_134_fu_1908_p2(32 downto 32);
                tmp_reg_3037 <= add_ln700_108_fu_1791_p2(42 downto 33);
                tmp_s_reg_3062 <= add_ln700_114_fu_1912_p2(42 downto 33);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln392_reg_2601_pp0_iter3_reg = ap_const_lv1_0))) then
                add_ln700_112_reg_2987 <= add_ln700_112_fu_1712_p2;
                add_ln700_127_reg_2976 <= add_ln700_127_fu_1682_p2;
                add_ln700_133_reg_2993 <= add_ln700_133_fu_1728_p2;
                add_ln700_reg_2970 <= add_ln700_fu_1666_p2;
                tmp_54_reg_2982 <= add_ln700_130_fu_1692_p2(10 downto 10);
                tmp_57_reg_2999 <= add_ln700_136_fu_1738_p2(10 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln392_fu_553_p2 = ap_const_lv1_0))) then
                and_ln393_14_reg_2626 <= and_ln393_14_fu_602_p2;
                and_ln393_16_reg_2658 <= and_ln393_16_fu_636_p2;
                icmp_ln393_reg_2610 <= icmp_ln393_fu_564_p2;
                or_ln393_4_reg_2653 <= or_ln393_4_fu_630_p2;
                or_ln393_reg_2642 <= or_ln393_fu_614_p2;
                peIdx_reg_2637 <= peIdx_fu_608_p2;
                select_ln399_reg_2669 <= select_ln399_fu_662_p3;
                trunc_ln404_4_reg_2647 <= trunc_ln404_4_fu_620_p1;
                xor_ln393_reg_2621 <= xor_ln393_fu_578_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln393_14_reg_2626_pp0_iter1_reg <= and_ln393_14_reg_2626;
                icmp_ln392_reg_2601 <= icmp_ln392_fu_553_p2;
                icmp_ln392_reg_2601_pp0_iter1_reg <= icmp_ln392_reg_2601;
                icmp_ln393_reg_2610_pp0_iter1_reg <= icmp_ln393_reg_2610;
                select_ln399_reg_2669_pp0_iter1_reg <= select_ln399_reg_2669;
                trunc_ln404_reg_2575 <= trunc_ln404_fu_541_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    bound46_reg_2570(46 downto 10) <= bound46_fu_535_p2(46 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                conv_5_bias_new_V_0_1_reg_2696 <= conv_5_bias_new_V_0_q0;
                conv_5_bias_new_V_1_1_reg_2706 <= conv_5_bias_new_V_1_q0;
                conv_5_inc_new_V_0_l_reg_2691 <= conv_5_inc_new_V_0_q0;
                conv_5_inc_new_V_1_l_reg_2701 <= conv_5_inc_new_V_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln392_reg_2601_pp0_iter5_reg = ap_const_lv1_0))) then
                firPartialRes0_V_0_3_fu_200 <= select_ln398_38_fu_2078_p3;
                firPartialRes0_V_1_3_fu_204 <= select_ln398_42_fu_2121_p3;
                firPartialRes1_0_V_4_fu_208 <= firPartialRes1_0_V_fu_2085_p3;
                firPartialRes1_1_V_4_fu_212 <= firPartialRes1_1_V_fu_2128_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln392_reg_2601_pp0_iter2_reg <= icmp_ln392_reg_2601_pp0_iter1_reg;
                icmp_ln392_reg_2601_pp0_iter3_reg <= icmp_ln392_reg_2601_pp0_iter2_reg;
                icmp_ln392_reg_2601_pp0_iter4_reg <= icmp_ln392_reg_2601_pp0_iter3_reg;
                icmp_ln392_reg_2601_pp0_iter5_reg <= icmp_ln392_reg_2601_pp0_iter4_reg;
                o_out_reg_2746_pp0_iter2_reg <= o_out_reg_2746;
                o_out_reg_2746_pp0_iter3_reg <= o_out_reg_2746_pp0_iter2_reg;
                o_out_reg_2746_pp0_iter4_reg <= o_out_reg_2746_pp0_iter3_reg;
                o_out_reg_2746_pp0_iter5_reg <= o_out_reg_2746_pp0_iter4_reg;
                o_out_reg_2746_pp0_iter6_reg <= o_out_reg_2746_pp0_iter5_reg;
                o_out_reg_2746_pp0_iter7_reg <= o_out_reg_2746_pp0_iter6_reg;
                select_ln393_93_reg_2780_pp0_iter3_reg <= select_ln393_93_reg_2780;
                select_ln393_93_reg_2780_pp0_iter4_reg <= select_ln393_93_reg_2780_pp0_iter3_reg;
                select_ln393_93_reg_2780_pp0_iter5_reg <= select_ln393_93_reg_2780_pp0_iter4_reg;
                select_ln393_94_reg_2785_pp0_iter3_reg <= select_ln393_94_reg_2785;
                select_ln393_94_reg_2785_pp0_iter4_reg <= select_ln393_94_reg_2785_pp0_iter3_reg;
                select_ln393_94_reg_2785_pp0_iter5_reg <= select_ln393_94_reg_2785_pp0_iter4_reg;
                select_ln393_94_reg_2785_pp0_iter6_reg <= select_ln393_94_reg_2785_pp0_iter5_reg;
                select_ln393_95_reg_2790_pp0_iter3_reg <= select_ln393_95_reg_2790;
                select_ln393_95_reg_2790_pp0_iter4_reg <= select_ln393_95_reg_2790_pp0_iter3_reg;
                select_ln393_95_reg_2790_pp0_iter5_reg <= select_ln393_95_reg_2790_pp0_iter4_reg;
                select_ln393_95_reg_2790_pp0_iter6_reg <= select_ln393_95_reg_2790_pp0_iter5_reg;
                select_ln393_96_reg_2795_pp0_iter3_reg <= select_ln393_96_reg_2795;
                select_ln393_96_reg_2795_pp0_iter4_reg <= select_ln393_96_reg_2795_pp0_iter3_reg;
                select_ln393_96_reg_2795_pp0_iter5_reg <= select_ln393_96_reg_2795_pp0_iter4_reg;
                select_ln393_97_reg_2800_pp0_iter3_reg <= select_ln393_97_reg_2800;
                select_ln393_97_reg_2800_pp0_iter4_reg <= select_ln393_97_reg_2800_pp0_iter3_reg;
                select_ln393_97_reg_2800_pp0_iter5_reg <= select_ln393_97_reg_2800_pp0_iter4_reg;
                select_ln393_97_reg_2800_pp0_iter6_reg <= select_ln393_97_reg_2800_pp0_iter5_reg;
                select_ln393_98_reg_2805_pp0_iter3_reg <= select_ln393_98_reg_2805;
                select_ln393_98_reg_2805_pp0_iter4_reg <= select_ln393_98_reg_2805_pp0_iter3_reg;
                select_ln393_98_reg_2805_pp0_iter5_reg <= select_ln393_98_reg_2805_pp0_iter4_reg;
                select_ln393_98_reg_2805_pp0_iter6_reg <= select_ln393_98_reg_2805_pp0_iter5_reg;
                select_ln399_reg_2669_pp0_iter2_reg <= select_ln399_reg_2669_pp0_iter1_reg;
                select_ln399_reg_2669_pp0_iter3_reg <= select_ln399_reg_2669_pp0_iter2_reg;
                select_ln399_reg_2669_pp0_iter4_reg <= select_ln399_reg_2669_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln392_reg_2601_pp0_iter2_reg = ap_const_lv1_0))) then
                mul_ln1352_38_reg_2895 <= mul_ln1352_38_fu_2443_p2;
                mul_ln1352_39_reg_2910 <= mul_ln1352_39_fu_2450_p2;
                mul_ln1352_40_reg_2920 <= mul_ln1352_40_fu_2457_p2;
                mul_ln1352_41_reg_2930 <= mul_ln1352_41_fu_2464_p2;
                mul_ln1352_42_reg_2935 <= mul_ln1352_42_fu_2471_p2;
                mul_ln1352_43_reg_2950 <= mul_ln1352_43_fu_2478_p2;
                mul_ln1352_44_reg_2960 <= mul_ln1352_44_fu_2485_p2;
                mul_ln1352_reg_2890 <= mul_ln1352_fu_2436_p2;
                trunc_ln700_88_reg_2905 <= trunc_ln700_88_fu_1613_p1;
                trunc_ln700_89_reg_2915 <= trunc_ln700_89_fu_1623_p1;
                trunc_ln700_90_reg_2925 <= trunc_ln700_90_fu_1633_p1;
                trunc_ln700_91_reg_2940 <= trunc_ln700_91_fu_1642_p1;
                trunc_ln700_92_reg_2945 <= trunc_ln700_92_fu_1645_p1;
                trunc_ln700_93_reg_2955 <= trunc_ln700_93_fu_1651_p1;
                trunc_ln700_94_reg_2965 <= trunc_ln700_94_fu_1657_p1;
                trunc_ln700_reg_2900 <= trunc_ln700_fu_1610_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln392_reg_2601 = ap_const_lv1_0))) then
                o_out_reg_2746 <= o_out_fu_850_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln392_reg_2601_pp0_iter4_reg = ap_const_lv1_0))) then
                outPartialArr0_0_V_4_fu_216 <= outPartialArr0_0_V_fu_1896_p2;
                outPartialArr0_1_V_4_fu_220 <= outPartialArr0_1_V_fu_2017_p2;
                outPartialArr1_V_0_3_fu_224 <= add_ln398_fu_1882_p2;
                outPartialArr1_V_1_3_fu_228 <= add_ln398_7_fu_2003_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln392_reg_2601_pp0_iter1_reg = ap_const_lv1_0))) then
                p_Result_1_i_i_reg_2820 <= vec_V_V_dout(7 downto 4);
                p_Result_2_i_i_reg_2830 <= vec_V_V_dout(11 downto 8);
                p_Result_3_i_i_reg_2840 <= vec_V_V_dout(15 downto 12);
                p_Result_78_1_i_i_reg_2825 <= vec_V_V_dout(23 downto 20);
                p_Result_78_2_i_i_reg_2835 <= vec_V_V_dout(27 downto 24);
                p_Result_78_3_i_i_reg_2845 <= vec_V_V_dout(31 downto 28);
                p_Result_78_i_i_reg_2815 <= vec_V_V_dout(19 downto 16);
                select_ln393_93_reg_2780 <= select_ln393_93_fu_912_p3;
                select_ln393_94_reg_2785 <= select_ln393_94_fu_919_p3;
                select_ln393_95_reg_2790 <= select_ln393_95_fu_932_p3;
                select_ln393_96_reg_2795 <= select_ln393_96_fu_939_p3;
                select_ln393_97_reg_2800 <= select_ln393_97_fu_946_p3;
                select_ln393_98_reg_2805 <= select_ln393_98_fu_959_p3;
                trunc_ln647_reg_2810 <= trunc_ln647_fu_966_p1;
                wpacks_0_0_V_reg_2850 <= wpacks_0_0_V_fu_1086_p2;
                wpacks_0_1_V_reg_2855 <= wpacks_0_1_V_fu_1156_p2;
                wpacks_0_2_V_reg_2860 <= wpacks_0_2_V_fu_1226_p2;
                wpacks_0_3_V_reg_2865 <= wpacks_0_3_V_fu_1296_p2;
                wpacks_1_0_V_reg_2870 <= wpacks_1_0_V_fu_1348_p2;
                wpacks_1_1_V_reg_2875 <= wpacks_1_1_V_fu_1418_p2;
                wpacks_1_2_V_reg_2880 <= wpacks_1_2_V_fu_1488_p2;
                wpacks_1_3_V_reg_2885 <= wpacks_1_3_V_fu_1558_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (reps_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                reps_read_reg_2564 <= reps_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (o_out_reg_2746_pp0_iter6_reg = ap_const_lv1_1))) then
                res_V_11_reg_3111 <= res_V_11_fu_2295_p3;
                res_V_12_reg_3116 <= res_V_12_fu_2357_p3;
                res_V_13_reg_3121 <= res_V_13_fu_2419_p3;
                res_V_reg_3106 <= res_V_fu_2233_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (o_out_reg_2746_pp0_iter5_reg = ap_const_lv1_1))) then
                ret_V_55_reg_3088 <= ret_V_55_fu_2498_p2;
                ret_V_58_reg_3094 <= ret_V_58_fu_2504_p2;
                ret_V_61_reg_3100 <= ret_V_61_fu_2510_p2;
                ret_V_reg_3082 <= ret_V_fu_2492_p2;
            end if;
        end if;
    end process;
    bound46_reg_2570(9 downto 0) <= "0000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, reps_empty_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter7)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (reps_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln1353_35_fu_738_p2 <= std_logic_vector(unsigned(ap_const_lv20_4000) + unsigned(conv_5_bias_new_V_1_q0));
    add_ln1353_36_fu_926_p2 <= std_logic_vector(unsigned(ap_const_lv21_4000) + unsigned(conv_5_bias_new_V_0_q1));
    add_ln1353_37_fu_953_p2 <= std_logic_vector(unsigned(ap_const_lv20_4000) + unsigned(conv_5_bias_new_V_1_q1));
    add_ln1353_fu_732_p2 <= std_logic_vector(unsigned(ap_const_lv21_4000) + unsigned(conv_5_bias_new_V_0_q0));
    add_ln392_4_fu_558_p2 <= std_logic_vector(unsigned(ap_const_lv47_1) + unsigned(indvar_flatten145_reg_429));
    add_ln392_fu_505_p2 <= std_logic_vector(unsigned(shl_ln392_4_fu_500_p2) + unsigned(shl_ln392_fu_495_p2));
    add_ln393_4_fu_690_p2 <= std_logic_vector(unsigned(indvar_flatten33_reg_440) + unsigned(ap_const_lv16_1));
    add_ln394_4_fu_676_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_462) + unsigned(ap_const_lv10_1));
    add_ln398_7_fu_2003_p2 <= std_logic_vector(unsigned(select_ln398_40_fu_1995_p3) + unsigned(sext_ln68_166_fu_1991_p1));
    add_ln398_fu_1882_p2 <= std_logic_vector(unsigned(select_ln398_fu_1874_p3) + unsigned(sext_ln68_162_fu_1870_p1));
    add_ln404_fu_856_p2 <= std_logic_vector(unsigned(select_ln393_92_fu_797_p3) + unsigned(zext_ln395_fu_842_p1));
    add_ln68_65_fu_1146_p2 <= std_logic_vector(signed(sext_ln68_140_fu_1138_p1) + signed(sext_ln68_141_fu_1142_p1));
    add_ln68_67_fu_1216_p2 <= std_logic_vector(signed(sext_ln68_143_fu_1208_p1) + signed(sext_ln68_144_fu_1212_p1));
    add_ln68_69_fu_1286_p2 <= std_logic_vector(signed(sext_ln68_146_fu_1278_p1) + signed(sext_ln68_147_fu_1282_p1));
    add_ln68_71_fu_1338_p2 <= std_logic_vector(signed(sext_ln68_149_fu_1330_p1) + signed(sext_ln68_150_fu_1334_p1));
    add_ln68_73_fu_1408_p2 <= std_logic_vector(signed(sext_ln68_152_fu_1400_p1) + signed(sext_ln68_153_fu_1404_p1));
    add_ln68_75_fu_1478_p2 <= std_logic_vector(signed(sext_ln68_155_fu_1470_p1) + signed(sext_ln68_156_fu_1474_p1));
    add_ln68_77_fu_1548_p2 <= std_logic_vector(signed(sext_ln68_158_fu_1540_p1) + signed(sext_ln68_159_fu_1544_p1));
    add_ln68_fu_1076_p2 <= std_logic_vector(signed(sext_ln68_fu_1068_p1) + signed(sext_ln68_138_fu_1072_p1));
    add_ln700_108_fu_1791_p2 <= std_logic_vector(signed(sext_ln700_67_fu_1784_p1) + signed(sext_ln700_64_fu_1781_p1));
    add_ln700_111_fu_2073_p2 <= std_logic_vector(unsigned(firPartialRes1_0_V_s_reg_3014) + unsigned(sext_ln68_164_fu_2064_p1));
    add_ln700_112_fu_1712_p2 <= std_logic_vector(signed(sext_ln700_68_fu_1709_p1) + signed(sext_ln215_59_fu_1706_p1));
    add_ln700_114_fu_1912_p2 <= std_logic_vector(signed(sext_ln700_72_fu_1905_p1) + signed(sext_ln700_69_fu_1902_p1));
    add_ln700_117_fu_2116_p2 <= std_logic_vector(unsigned(firPartialRes1_1_V_s_reg_3019) + unsigned(sext_ln68_168_fu_2107_p1));
    add_ln700_126_fu_1675_p2 <= std_logic_vector(unsigned(trunc_ln700_reg_2900) + unsigned(trunc_ln700_88_reg_2905));
    add_ln700_127_fu_1682_p2 <= std_logic_vector(signed(sext_ln700_65_fu_1672_p1) + signed(sext_ln700_66_fu_1679_p1));
    add_ln700_128_fu_1787_p2 <= std_logic_vector(signed(add_ln700_reg_2970) + signed(add_ln700_127_reg_2976));
    add_ln700_129_fu_1688_p2 <= std_logic_vector(unsigned(trunc_ln700_89_reg_2915) + unsigned(trunc_ln700_90_reg_2925));
    add_ln700_130_fu_1692_p2 <= std_logic_vector(unsigned(add_ln700_129_fu_1688_p2) + unsigned(add_ln700_126_fu_1675_p2));
    add_ln700_132_fu_1721_p2 <= std_logic_vector(unsigned(trunc_ln700_91_reg_2940) + unsigned(trunc_ln700_92_reg_2945));
    add_ln700_133_fu_1728_p2 <= std_logic_vector(signed(sext_ln700_70_fu_1718_p1) + signed(sext_ln700_71_fu_1725_p1));
    add_ln700_134_fu_1908_p2 <= std_logic_vector(signed(add_ln700_112_reg_2987) + signed(add_ln700_133_reg_2993));
    add_ln700_135_fu_1734_p2 <= std_logic_vector(unsigned(trunc_ln700_93_reg_2955) + unsigned(trunc_ln700_94_reg_2965));
    add_ln700_136_fu_1738_p2 <= std_logic_vector(unsigned(add_ln700_135_fu_1734_p2) + unsigned(add_ln700_132_fu_1721_p2));
    add_ln700_fu_1666_p2 <= std_logic_vector(signed(sext_ln700_fu_1663_p1) + signed(sext_ln215_54_fu_1660_p1));
    add_ln78_17_fu_1842_p2 <= std_logic_vector(unsigned(p_Result_i_i_i_i4_s_fu_1820_p4) + unsigned(zext_ln78_17_fu_1838_p1));
    add_ln78_18_fu_2055_p2 <= std_logic_vector(signed(sext_ln647_fu_2049_p1) + signed(zext_ln78_18_fu_2052_p1));
    add_ln78_19_fu_1935_p2 <= std_logic_vector(unsigned(p_Result_i_i_i_i2_2_fu_1922_p4) + unsigned(zext_ln78_19_fu_1932_p1));
    add_ln78_20_fu_1963_p2 <= std_logic_vector(unsigned(p_Result_i_i_i_i4_2_fu_1941_p4) + unsigned(zext_ln78_20_fu_1959_p1));
    add_ln78_21_fu_2098_p2 <= std_logic_vector(signed(sext_ln647_11_fu_2092_p1) + signed(zext_ln78_21_fu_2095_p1));
    add_ln78_fu_1814_p2 <= std_logic_vector(unsigned(p_Result_i_i_i_i2_s_fu_1801_p4) + unsigned(zext_ln78_fu_1811_p1));
    and_ln393_13_fu_590_p2 <= (xor_ln393_fu_578_p2 and icmp_ln395_fu_584_p2);
    and_ln393_14_fu_602_p2 <= (xor_ln393_fu_578_p2 and icmp_ln394_fu_596_p2);
    and_ln393_15_fu_811_p2 <= (or_ln393_4_reg_2653 and and_ln393_fu_757_p2);
    and_ln393_16_fu_636_p2 <= (or_ln393_4_fu_630_p2 and and_ln393_13_fu_590_p2);
    and_ln393_fu_757_p2 <= (xor_ln393_reg_2621 and icmp_ln399_fu_751_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(3);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(vec_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter2, icmp_ln392_reg_2601_pp0_iter1_reg, ap_enable_reg_pp0_iter8, o_out_reg_2746_pp0_iter7_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (o_out_reg_2746_pp0_iter7_reg = ap_const_lv1_1)) or ((vec_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln392_reg_2601_pp0_iter1_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(vec_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter2, icmp_ln392_reg_2601_pp0_iter1_reg, ap_enable_reg_pp0_iter8, o_out_reg_2746_pp0_iter7_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (o_out_reg_2746_pp0_iter7_reg = ap_const_lv1_1)) or ((vec_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln392_reg_2601_pp0_iter1_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(vec_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter2, icmp_ln392_reg_2601_pp0_iter1_reg, ap_enable_reg_pp0_iter8, o_out_reg_2746_pp0_iter7_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (o_out_reg_2746_pp0_iter7_reg = ap_const_lv1_1)) or ((vec_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln392_reg_2601_pp0_iter1_reg = ap_const_lv1_0)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, reps_empty_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (reps_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp0_stage0_iter8_assign_proc : process(out_V_V_full_n, o_out_reg_2746_pp0_iter7_reg)
    begin
                ap_block_state11_pp0_stage0_iter8 <= ((out_V_V_full_n = ap_const_logic_0) and (o_out_reg_2746_pp0_iter7_reg = ap_const_lv1_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter2_assign_proc : process(vec_V_V_empty_n, icmp_ln392_reg_2601_pp0_iter1_reg)
    begin
                ap_block_state5_pp0_stage0_iter2 <= ((vec_V_V_empty_n = ap_const_logic_0) and (icmp_ln392_reg_2601_pp0_iter1_reg = ap_const_lv1_0));
    end process;

        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter1_state4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_firPartialRes0_V_0_3_4_assign_proc : process(ap_block_pp0_stage0, icmp_ln392_reg_2601_pp0_iter5_reg, ap_enable_reg_pp0_iter6, firPartialRes0_V_0_3_fu_200, select_ln398_38_fu_2078_p3)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln392_reg_2601_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_firPartialRes0_V_0_3_4 <= select_ln398_38_fu_2078_p3;
        else 
            ap_sig_allocacmp_firPartialRes0_V_0_3_4 <= firPartialRes0_V_0_3_fu_200;
        end if; 
    end process;


    ap_sig_allocacmp_firPartialRes0_V_1_3_4_assign_proc : process(ap_block_pp0_stage0, icmp_ln392_reg_2601_pp0_iter5_reg, ap_enable_reg_pp0_iter6, firPartialRes0_V_1_3_fu_204, select_ln398_42_fu_2121_p3)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln392_reg_2601_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_firPartialRes0_V_1_3_4 <= select_ln398_42_fu_2121_p3;
        else 
            ap_sig_allocacmp_firPartialRes0_V_1_3_4 <= firPartialRes0_V_1_3_fu_204;
        end if; 
    end process;


    ap_sig_allocacmp_firPartialRes1_0_V_s_assign_proc : process(ap_block_pp0_stage0, icmp_ln392_reg_2601_pp0_iter5_reg, ap_enable_reg_pp0_iter6, firPartialRes1_0_V_4_fu_208, firPartialRes1_0_V_fu_2085_p3)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln392_reg_2601_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_firPartialRes1_0_V_s <= firPartialRes1_0_V_fu_2085_p3;
        else 
            ap_sig_allocacmp_firPartialRes1_0_V_s <= firPartialRes1_0_V_4_fu_208;
        end if; 
    end process;


    ap_sig_allocacmp_firPartialRes1_1_V_s_assign_proc : process(ap_block_pp0_stage0, icmp_ln392_reg_2601_pp0_iter5_reg, ap_enable_reg_pp0_iter6, firPartialRes1_1_V_4_fu_212, firPartialRes1_1_V_fu_2128_p3)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln392_reg_2601_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_firPartialRes1_1_V_s <= firPartialRes1_1_V_fu_2128_p3;
        else 
            ap_sig_allocacmp_firPartialRes1_1_V_s <= firPartialRes1_1_V_4_fu_212;
        end if; 
    end process;

    bound46_fu_535_p2 <= std_logic_vector(unsigned(p_shl232_fu_531_p1) + unsigned(p_shl_fu_519_p1));
    conv_5_bias_new_V_0_address0 <= zext_ln458_fu_545_p1(5 - 1 downto 0);
    conv_5_bias_new_V_0_address1 <= zext_ln458_4_fu_804_p1(5 - 1 downto 0);

    conv_5_bias_new_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_5_bias_new_V_0_ce0 <= ap_const_logic_1;
        else 
            conv_5_bias_new_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_5_bias_new_V_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_5_bias_new_V_0_ce1 <= ap_const_logic_1;
        else 
            conv_5_bias_new_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_5_bias_new_V_1_address0 <= zext_ln458_fu_545_p1(5 - 1 downto 0);
    conv_5_bias_new_V_1_address1 <= zext_ln458_4_fu_804_p1(5 - 1 downto 0);

    conv_5_bias_new_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_5_bias_new_V_1_ce0 <= ap_const_logic_1;
        else 
            conv_5_bias_new_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_5_bias_new_V_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_5_bias_new_V_1_ce1 <= ap_const_logic_1;
        else 
            conv_5_bias_new_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_5_inc_new_V_0_address0 <= zext_ln458_fu_545_p1(5 - 1 downto 0);
    conv_5_inc_new_V_0_address1 <= zext_ln458_4_fu_804_p1(5 - 1 downto 0);

    conv_5_inc_new_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_5_inc_new_V_0_ce0 <= ap_const_logic_1;
        else 
            conv_5_inc_new_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_5_inc_new_V_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_5_inc_new_V_0_ce1 <= ap_const_logic_1;
        else 
            conv_5_inc_new_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_5_inc_new_V_1_address0 <= zext_ln458_fu_545_p1(5 - 1 downto 0);
    conv_5_inc_new_V_1_address1 <= zext_ln458_4_fu_804_p1(5 - 1 downto 0);

    conv_5_inc_new_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_5_inc_new_V_1_ce0 <= ap_const_logic_1;
        else 
            conv_5_inc_new_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_5_inc_new_V_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_5_inc_new_V_1_ce1 <= ap_const_logic_1;
        else 
            conv_5_inc_new_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_5_w_new_V_0_0_address0 <= zext_ln404_10_fu_866_p1(11 - 1 downto 0);

    conv_5_w_new_V_0_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_5_w_new_V_0_0_ce0 <= ap_const_logic_1;
        else 
            conv_5_w_new_V_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_5_w_new_V_0_1_address0 <= zext_ln404_10_fu_866_p1(11 - 1 downto 0);

    conv_5_w_new_V_0_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_5_w_new_V_0_1_ce0 <= ap_const_logic_1;
        else 
            conv_5_w_new_V_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_5_w_new_V_0_2_address0 <= zext_ln404_10_fu_866_p1(11 - 1 downto 0);

    conv_5_w_new_V_0_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_5_w_new_V_0_2_ce0 <= ap_const_logic_1;
        else 
            conv_5_w_new_V_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_5_w_new_V_1_0_address0 <= zext_ln404_10_fu_866_p1(11 - 1 downto 0);

    conv_5_w_new_V_1_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_5_w_new_V_1_0_ce0 <= ap_const_logic_1;
        else 
            conv_5_w_new_V_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_5_w_new_V_1_1_address0 <= zext_ln404_10_fu_866_p1(11 - 1 downto 0);

    conv_5_w_new_V_1_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_5_w_new_V_1_1_ce0 <= ap_const_logic_1;
        else 
            conv_5_w_new_V_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_5_w_new_V_1_2_address0 <= zext_ln404_10_fu_866_p1(11 - 1 downto 0);

    conv_5_w_new_V_1_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_5_w_new_V_1_2_ce0 <= ap_const_logic_1;
        else 
            conv_5_w_new_V_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    firPartialRes0_0_V_4_fu_2068_p2 <= std_logic_vector(unsigned(firPartialRes0_V_0_3_4_reg_3004) + unsigned(firPartialRes0_0_V_fu_2061_p1));
        firPartialRes0_0_V_fu_2061_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln78_17_reg_3032),18));

    firPartialRes0_1_V_4_fu_2111_p2 <= std_logic_vector(unsigned(firPartialRes0_V_1_3_4_reg_3009) + unsigned(firPartialRes0_1_V_fu_2104_p1));
        firPartialRes0_1_V_fu_2104_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln78_20_reg_3057),18));

    firPartialRes1_0_V_fu_2085_p3 <= 
        sext_ln68_164_fu_2064_p1 when (o_clear_reg_3024(0) = '1') else 
        add_ln700_111_fu_2073_p2;
    firPartialRes1_1_V_fu_2128_p3 <= 
        sext_ln68_168_fu_2107_p1 when (o_clear_reg_3024(0) = '1') else 
        add_ln700_117_fu_2116_p2;
    icmp_ln392_fu_553_p2 <= "1" when (indvar_flatten145_reg_429 = bound46_reg_2570) else "0";
    icmp_ln393_fu_564_p2 <= "1" when (indvar_flatten33_reg_440 = ap_const_lv16_4200) else "0";
    icmp_ln394_fu_596_p2 <= "1" when (indvar_flatten_reg_462 = ap_const_lv10_210) else "0";
    icmp_ln395_fu_584_p2 <= "1" when (infoldIdx_0_i_reg_473 = ap_const_lv6_30) else "0";
    icmp_ln399_5_fu_845_p2 <= "1" when (select_ln399_reg_2669 = ap_const_lv6_2F) else "0";
    icmp_ln399_7_fu_822_p2 <= "0" when (w_fu_816_p2 = ap_const_lv5_0) else "1";
    icmp_ln399_fu_751_p2 <= "0" when (w_0_i_reg_484 = ap_const_lv5_0) else "1";
    icmp_ln895_45_fu_2209_p2 <= "0" when (tmp_60_fu_2199_p4 = ap_const_lv9_0) else "1";
    icmp_ln895_46_fu_2250_p2 <= "1" when (signed(ret_V_65_fu_2244_p2) > signed(ap_const_lv29_0)) else "0";
    icmp_ln895_47_fu_2271_p2 <= "0" when (tmp_61_fu_2261_p4 = ap_const_lv9_0) else "1";
    icmp_ln895_48_fu_2312_p2 <= "1" when (signed(ret_V_66_fu_2306_p2) > signed(ap_const_lv29_0)) else "0";
    icmp_ln895_49_fu_2333_p2 <= "0" when (tmp_62_fu_2323_p4 = ap_const_lv9_0) else "1";
    icmp_ln895_50_fu_2374_p2 <= "1" when (signed(ret_V_67_fu_2368_p2) > signed(ap_const_lv29_0)) else "0";
    icmp_ln895_51_fu_2395_p2 <= "0" when (tmp_63_fu_2385_p4 = ap_const_lv9_0) else "1";
    icmp_ln895_fu_2188_p2 <= "1" when (signed(ret_V_64_fu_2182_p2) > signed(ap_const_lv29_0)) else "0";
    infoldIdx_fu_670_p2 <= std_logic_vector(unsigned(select_ln399_fu_662_p3) + unsigned(ap_const_lv6_1));
    ipack_0_V_fu_1564_p4 <= ((p_Result_78_i_i_reg_2815 & ap_const_lv7_0) & trunc_ln647_reg_2810);
    ipack_1_V_fu_1572_p4 <= ((p_Result_78_1_i_i_reg_2825 & ap_const_lv7_0) & p_Result_1_i_i_reg_2820);
    ipack_2_V_fu_1580_p4 <= ((p_Result_78_2_i_i_reg_2835 & ap_const_lv7_0) & p_Result_2_i_i_reg_2830);
    ipack_3_V_fu_1588_p4 <= ((p_Result_78_3_i_i_reg_2845 & ap_const_lv7_0) & p_Result_3_i_i_reg_2840);
    mul_ln1352_38_fu_2443_p1 <= zext_ln215_30_fu_1606_p1(15 - 1 downto 0);
    mul_ln1352_39_fu_2450_p1 <= zext_ln215_31_fu_1619_p1(15 - 1 downto 0);
    mul_ln1352_40_fu_2457_p1 <= zext_ln215_32_fu_1629_p1(15 - 1 downto 0);
    mul_ln1352_41_fu_2464_p1 <= zext_ln215_fu_1599_p1(15 - 1 downto 0);
    mul_ln1352_42_fu_2471_p1 <= zext_ln215_30_fu_1606_p1(15 - 1 downto 0);
    mul_ln1352_43_fu_2478_p1 <= zext_ln215_31_fu_1619_p1(15 - 1 downto 0);
    mul_ln1352_44_fu_2485_p1 <= zext_ln215_32_fu_1629_p1(15 - 1 downto 0);
    mul_ln1352_fu_2436_p1 <= zext_ln215_fu_1599_p1(15 - 1 downto 0);
    o_clear_fu_1776_p2 <= "1" when (select_ln399_reg_2669_pp0_iter4_reg = ap_const_lv6_0) else "0";
    o_out_fu_850_p2 <= (select_ln399_4_fu_828_p3 and icmp_ln399_5_fu_845_p2);
    or_ln393_4_fu_630_p2 <= (xor_ln393_4_fu_624_p2 or icmp_ln393_fu_564_p2);
    or_ln393_fu_614_p2 <= (icmp_ln393_fu_564_p2 or and_ln393_14_fu_602_p2);
    or_ln399_4_fu_656_p2 <= (or_ln399_fu_650_p2 or icmp_ln393_fu_564_p2);
    or_ln399_fu_650_p2 <= (and_ln393_16_fu_636_p2 or and_ln393_14_fu_602_p2);
    outPartialArr0_0_V_fu_1896_p2 <= std_logic_vector(unsigned(select_ln398_37_fu_1888_p3) + unsigned(sext_ln68_161_fu_1866_p1));
    outPartialArr0_1_V_fu_2017_p2 <= std_logic_vector(unsigned(select_ln398_41_fu_2009_p3) + unsigned(sext_ln68_165_fu_1987_p1));

    out_V_V_blk_n_assign_proc : process(out_V_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter8, o_out_reg_2746_pp0_iter7_reg)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (o_out_reg_2746_pp0_iter7_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            out_V_V_blk_n <= out_V_V_full_n;
        else 
            out_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_V_V_din <= (((res_V_13_reg_3121 & res_V_11_reg_3111) & res_V_12_reg_3116) & res_V_reg_3106);

    out_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter8, o_out_reg_2746_pp0_iter7_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (o_out_reg_2746_pp0_iter7_reg = ap_const_lv1_1))) then 
            out_V_V_write <= ap_const_logic_1;
        else 
            out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_1_i25_i_fu_1354_p4 <= conv_5_w_new_V_1_2_q0(7 downto 4);
    p_Result_1_i8_i_fu_1092_p4 <= conv_5_w_new_V_0_2_q0(7 downto 4);
    p_Result_2_i35_i_fu_1424_p4 <= conv_5_w_new_V_1_2_q0(11 downto 8);
    p_Result_2_i9_i_fu_1162_p4 <= conv_5_w_new_V_0_2_q0(11 downto 8);
    p_Result_3_i10_i_fu_1232_p4 <= conv_5_w_new_V_0_2_q0(15 downto 12);
    p_Result_3_i45_i_fu_1494_p4 <= conv_5_w_new_V_1_2_q0(15 downto 12);
    p_Result_i_i_i_i2_2_fu_1922_p4 <= add_ln700_134_fu_1908_p2(21 downto 11);
    p_Result_i_i_i_i2_s_fu_1801_p4 <= add_ln700_128_fu_1787_p2(21 downto 11);
    p_Result_i_i_i_i4_2_fu_1941_p4 <= add_ln700_134_fu_1908_p2(32 downto 22);
    p_Result_i_i_i_i4_s_fu_1820_p4 <= add_ln700_128_fu_1787_p2(32 downto 22);
    p_shl232_fu_531_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_77_fu_523_p3),47));
    p_shl_fu_519_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_76_fu_511_p3),47));
    peIdx_fu_608_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(select_ln393_fu_570_p3));

    reps_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, reps_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            reps_blk_n <= reps_empty_n;
        else 
            reps_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    reps_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, reps_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (reps_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            reps_read <= ap_const_logic_1;
        else 
            reps_read <= ap_const_logic_0;
        end if; 
    end process;

    res_V_11_fu_2295_p3 <= 
        select_ln192_11_fu_2287_p3 when (icmp_ln895_46_fu_2250_p2(0) = '1') else 
        ap_const_lv4_0;
    res_V_12_fu_2357_p3 <= 
        select_ln192_12_fu_2349_p3 when (icmp_ln895_48_fu_2312_p2(0) = '1') else 
        ap_const_lv4_0;
    res_V_13_fu_2419_p3 <= 
        select_ln192_13_fu_2411_p3 when (icmp_ln895_50_fu_2374_p2(0) = '1') else 
        ap_const_lv4_0;
    res_V_fu_2233_p3 <= 
        select_ln192_fu_2225_p3 when (icmp_ln895_fu_2188_p2(0) = '1') else 
        ap_const_lv4_0;
    ret_V_54_fu_2194_p2 <= std_logic_vector(signed(ret_V_reg_3082) + signed(sext_ln393_13_fu_2170_p1));
    ret_V_55_fu_2498_p0 <= zext_ln393_fu_2043_p1(10 - 1 downto 0);
    ret_V_57_fu_2256_p2 <= std_logic_vector(signed(ret_V_55_reg_3088) + signed(sext_ln393_13_fu_2170_p1));
    ret_V_58_fu_2504_p0 <= zext_ln393_12_fu_2046_p1(10 - 1 downto 0);
    ret_V_60_fu_2318_p2 <= std_logic_vector(signed(ret_V_58_reg_3094) + signed(sext_ln393_15_fu_2176_p1));
    ret_V_61_fu_2510_p0 <= zext_ln393_12_fu_2046_p1(10 - 1 downto 0);
    ret_V_63_fu_2380_p2 <= std_logic_vector(signed(ret_V_61_reg_3100) + signed(sext_ln393_15_fu_2176_p1));
    ret_V_64_fu_2182_p2 <= std_logic_vector(signed(sext_ln393_fu_2167_p1) + signed(sext_ln1352_fu_2179_p1));
    ret_V_65_fu_2244_p2 <= std_logic_vector(signed(sext_ln393_fu_2167_p1) + signed(sext_ln1352_11_fu_2241_p1));
    ret_V_66_fu_2306_p2 <= std_logic_vector(signed(sext_ln393_14_fu_2173_p1) + signed(sext_ln1352_12_fu_2303_p1));
    ret_V_67_fu_2368_p2 <= std_logic_vector(signed(sext_ln393_14_fu_2173_p1) + signed(sext_ln1352_13_fu_2365_p1));
    ret_V_fu_2492_p0 <= zext_ln393_fu_2043_p1(10 - 1 downto 0);
    select_ln192_11_fu_2287_p3 <= 
        ap_const_lv4_F when (icmp_ln895_47_fu_2271_p2(0) = '1') else 
        trunc_ln214_s_fu_2277_p4;
    select_ln192_12_fu_2349_p3 <= 
        ap_const_lv4_F when (icmp_ln895_49_fu_2333_p2(0) = '1') else 
        trunc_ln214_9_fu_2339_p4;
    select_ln192_13_fu_2411_p3 <= 
        ap_const_lv4_F when (icmp_ln895_51_fu_2395_p2(0) = '1') else 
        trunc_ln214_1_fu_2401_p4;
    select_ln192_fu_2225_p3 <= 
        ap_const_lv4_F when (icmp_ln895_45_fu_2209_p2(0) = '1') else 
        trunc_ln_fu_2215_p4;
    select_ln393_100_fu_696_p3 <= 
        ap_const_lv16_1 when (icmp_ln393_fu_564_p2(0) = '1') else 
        add_ln393_4_fu_690_p2;
    select_ln393_84_fu_744_p3 <= 
        ap_const_lv12_0 when (icmp_ln393_reg_2610(0) = '1') else 
        sub_ln404_fu_726_p2;
    select_ln393_85_fu_876_p3 <= 
        ap_const_lv10_259 when (icmp_ln393_reg_2610_pp0_iter1_reg(0) = '1') else 
        conv_5_inc_new_V_0_l_reg_2691;
    select_ln393_86_fu_882_p3 <= 
        ap_const_lv21_39029 when (icmp_ln393_reg_2610_pp0_iter1_reg(0) = '1') else 
        conv_5_bias_new_V_0_1_reg_2696;
    select_ln393_87_fu_888_p3 <= 
        ap_const_lv21_3D029 when (icmp_ln393_reg_2610_pp0_iter1_reg(0) = '1') else 
        add_ln1353_reg_2711;
    select_ln393_88_fu_894_p3 <= 
        ap_const_lv10_204 when (icmp_ln393_reg_2610_pp0_iter1_reg(0) = '1') else 
        conv_5_inc_new_V_1_l_reg_2701;
    select_ln393_89_fu_900_p3 <= 
        ap_const_lv20_F829 when (icmp_ln393_reg_2610_pp0_iter1_reg(0) = '1') else 
        conv_5_bias_new_V_1_1_reg_2706;
    select_ln393_90_fu_906_p3 <= 
        ap_const_lv20_13829 when (icmp_ln393_reg_2610_pp0_iter1_reg(0) = '1') else 
        add_ln1353_35_reg_2716;
    select_ln393_91_fu_762_p3 <= 
        ap_const_lv5_0 when (or_ln393_reg_2642(0) = '1') else 
        w_0_i_reg_484;
    select_ln393_92_fu_797_p3 <= 
        sub_ln404_4_fu_791_p2 when (and_ln393_14_reg_2626(0) = '1') else 
        select_ln393_84_fu_744_p3;
    select_ln393_93_fu_912_p3 <= 
        conv_5_inc_new_V_0_q1 when (and_ln393_14_reg_2626_pp0_iter1_reg(0) = '1') else 
        select_ln393_85_fu_876_p3;
    select_ln393_94_fu_919_p3 <= 
        conv_5_bias_new_V_0_q1 when (and_ln393_14_reg_2626_pp0_iter1_reg(0) = '1') else 
        select_ln393_86_fu_882_p3;
    select_ln393_95_fu_932_p3 <= 
        add_ln1353_36_fu_926_p2 when (and_ln393_14_reg_2626_pp0_iter1_reg(0) = '1') else 
        select_ln393_87_fu_888_p3;
    select_ln393_96_fu_939_p3 <= 
        conv_5_inc_new_V_1_q1 when (and_ln393_14_reg_2626_pp0_iter1_reg(0) = '1') else 
        select_ln393_88_fu_894_p3;
    select_ln393_97_fu_946_p3 <= 
        conv_5_bias_new_V_1_q1 when (and_ln393_14_reg_2626_pp0_iter1_reg(0) = '1') else 
        select_ln393_89_fu_900_p3;
    select_ln393_98_fu_959_p3 <= 
        add_ln1353_37_fu_953_p2 when (and_ln393_14_reg_2626_pp0_iter1_reg(0) = '1') else 
        select_ln393_90_fu_906_p3;
    select_ln393_99_fu_642_p3 <= 
        peIdx_fu_608_p2 when (and_ln393_14_fu_602_p2(0) = '1') else 
        select_ln393_fu_570_p3;
    select_ln393_fu_570_p3 <= 
        ap_const_lv6_0 when (icmp_ln393_fu_564_p2(0) = '1') else 
        peIdx_0_i_reg_451;
    select_ln394_4_fu_682_p3 <= 
        ap_const_lv10_1 when (or_ln393_fu_614_p2(0) = '1') else 
        add_ln394_4_fu_676_p2;
    select_ln394_fu_835_p3 <= 
        w_fu_816_p2 when (and_ln393_16_reg_2658(0) = '1') else 
        select_ln393_91_fu_762_p3;
    select_ln398_37_fu_1888_p3 <= 
        ap_sig_allocacmp_firPartialRes0_V_0_3_4 when (o_clear_fu_1776_p2(0) = '1') else 
        outPartialArr0_0_V_4_fu_216;
    select_ln398_38_fu_2078_p3 <= 
        firPartialRes0_0_V_fu_2061_p1 when (o_clear_reg_3024(0) = '1') else 
        firPartialRes0_0_V_4_fu_2068_p2;
    select_ln398_40_fu_1995_p3 <= 
        ap_sig_allocacmp_firPartialRes1_1_V_s when (o_clear_fu_1776_p2(0) = '1') else 
        outPartialArr1_V_1_3_fu_228;
    select_ln398_41_fu_2009_p3 <= 
        ap_sig_allocacmp_firPartialRes0_V_1_3_4 when (o_clear_fu_1776_p2(0) = '1') else 
        outPartialArr0_1_V_4_fu_220;
    select_ln398_42_fu_2121_p3 <= 
        firPartialRes0_1_V_fu_2104_p1 when (o_clear_reg_3024(0) = '1') else 
        firPartialRes0_1_V_4_fu_2111_p2;
    select_ln398_fu_1874_p3 <= 
        ap_sig_allocacmp_firPartialRes1_0_V_s when (o_clear_fu_1776_p2(0) = '1') else 
        outPartialArr1_V_0_3_fu_224;
    select_ln399_4_fu_828_p3 <= 
        icmp_ln399_7_fu_822_p2 when (and_ln393_16_reg_2658(0) = '1') else 
        and_ln393_15_fu_811_p2;
    select_ln399_fu_662_p3 <= 
        ap_const_lv6_0 when (or_ln399_4_fu_656_p2(0) = '1') else 
        infoldIdx_0_i_reg_473;
        sext_ln1352_11_fu_2241_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_55_reg_3088),29));

        sext_ln1352_12_fu_2303_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_58_reg_3094),29));

        sext_ln1352_13_fu_2365_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_61_reg_3100),29));

        sext_ln1352_fu_2179_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_reg_3082),29));

        sext_ln215_54_fu_1660_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_reg_2890),42));

        sext_ln215_59_fu_1706_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_41_reg_2930),42));

        sext_ln393_13_fu_2170_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln393_95_reg_2790_pp0_iter6_reg),28));

        sext_ln393_14_fu_2173_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln393_97_reg_2800_pp0_iter6_reg),29));

        sext_ln393_15_fu_2176_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln393_98_reg_2805_pp0_iter6_reg),28));

        sext_ln393_fu_2167_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln393_94_reg_2785_pp0_iter6_reg),29));

        sext_ln404_fu_862_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln404_fu_856_p2),32));

        sext_ln647_11_fu_2092_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_reg_3062),11));

        sext_ln647_fu_2049_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_reg_3037),11));

        sext_ln68_138_fu_1072_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln647_17_fu_1040_p1),16));

        sext_ln68_139_fu_1082_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_fu_1076_p2),26));

        sext_ln68_140_fu_1138_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_56_fu_1130_p3),16));

        sext_ln68_141_fu_1142_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_1_i8_i_fu_1092_p4),16));

        sext_ln68_142_fu_1152_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_65_fu_1146_p2),26));

        sext_ln68_143_fu_1208_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_58_fu_1200_p3),16));

        sext_ln68_144_fu_1212_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_i9_i_fu_1162_p4),16));

        sext_ln68_145_fu_1222_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_67_fu_1216_p2),26));

        sext_ln68_146_fu_1278_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_60_fu_1270_p3),16));

        sext_ln68_147_fu_1282_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_3_i10_i_fu_1232_p4),16));

        sext_ln68_148_fu_1292_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_69_fu_1286_p2),26));

        sext_ln68_149_fu_1330_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_62_fu_1322_p3),16));

        sext_ln68_150_fu_1334_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln647_18_fu_1302_p1),16));

        sext_ln68_151_fu_1344_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_71_fu_1338_p2),26));

        sext_ln68_152_fu_1400_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_64_fu_1392_p3),16));

        sext_ln68_153_fu_1404_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_1_i25_i_fu_1354_p4),16));

        sext_ln68_154_fu_1414_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_73_fu_1408_p2),26));

        sext_ln68_155_fu_1470_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_66_fu_1462_p3),16));

        sext_ln68_156_fu_1474_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_i35_i_fu_1424_p4),16));

        sext_ln68_157_fu_1484_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_75_fu_1478_p2),26));

        sext_ln68_158_fu_1540_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_68_fu_1532_p3),16));

        sext_ln68_159_fu_1544_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_3_i45_i_fu_1494_p4),16));

        sext_ln68_160_fu_1554_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_77_fu_1548_p2),26));

        sext_ln68_161_fu_1866_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln647_19_fu_1797_p1),18));

        sext_ln68_162_fu_1870_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln78_fu_1814_p2),18));

        sext_ln68_164_fu_2064_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln78_18_fu_2055_p2),18));

        sext_ln68_165_fu_1987_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln647_20_fu_1918_p1),18));

        sext_ln68_166_fu_1991_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln78_19_fu_1935_p2),18));

        sext_ln68_168_fu_2107_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln78_21_fu_2098_p2),18));

        sext_ln68_fu_1068_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_s_fu_1060_p3),16));

        sext_ln700_64_fu_1781_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln700_reg_2970),43));

        sext_ln700_65_fu_1672_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_39_reg_2910),42));

        sext_ln700_66_fu_1679_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_40_reg_2920),42));

        sext_ln700_67_fu_1784_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln700_127_reg_2976),43));

        sext_ln700_68_fu_1709_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_42_reg_2935),42));

        sext_ln700_69_fu_1902_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln700_112_reg_2987),43));

        sext_ln700_70_fu_1718_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_43_reg_2950),42));

        sext_ln700_71_fu_1725_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_44_reg_2960),42));

        sext_ln700_72_fu_1905_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln700_133_reg_2993),43));

        sext_ln700_fu_1663_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_38_reg_2895),42));

    shl_ln392_4_fu_500_p2 <= std_logic_vector(shift_left(unsigned(reps_read_reg_2564),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln392_fu_495_p2 <= std_logic_vector(shift_left(unsigned(reps_read_reg_2564),to_integer(unsigned('0' & ap_const_lv32_3(31-1 downto 0)))));
    shl_ln404_5_fu_715_p3 <= (trunc_ln404_reg_2575 & ap_const_lv4_0);
    shl_ln404_5_mid1_fu_780_p3 <= (trunc_ln404_4_reg_2647 & ap_const_lv4_0);
    shl_ln404_mid1_fu_769_p3 <= (trunc_ln404_4_reg_2647 & ap_const_lv6_0);
    shl_ln68_55_fu_1112_p3 <= (tmp_78_fu_1102_p4 & ap_const_lv22_0);
    shl_ln68_56_fu_1130_p3 <= (tmp_79_fu_1120_p4 & ap_const_lv11_0);
    shl_ln68_57_fu_1182_p3 <= (tmp_80_fu_1172_p4 & ap_const_lv22_0);
    shl_ln68_58_fu_1200_p3 <= (tmp_81_fu_1190_p4 & ap_const_lv11_0);
    shl_ln68_59_fu_1252_p3 <= (tmp_82_fu_1242_p4 & ap_const_lv22_0);
    shl_ln68_60_fu_1270_p3 <= (tmp_83_fu_1260_p4 & ap_const_lv11_0);
    shl_ln68_61_fu_1310_p3 <= (trunc_ln68_9_fu_1306_p1 & ap_const_lv22_0);
    shl_ln68_62_fu_1322_p3 <= (trunc_ln68_10_fu_1318_p1 & ap_const_lv11_0);
    shl_ln68_63_fu_1374_p3 <= (tmp_84_fu_1364_p4 & ap_const_lv22_0);
    shl_ln68_64_fu_1392_p3 <= (tmp_85_fu_1382_p4 & ap_const_lv11_0);
    shl_ln68_65_fu_1444_p3 <= (tmp_86_fu_1434_p4 & ap_const_lv22_0);
    shl_ln68_66_fu_1462_p3 <= (tmp_87_fu_1452_p4 & ap_const_lv11_0);
    shl_ln68_67_fu_1514_p3 <= (tmp_88_fu_1504_p4 & ap_const_lv22_0);
    shl_ln68_68_fu_1532_p3 <= (tmp_89_fu_1522_p4 & ap_const_lv11_0);
    shl_ln68_s_fu_1060_p3 <= (trunc_ln68_8_fu_1056_p1 & ap_const_lv11_0);
    shl_ln8_fu_704_p3 <= (trunc_ln404_reg_2575 & ap_const_lv6_0);
    shl_ln9_fu_1048_p3 <= (trunc_ln68_fu_1044_p1 & ap_const_lv22_0);
    sub_ln404_4_fu_791_p2 <= std_logic_vector(unsigned(zext_ln404_11_fu_776_p1) - unsigned(zext_ln404_12_fu_787_p1));
    sub_ln404_fu_726_p2 <= std_logic_vector(unsigned(zext_ln404_fu_711_p1) - unsigned(zext_ln404_9_fu_722_p1));
    tmp_55_fu_1830_p3 <= add_ln700_128_fu_1787_p2(21 downto 21);
    tmp_58_fu_1951_p3 <= add_ln700_134_fu_1908_p2(21 downto 21);
    tmp_60_fu_2199_p4 <= ret_V_54_fu_2194_p2(27 downto 19);
    tmp_61_fu_2261_p4 <= ret_V_57_fu_2256_p2(27 downto 19);
    tmp_62_fu_2323_p4 <= ret_V_60_fu_2318_p2(27 downto 19);
    tmp_63_fu_2385_p4 <= ret_V_63_fu_2380_p2(27 downto 19);
    tmp_76_fu_511_p3 <= (add_ln392_fu_505_p2 & ap_const_lv14_0);
    tmp_77_fu_523_p3 <= (add_ln392_fu_505_p2 & ap_const_lv9_0);
    tmp_78_fu_1102_p4 <= conv_5_w_new_V_0_0_q0(7 downto 4);
    tmp_79_fu_1120_p4 <= conv_5_w_new_V_0_1_q0(7 downto 4);
    tmp_80_fu_1172_p4 <= conv_5_w_new_V_0_0_q0(11 downto 8);
    tmp_81_fu_1190_p4 <= conv_5_w_new_V_0_1_q0(11 downto 8);
    tmp_82_fu_1242_p4 <= conv_5_w_new_V_0_0_q0(15 downto 12);
    tmp_83_fu_1260_p4 <= conv_5_w_new_V_0_1_q0(15 downto 12);
    tmp_84_fu_1364_p4 <= conv_5_w_new_V_1_0_q0(7 downto 4);
    tmp_85_fu_1382_p4 <= conv_5_w_new_V_1_1_q0(7 downto 4);
    tmp_86_fu_1434_p4 <= conv_5_w_new_V_1_0_q0(11 downto 8);
    tmp_87_fu_1452_p4 <= conv_5_w_new_V_1_1_q0(11 downto 8);
    tmp_88_fu_1504_p4 <= conv_5_w_new_V_1_0_q0(15 downto 12);
    tmp_89_fu_1522_p4 <= conv_5_w_new_V_1_1_q0(15 downto 12);
    trunc_ln214_1_fu_2401_p4 <= ret_V_63_fu_2380_p2(18 downto 15);
    trunc_ln214_9_fu_2339_p4 <= ret_V_60_fu_2318_p2(18 downto 15);
    trunc_ln214_s_fu_2277_p4 <= ret_V_57_fu_2256_p2(18 downto 15);
    trunc_ln404_4_fu_620_p1 <= peIdx_fu_608_p2(5 - 1 downto 0);
    trunc_ln404_fu_541_p1 <= peIdx_0_i_reg_451(5 - 1 downto 0);
    trunc_ln647_17_fu_1040_p1 <= conv_5_w_new_V_0_2_q0(4 - 1 downto 0);
    trunc_ln647_18_fu_1302_p1 <= conv_5_w_new_V_1_2_q0(4 - 1 downto 0);
    trunc_ln647_19_fu_1797_p1 <= add_ln700_128_fu_1787_p2(11 - 1 downto 0);
    trunc_ln647_20_fu_1918_p1 <= add_ln700_134_fu_1908_p2(11 - 1 downto 0);
    trunc_ln647_fu_966_p1 <= vec_V_V_dout(4 - 1 downto 0);
    trunc_ln68_10_fu_1318_p1 <= conv_5_w_new_V_1_1_q0(4 - 1 downto 0);
    trunc_ln68_8_fu_1056_p1 <= conv_5_w_new_V_0_1_q0(4 - 1 downto 0);
    trunc_ln68_9_fu_1306_p1 <= conv_5_w_new_V_1_0_q0(4 - 1 downto 0);
    trunc_ln68_fu_1044_p1 <= conv_5_w_new_V_0_0_q0(4 - 1 downto 0);
    trunc_ln700_88_fu_1613_p1 <= mul_ln1352_38_fu_2443_p2(21 - 1 downto 0);
    trunc_ln700_89_fu_1623_p1 <= mul_ln1352_39_fu_2450_p2(21 - 1 downto 0);
    trunc_ln700_90_fu_1633_p1 <= mul_ln1352_40_fu_2457_p2(21 - 1 downto 0);
    trunc_ln700_91_fu_1642_p1 <= mul_ln1352_41_fu_2464_p2(21 - 1 downto 0);
    trunc_ln700_92_fu_1645_p1 <= mul_ln1352_42_fu_2471_p2(21 - 1 downto 0);
    trunc_ln700_93_fu_1651_p1 <= mul_ln1352_43_fu_2478_p2(21 - 1 downto 0);
    trunc_ln700_94_fu_1657_p1 <= mul_ln1352_44_fu_2485_p2(21 - 1 downto 0);
    trunc_ln700_fu_1610_p1 <= mul_ln1352_fu_2436_p2(21 - 1 downto 0);
    trunc_ln_fu_2215_p4 <= ret_V_54_fu_2194_p2(18 downto 15);

    vec_V_V_blk_n_assign_proc : process(vec_V_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, icmp_ln392_reg_2601_pp0_iter1_reg)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln392_reg_2601_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            vec_V_V_blk_n <= vec_V_V_empty_n;
        else 
            vec_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    vec_V_V_read_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln392_reg_2601_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln392_reg_2601_pp0_iter1_reg = ap_const_lv1_0))) then 
            vec_V_V_read <= ap_const_logic_1;
        else 
            vec_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    w_fu_816_p2 <= std_logic_vector(unsigned(ap_const_lv5_2) + unsigned(select_ln393_91_fu_762_p3));
    wpacks_0_0_V_fu_1086_p2 <= std_logic_vector(unsigned(shl_ln9_fu_1048_p3) + unsigned(sext_ln68_139_fu_1082_p1));
    wpacks_0_1_V_fu_1156_p2 <= std_logic_vector(unsigned(shl_ln68_55_fu_1112_p3) + unsigned(sext_ln68_142_fu_1152_p1));
    wpacks_0_2_V_fu_1226_p2 <= std_logic_vector(unsigned(shl_ln68_57_fu_1182_p3) + unsigned(sext_ln68_145_fu_1222_p1));
    wpacks_0_3_V_fu_1296_p2 <= std_logic_vector(unsigned(shl_ln68_59_fu_1252_p3) + unsigned(sext_ln68_148_fu_1292_p1));
    wpacks_1_0_V_fu_1348_p2 <= std_logic_vector(unsigned(shl_ln68_61_fu_1310_p3) + unsigned(sext_ln68_151_fu_1344_p1));
    wpacks_1_1_V_fu_1418_p2 <= std_logic_vector(unsigned(shl_ln68_63_fu_1374_p3) + unsigned(sext_ln68_154_fu_1414_p1));
    wpacks_1_2_V_fu_1488_p2 <= std_logic_vector(unsigned(shl_ln68_65_fu_1444_p3) + unsigned(sext_ln68_157_fu_1484_p1));
    wpacks_1_3_V_fu_1558_p2 <= std_logic_vector(unsigned(shl_ln68_67_fu_1514_p3) + unsigned(sext_ln68_160_fu_1554_p1));
    xor_ln393_4_fu_624_p2 <= (icmp_ln394_fu_596_p2 xor ap_const_lv1_1);
    xor_ln393_fu_578_p2 <= (icmp_ln393_fu_564_p2 xor ap_const_lv1_1);
    zext_ln215_30_fu_1606_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ipack_1_V_fu_1572_p4),41));
    zext_ln215_31_fu_1619_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ipack_2_V_fu_1580_p4),41));
    zext_ln215_32_fu_1629_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ipack_3_V_fu_1588_p4),41));
    zext_ln215_fu_1599_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ipack_0_V_fu_1564_p4),41));
    zext_ln393_12_fu_2046_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln393_96_reg_2795_pp0_iter5_reg),28));
    zext_ln393_fu_2043_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln393_93_reg_2780_pp0_iter5_reg),28));
    zext_ln395_fu_842_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln399_reg_2669),12));
    zext_ln404_10_fu_866_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln404_fu_862_p1),64));
    zext_ln404_11_fu_776_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln404_mid1_fu_769_p3),12));
    zext_ln404_12_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln404_5_mid1_fu_780_p3),12));
    zext_ln404_9_fu_722_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln404_5_fu_715_p3),12));
    zext_ln404_fu_711_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln8_fu_704_p3),12));
    zext_ln458_4_fu_804_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(peIdx_reg_2637),64));
    zext_ln458_fu_545_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(peIdx_0_i_reg_451),64));
    zext_ln78_17_fu_1838_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_55_fu_1830_p3),11));
    zext_ln78_18_fu_2052_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_56_reg_3042),11));
    zext_ln78_19_fu_1932_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_57_reg_2999),11));
    zext_ln78_20_fu_1959_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_58_fu_1951_p3),11));
    zext_ln78_21_fu_2095_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_59_reg_3067),11));
    zext_ln78_fu_1811_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_54_reg_2982),11));
end behav;
