-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity do_compute2 is
port (
    in_r_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    in_r_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    in_r_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    out_r_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_r_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    out_r_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    reps : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    in_r_TVALID : IN STD_LOGIC;
    in_r_TREADY : OUT STD_LOGIC;
    reps_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    out_r_TVALID : OUT STD_LOGIC;
    out_r_TREADY : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of do_compute2 is 
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal ExtractPixels_U0_ap_start : STD_LOGIC;
    signal ExtractPixels_U0_ap_done : STD_LOGIC;
    signal ExtractPixels_U0_ap_continue : STD_LOGIC;
    signal ExtractPixels_U0_ap_idle : STD_LOGIC;
    signal ExtractPixels_U0_ap_ready : STD_LOGIC;
    signal ExtractPixels_U0_start_out : STD_LOGIC;
    signal ExtractPixels_U0_start_write : STD_LOGIC;
    signal ExtractPixels_U0_in_r_TREADY : STD_LOGIC;
    signal ExtractPixels_U0_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal ExtractPixels_U0_out_V_V_write : STD_LOGIC;
    signal ExtractPixels_U0_reps_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal ExtractPixels_U0_reps_out_write : STD_LOGIC;
    signal StreamingDataWidthCo_U0_ap_start : STD_LOGIC;
    signal StreamingDataWidthCo_U0_ap_done : STD_LOGIC;
    signal StreamingDataWidthCo_U0_ap_continue : STD_LOGIC;
    signal StreamingDataWidthCo_U0_ap_idle : STD_LOGIC;
    signal StreamingDataWidthCo_U0_ap_ready : STD_LOGIC;
    signal StreamingDataWidthCo_U0_start_out : STD_LOGIC;
    signal StreamingDataWidthCo_U0_start_write : STD_LOGIC;
    signal StreamingDataWidthCo_U0_in_V_V_read : STD_LOGIC;
    signal StreamingDataWidthCo_U0_out_V_V_din : STD_LOGIC_VECTOR (191 downto 0);
    signal StreamingDataWidthCo_U0_out_V_V_write : STD_LOGIC;
    signal StreamingDataWidthCo_U0_numReps_read : STD_LOGIC;
    signal StreamingDataWidthCo_U0_numReps_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal StreamingDataWidthCo_U0_numReps_out_write : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_ap_start : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_ap_done : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_ap_continue : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_ap_idle : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_ap_ready : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_start_out : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_start_write : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_in_V_V_read : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_out_V_V_din : STD_LOGIC_VECTOR (23 downto 0);
    signal StreamingDataWidthCo_1_U0_out_V_V_write : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_numReps_read : STD_LOGIC;
    signal StreamingDataWidthCo_1_U0_numReps_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal StreamingDataWidthCo_1_U0_numReps_out_write : STD_LOGIC;
    signal resize_batch_U0_ap_start : STD_LOGIC;
    signal resize_batch_U0_ap_done : STD_LOGIC;
    signal resize_batch_U0_ap_continue : STD_LOGIC;
    signal resize_batch_U0_ap_idle : STD_LOGIC;
    signal resize_batch_U0_ap_ready : STD_LOGIC;
    signal resize_batch_U0_start_out : STD_LOGIC;
    signal resize_batch_U0_start_write : STD_LOGIC;
    signal resize_batch_U0_in_V_V_read : STD_LOGIC;
    signal resize_batch_U0_out_V_V_din : STD_LOGIC_VECTOR (23 downto 0);
    signal resize_batch_U0_out_V_V_write : STD_LOGIC;
    signal resize_batch_U0_reps_read : STD_LOGIC;
    signal resize_batch_U0_reps_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal resize_batch_U0_reps_out_write : STD_LOGIC;
    signal conv3x3_l0_bn_act_DS_U0_ap_start : STD_LOGIC;
    signal conv3x3_l0_bn_act_DS_U0_start_out : STD_LOGIC;
    signal conv3x3_l0_bn_act_DS_U0_start_write : STD_LOGIC;
    signal conv3x3_l0_bn_act_DS_U0_in_V_V_read : STD_LOGIC;
    signal conv3x3_l0_bn_act_DS_U0_out_V_V_din : STD_LOGIC_VECTOR (127 downto 0);
    signal conv3x3_l0_bn_act_DS_U0_out_V_V_write : STD_LOGIC;
    signal conv3x3_l0_bn_act_DS_U0_reps_read : STD_LOGIC;
    signal conv3x3_l0_bn_act_DS_U0_reps_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3x3_l0_bn_act_DS_U0_reps_out_write : STD_LOGIC;
    signal conv3x3_l0_bn_act_DS_U0_ap_done : STD_LOGIC;
    signal conv3x3_l0_bn_act_DS_U0_ap_ready : STD_LOGIC;
    signal conv3x3_l0_bn_act_DS_U0_ap_idle : STD_LOGIC;
    signal conv3x3_l0_bn_act_DS_U0_ap_continue : STD_LOGIC;
    signal max_pool2x2_3_U0_ap_start : STD_LOGIC;
    signal max_pool2x2_3_U0_ap_done : STD_LOGIC;
    signal max_pool2x2_3_U0_ap_continue : STD_LOGIC;
    signal max_pool2x2_3_U0_ap_idle : STD_LOGIC;
    signal max_pool2x2_3_U0_ap_ready : STD_LOGIC;
    signal max_pool2x2_3_U0_start_out : STD_LOGIC;
    signal max_pool2x2_3_U0_start_write : STD_LOGIC;
    signal max_pool2x2_3_U0_vec_V_V_read : STD_LOGIC;
    signal max_pool2x2_3_U0_out_V_V_din : STD_LOGIC_VECTOR (127 downto 0);
    signal max_pool2x2_3_U0_out_V_V_write : STD_LOGIC;
    signal max_pool2x2_3_U0_reps_read : STD_LOGIC;
    signal max_pool2x2_3_U0_reps_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal max_pool2x2_3_U0_reps_out_write : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_U0_ap_start : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_U0_start_out : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_U0_start_write : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_U0_in_V_V_read : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_U0_out_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3x3_bn_act_DSPop_U0_out_V_V_write : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_U0_reps_read : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_U0_reps_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3x3_bn_act_DSPop_U0_reps_out_write : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_U0_ap_done : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_U0_ap_ready : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_U0_ap_idle : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_U0_ap_continue : STD_LOGIC;
    signal max_pool2x2_U0_ap_start : STD_LOGIC;
    signal max_pool2x2_U0_ap_done : STD_LOGIC;
    signal max_pool2x2_U0_ap_continue : STD_LOGIC;
    signal max_pool2x2_U0_ap_idle : STD_LOGIC;
    signal max_pool2x2_U0_ap_ready : STD_LOGIC;
    signal max_pool2x2_U0_start_out : STD_LOGIC;
    signal max_pool2x2_U0_start_write : STD_LOGIC;
    signal max_pool2x2_U0_vec_V_V_read : STD_LOGIC;
    signal max_pool2x2_U0_out_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal max_pool2x2_U0_out_V_V_write : STD_LOGIC;
    signal max_pool2x2_U0_reps_read : STD_LOGIC;
    signal max_pool2x2_U0_reps_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal max_pool2x2_U0_reps_out_write : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_1_U0_ap_start : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_1_U0_start_out : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_1_U0_start_write : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_1_U0_in_V_V_read : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_1_U0_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal conv3x3_bn_act_DSPop_1_U0_out_V_V_write : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_1_U0_reps_read : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_1_U0_reps_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3x3_bn_act_DSPop_1_U0_reps_out_write : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_1_U0_ap_done : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_1_U0_ap_ready : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_1_U0_ap_idle : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_1_U0_ap_continue : STD_LOGIC;
    signal max_pool2x2_1_U0_ap_start : STD_LOGIC;
    signal max_pool2x2_1_U0_ap_done : STD_LOGIC;
    signal max_pool2x2_1_U0_ap_continue : STD_LOGIC;
    signal max_pool2x2_1_U0_ap_idle : STD_LOGIC;
    signal max_pool2x2_1_U0_ap_ready : STD_LOGIC;
    signal max_pool2x2_1_U0_start_out : STD_LOGIC;
    signal max_pool2x2_1_U0_start_write : STD_LOGIC;
    signal max_pool2x2_1_U0_vec_V_V_read : STD_LOGIC;
    signal max_pool2x2_1_U0_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal max_pool2x2_1_U0_out_V_V_write : STD_LOGIC;
    signal max_pool2x2_1_U0_reps_read : STD_LOGIC;
    signal max_pool2x2_1_U0_reps_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal max_pool2x2_1_U0_reps_out_write : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_2_U0_ap_start : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_2_U0_start_out : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_2_U0_start_write : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_2_U0_in_V_V_read : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_2_U0_out_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3x3_bn_act_DSPop_2_U0_out_V_V_write : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_2_U0_reps_read : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_2_U0_reps_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3x3_bn_act_DSPop_2_U0_reps_out_write : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_2_U0_ap_done : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_2_U0_ap_ready : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_2_U0_ap_idle : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_2_U0_ap_continue : STD_LOGIC;
    signal max_pool2x2_2_U0_ap_start : STD_LOGIC;
    signal max_pool2x2_2_U0_ap_done : STD_LOGIC;
    signal max_pool2x2_2_U0_ap_continue : STD_LOGIC;
    signal max_pool2x2_2_U0_ap_idle : STD_LOGIC;
    signal max_pool2x2_2_U0_ap_ready : STD_LOGIC;
    signal max_pool2x2_2_U0_start_out : STD_LOGIC;
    signal max_pool2x2_2_U0_start_write : STD_LOGIC;
    signal max_pool2x2_2_U0_vec_V_V_read : STD_LOGIC;
    signal max_pool2x2_2_U0_out_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal max_pool2x2_2_U0_out_V_V_write : STD_LOGIC;
    signal max_pool2x2_2_U0_reps_read : STD_LOGIC;
    signal max_pool2x2_2_U0_reps_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal max_pool2x2_2_U0_reps_out_write : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_4_U0_ap_start : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_4_U0_start_out : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_4_U0_start_write : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_4_U0_in_V_V_read : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_4_U0_out_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal conv3x3_bn_act_DSPop_4_U0_out_V_V_write : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_4_U0_reps_read : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_4_U0_reps_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3x3_bn_act_DSPop_4_U0_reps_out_write : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_4_U0_ap_done : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_4_U0_ap_ready : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_4_U0_ap_idle : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_4_U0_ap_continue : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_6_U0_ap_start : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_6_U0_start_out : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_6_U0_start_write : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_6_U0_in_V_V_read : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_6_U0_out_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal conv3x3_bn_act_DSPop_6_U0_out_V_V_write : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_6_U0_reps_read : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_6_U0_reps_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3x3_bn_act_DSPop_6_U0_reps_out_write : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_6_U0_ap_done : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_6_U0_ap_ready : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_6_U0_ap_idle : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_6_U0_ap_continue : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_5_U0_ap_start : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_5_U0_start_out : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_5_U0_start_write : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_5_U0_in_V_V_read : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_5_U0_out_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal conv3x3_bn_act_DSPop_5_U0_out_V_V_write : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_5_U0_reps_read : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_5_U0_reps_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3x3_bn_act_DSPop_5_U0_reps_out_write : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_5_U0_ap_done : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_5_U0_ap_ready : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_5_U0_ap_idle : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_5_U0_ap_continue : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_3_U0_ap_start : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_3_U0_start_out : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_3_U0_start_write : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_3_U0_in_V_V_read : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_3_U0_out_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal conv3x3_bn_act_DSPop_3_U0_out_V_V_write : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_3_U0_reps_read : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_3_U0_reps_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3x3_bn_act_DSPop_3_U0_reps_out_write : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_3_U0_ap_done : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_3_U0_ap_ready : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_3_U0_ap_idle : STD_LOGIC;
    signal conv3x3_bn_act_DSPop_3_U0_ap_continue : STD_LOGIC;
    signal conv1x1_DSPopt_U0_ap_start : STD_LOGIC;
    signal conv1x1_DSPopt_U0_start_out : STD_LOGIC;
    signal conv1x1_DSPopt_U0_start_write : STD_LOGIC;
    signal conv1x1_DSPopt_U0_in_V_V_read : STD_LOGIC;
    signal conv1x1_DSPopt_U0_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal conv1x1_DSPopt_U0_out_V_V_write : STD_LOGIC;
    signal conv1x1_DSPopt_U0_reps_read : STD_LOGIC;
    signal conv1x1_DSPopt_U0_reps_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1x1_DSPopt_U0_reps_out_write : STD_LOGIC;
    signal conv1x1_DSPopt_U0_ap_done : STD_LOGIC;
    signal conv1x1_DSPopt_U0_ap_ready : STD_LOGIC;
    signal conv1x1_DSPopt_U0_ap_idle : STD_LOGIC;
    signal conv1x1_DSPopt_U0_ap_continue : STD_LOGIC;
    signal AddLast_3600u_U0_ap_start : STD_LOGIC;
    signal AddLast_3600u_U0_ap_done : STD_LOGIC;
    signal AddLast_3600u_U0_ap_continue : STD_LOGIC;
    signal AddLast_3600u_U0_ap_idle : STD_LOGIC;
    signal AddLast_3600u_U0_ap_ready : STD_LOGIC;
    signal AddLast_3600u_U0_in_V_V_read : STD_LOGIC;
    signal AddLast_3600u_U0_out_r_TDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal AddLast_3600u_U0_out_r_TVALID : STD_LOGIC;
    signal AddLast_3600u_U0_out_r_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal AddLast_3600u_U0_out_r_TKEEP : STD_LOGIC_VECTOR (7 downto 0);
    signal AddLast_3600u_U0_reps_read : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal in_stream_extract_V_s_full_n : STD_LOGIC;
    signal in_stream_extract_V_s_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal in_stream_extract_V_s_empty_n : STD_LOGIC;
    signal reps_c_full_n : STD_LOGIC;
    signal reps_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal reps_c_empty_n : STD_LOGIC;
    signal in_stream0_V_V_full_n : STD_LOGIC;
    signal in_stream0_V_V_dout : STD_LOGIC_VECTOR (191 downto 0);
    signal in_stream0_V_V_empty_n : STD_LOGIC;
    signal reps_c1_full_n : STD_LOGIC;
    signal reps_c1_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal reps_c1_empty_n : STD_LOGIC;
    signal in_stream1_V_V_full_n : STD_LOGIC;
    signal in_stream1_V_V_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal in_stream1_V_V_empty_n : STD_LOGIC;
    signal reps_c2_full_n : STD_LOGIC;
    signal reps_c2_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal reps_c2_empty_n : STD_LOGIC;
    signal in_stream2_V_V_full_n : STD_LOGIC;
    signal in_stream2_V_V_dout : STD_LOGIC_VECTOR (23 downto 0);
    signal in_stream2_V_V_empty_n : STD_LOGIC;
    signal reps_c3_full_n : STD_LOGIC;
    signal reps_c3_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal reps_c3_empty_n : STD_LOGIC;
    signal conv_0_out_V_V_full_n : STD_LOGIC;
    signal conv_0_out_V_V_dout : STD_LOGIC_VECTOR (127 downto 0);
    signal conv_0_out_V_V_empty_n : STD_LOGIC;
    signal reps_c4_full_n : STD_LOGIC;
    signal reps_c4_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal reps_c4_empty_n : STD_LOGIC;
    signal pool_0_out_V_V_full_n : STD_LOGIC;
    signal pool_0_out_V_V_dout : STD_LOGIC_VECTOR (127 downto 0);
    signal pool_0_out_V_V_empty_n : STD_LOGIC;
    signal reps_c5_full_n : STD_LOGIC;
    signal reps_c5_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal reps_c5_empty_n : STD_LOGIC;
    signal conv_1_out_V_V_full_n : STD_LOGIC;
    signal conv_1_out_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_1_out_V_V_empty_n : STD_LOGIC;
    signal reps_c6_full_n : STD_LOGIC;
    signal reps_c6_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal reps_c6_empty_n : STD_LOGIC;
    signal pool_1_out_V_V_full_n : STD_LOGIC;
    signal pool_1_out_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_1_out_V_V_empty_n : STD_LOGIC;
    signal reps_c7_full_n : STD_LOGIC;
    signal reps_c7_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal reps_c7_empty_n : STD_LOGIC;
    signal conv_2_out_V_V_full_n : STD_LOGIC;
    signal conv_2_out_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_2_out_V_V_empty_n : STD_LOGIC;
    signal reps_c8_full_n : STD_LOGIC;
    signal reps_c8_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal reps_c8_empty_n : STD_LOGIC;
    signal pool_2_out_V_V_full_n : STD_LOGIC;
    signal pool_2_out_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal pool_2_out_V_V_empty_n : STD_LOGIC;
    signal reps_c9_full_n : STD_LOGIC;
    signal reps_c9_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal reps_c9_empty_n : STD_LOGIC;
    signal conv_3_out_V_V_full_n : STD_LOGIC;
    signal conv_3_out_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_3_out_V_V_empty_n : STD_LOGIC;
    signal reps_c10_full_n : STD_LOGIC;
    signal reps_c10_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal reps_c10_empty_n : STD_LOGIC;
    signal pool_3_out_V_V_full_n : STD_LOGIC;
    signal pool_3_out_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_3_out_V_V_empty_n : STD_LOGIC;
    signal reps_c11_full_n : STD_LOGIC;
    signal reps_c11_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal reps_c11_empty_n : STD_LOGIC;
    signal conv_4_out_V_V_full_n : STD_LOGIC;
    signal conv_4_out_V_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_4_out_V_V_empty_n : STD_LOGIC;
    signal reps_c12_full_n : STD_LOGIC;
    signal reps_c12_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal reps_c12_empty_n : STD_LOGIC;
    signal conv_5_out_V_V_full_n : STD_LOGIC;
    signal conv_5_out_V_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_5_out_V_V_empty_n : STD_LOGIC;
    signal reps_c13_full_n : STD_LOGIC;
    signal reps_c13_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal reps_c13_empty_n : STD_LOGIC;
    signal conv_6_out_V_V_full_n : STD_LOGIC;
    signal conv_6_out_V_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_6_out_V_V_empty_n : STD_LOGIC;
    signal reps_c14_full_n : STD_LOGIC;
    signal reps_c14_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal reps_c14_empty_n : STD_LOGIC;
    signal conv_7_out_V_V_full_n : STD_LOGIC;
    signal conv_7_out_V_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_7_out_V_V_empty_n : STD_LOGIC;
    signal reps_c15_full_n : STD_LOGIC;
    signal reps_c15_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal reps_c15_empty_n : STD_LOGIC;
    signal conv_8_out_V_V_full_n : STD_LOGIC;
    signal conv_8_out_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_8_out_V_V_empty_n : STD_LOGIC;
    signal reps_c16_full_n : STD_LOGIC;
    signal reps_c16_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal reps_c16_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal start_for_StreamingDataWidthCo_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingDataWidthCo_U0_full_n : STD_LOGIC;
    signal start_for_StreamingDataWidthCo_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingDataWidthCo_U0_empty_n : STD_LOGIC;
    signal start_for_StreamingDataWidthCo_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingDataWidthCo_1_U0_full_n : STD_LOGIC;
    signal start_for_StreamingDataWidthCo_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_StreamingDataWidthCo_1_U0_empty_n : STD_LOGIC;
    signal start_for_resize_batch_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_resize_batch_U0_full_n : STD_LOGIC;
    signal start_for_resize_batch_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_resize_batch_U0_empty_n : STD_LOGIC;
    signal start_for_conv3x3_l0_bn_act_DS_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv3x3_l0_bn_act_DS_U0_full_n : STD_LOGIC;
    signal start_for_conv3x3_l0_bn_act_DS_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv3x3_l0_bn_act_DS_U0_empty_n : STD_LOGIC;
    signal start_for_max_pool2x2_3_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_max_pool2x2_3_U0_full_n : STD_LOGIC;
    signal start_for_max_pool2x2_3_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_max_pool2x2_3_U0_empty_n : STD_LOGIC;
    signal start_for_conv3x3_bn_act_DSPop_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv3x3_bn_act_DSPop_U0_full_n : STD_LOGIC;
    signal start_for_conv3x3_bn_act_DSPop_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv3x3_bn_act_DSPop_U0_empty_n : STD_LOGIC;
    signal start_for_max_pool2x2_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_max_pool2x2_U0_full_n : STD_LOGIC;
    signal start_for_max_pool2x2_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_max_pool2x2_U0_empty_n : STD_LOGIC;
    signal start_for_conv3x3_bn_act_DSPop_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv3x3_bn_act_DSPop_1_U0_full_n : STD_LOGIC;
    signal start_for_conv3x3_bn_act_DSPop_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv3x3_bn_act_DSPop_1_U0_empty_n : STD_LOGIC;
    signal start_for_max_pool2x2_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_max_pool2x2_1_U0_full_n : STD_LOGIC;
    signal start_for_max_pool2x2_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_max_pool2x2_1_U0_empty_n : STD_LOGIC;
    signal start_for_conv3x3_bn_act_DSPop_2_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv3x3_bn_act_DSPop_2_U0_full_n : STD_LOGIC;
    signal start_for_conv3x3_bn_act_DSPop_2_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv3x3_bn_act_DSPop_2_U0_empty_n : STD_LOGIC;
    signal start_for_max_pool2x2_2_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_max_pool2x2_2_U0_full_n : STD_LOGIC;
    signal start_for_max_pool2x2_2_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_max_pool2x2_2_U0_empty_n : STD_LOGIC;
    signal start_for_conv3x3_bn_act_DSPop_4_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv3x3_bn_act_DSPop_4_U0_full_n : STD_LOGIC;
    signal start_for_conv3x3_bn_act_DSPop_4_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv3x3_bn_act_DSPop_4_U0_empty_n : STD_LOGIC;
    signal start_for_conv3x3_bn_act_DSPop_6_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv3x3_bn_act_DSPop_6_U0_full_n : STD_LOGIC;
    signal start_for_conv3x3_bn_act_DSPop_6_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv3x3_bn_act_DSPop_6_U0_empty_n : STD_LOGIC;
    signal start_for_conv3x3_bn_act_DSPop_5_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv3x3_bn_act_DSPop_5_U0_full_n : STD_LOGIC;
    signal start_for_conv3x3_bn_act_DSPop_5_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv3x3_bn_act_DSPop_5_U0_empty_n : STD_LOGIC;
    signal start_for_conv3x3_bn_act_DSPop_3_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv3x3_bn_act_DSPop_3_U0_full_n : STD_LOGIC;
    signal start_for_conv3x3_bn_act_DSPop_3_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv3x3_bn_act_DSPop_3_U0_empty_n : STD_LOGIC;
    signal start_for_conv1x1_DSPopt_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv1x1_DSPopt_U0_full_n : STD_LOGIC;
    signal start_for_conv1x1_DSPopt_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_conv1x1_DSPopt_U0_empty_n : STD_LOGIC;
    signal start_for_AddLast_3600u_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_AddLast_3600u_U0_full_n : STD_LOGIC;
    signal start_for_AddLast_3600u_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_AddLast_3600u_U0_empty_n : STD_LOGIC;
    signal AddLast_3600u_U0_start_full_n : STD_LOGIC;
    signal AddLast_3600u_U0_start_write : STD_LOGIC;

    component ExtractPixels IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_r_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        in_r_TVALID : IN STD_LOGIC;
        in_r_TREADY : OUT STD_LOGIC;
        in_r_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        in_r_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
        out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC;
        reps : IN STD_LOGIC_VECTOR (31 downto 0);
        reps_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        reps_out_full_n : IN STD_LOGIC;
        reps_out_write : OUT STD_LOGIC );
    end component;


    component StreamingDataWidthCo IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (191 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC;
        numReps_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        numReps_empty_n : IN STD_LOGIC;
        numReps_read : OUT STD_LOGIC;
        numReps_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        numReps_out_full_n : IN STD_LOGIC;
        numReps_out_write : OUT STD_LOGIC );
    end component;


    component StreamingDataWidthCo_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (191 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC;
        numReps_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        numReps_empty_n : IN STD_LOGIC;
        numReps_read : OUT STD_LOGIC;
        numReps_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        numReps_out_full_n : IN STD_LOGIC;
        numReps_out_write : OUT STD_LOGIC );
    end component;


    component resize_batch IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC;
        reps_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        reps_empty_n : IN STD_LOGIC;
        reps_read : OUT STD_LOGIC;
        reps_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        reps_out_full_n : IN STD_LOGIC;
        reps_out_write : OUT STD_LOGIC );
    end component;


    component conv3x3_l0_bn_act_DS IS
    port (
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC;
        reps_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        reps_empty_n : IN STD_LOGIC;
        reps_read : OUT STD_LOGIC;
        reps_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        reps_out_full_n : IN STD_LOGIC;
        reps_out_write : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component max_pool2x2_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        vec_V_V_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        vec_V_V_empty_n : IN STD_LOGIC;
        vec_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (127 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC;
        reps_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        reps_empty_n : IN STD_LOGIC;
        reps_read : OUT STD_LOGIC;
        reps_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        reps_out_full_n : IN STD_LOGIC;
        reps_out_write : OUT STD_LOGIC );
    end component;


    component conv3x3_bn_act_DSPop IS
    port (
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC;
        reps_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        reps_empty_n : IN STD_LOGIC;
        reps_read : OUT STD_LOGIC;
        reps_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        reps_out_full_n : IN STD_LOGIC;
        reps_out_write : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component max_pool2x2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        vec_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        vec_V_V_empty_n : IN STD_LOGIC;
        vec_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC;
        reps_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        reps_empty_n : IN STD_LOGIC;
        reps_read : OUT STD_LOGIC;
        reps_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        reps_out_full_n : IN STD_LOGIC;
        reps_out_write : OUT STD_LOGIC );
    end component;


    component conv3x3_bn_act_DSPop_1 IS
    port (
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC;
        reps_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        reps_empty_n : IN STD_LOGIC;
        reps_read : OUT STD_LOGIC;
        reps_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        reps_out_full_n : IN STD_LOGIC;
        reps_out_write : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component max_pool2x2_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        vec_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        vec_V_V_empty_n : IN STD_LOGIC;
        vec_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC;
        reps_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        reps_empty_n : IN STD_LOGIC;
        reps_read : OUT STD_LOGIC;
        reps_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        reps_out_full_n : IN STD_LOGIC;
        reps_out_write : OUT STD_LOGIC );
    end component;


    component conv3x3_bn_act_DSPop_2 IS
    port (
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC;
        reps_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        reps_empty_n : IN STD_LOGIC;
        reps_read : OUT STD_LOGIC;
        reps_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        reps_out_full_n : IN STD_LOGIC;
        reps_out_write : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component max_pool2x2_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        vec_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        vec_V_V_empty_n : IN STD_LOGIC;
        vec_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC;
        reps_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        reps_empty_n : IN STD_LOGIC;
        reps_read : OUT STD_LOGIC;
        reps_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        reps_out_full_n : IN STD_LOGIC;
        reps_out_write : OUT STD_LOGIC );
    end component;


    component conv3x3_bn_act_DSPop_4 IS
    port (
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC;
        reps_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        reps_empty_n : IN STD_LOGIC;
        reps_read : OUT STD_LOGIC;
        reps_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        reps_out_full_n : IN STD_LOGIC;
        reps_out_write : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component conv3x3_bn_act_DSPop_6 IS
    port (
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC;
        reps_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        reps_empty_n : IN STD_LOGIC;
        reps_read : OUT STD_LOGIC;
        reps_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        reps_out_full_n : IN STD_LOGIC;
        reps_out_write : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component conv3x3_bn_act_DSPop_5 IS
    port (
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC;
        reps_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        reps_empty_n : IN STD_LOGIC;
        reps_read : OUT STD_LOGIC;
        reps_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        reps_out_full_n : IN STD_LOGIC;
        reps_out_write : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component conv3x3_bn_act_DSPop_3 IS
    port (
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC;
        reps_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        reps_empty_n : IN STD_LOGIC;
        reps_read : OUT STD_LOGIC;
        reps_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        reps_out_full_n : IN STD_LOGIC;
        reps_out_write : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component conv1x1_DSPopt IS
    port (
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC;
        reps_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        reps_empty_n : IN STD_LOGIC;
        reps_read : OUT STD_LOGIC;
        reps_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        reps_out_full_n : IN STD_LOGIC;
        reps_out_write : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component AddLast_3600u_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        in_V_V_empty_n : IN STD_LOGIC;
        in_V_V_read : OUT STD_LOGIC;
        out_r_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_r_TVALID : OUT STD_LOGIC;
        out_r_TREADY : IN STD_LOGIC;
        out_r_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        out_r_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
        reps_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        reps_empty_n : IN STD_LOGIC;
        reps_read : OUT STD_LOGIC );
    end component;


    component fifo_w64_d1024_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d2_A_x7 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w192_d1024_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (191 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (191 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w24_d16_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (23 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (23 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w128_d128_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (127 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (127 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d128_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w64_d128_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w16_d128_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w64_d64_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_StreamidYM IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_StreamidZM IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_resize_d0M IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_conv3x3d1M IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_max_pood2M IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_conv3x3d3M IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_max_pood4N IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_conv3x3d5N IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_max_pood6N IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_conv3x3d7N IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_max_pood8N IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_conv3x3d9N IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_conv3x3eaO IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_conv3x3ebO IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_conv3x3ecO IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_conv1x1edO IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_AddLasteeO IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    ExtractPixels_U0 : component ExtractPixels
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ExtractPixels_U0_ap_start,
        start_full_n => start_for_StreamingDataWidthCo_U0_full_n,
        ap_done => ExtractPixels_U0_ap_done,
        ap_continue => ExtractPixels_U0_ap_continue,
        ap_idle => ExtractPixels_U0_ap_idle,
        ap_ready => ExtractPixels_U0_ap_ready,
        start_out => ExtractPixels_U0_start_out,
        start_write => ExtractPixels_U0_start_write,
        in_r_TDATA => in_r_TDATA,
        in_r_TVALID => in_r_TVALID,
        in_r_TREADY => ExtractPixels_U0_in_r_TREADY,
        in_r_TLAST => in_r_TLAST,
        in_r_TKEEP => in_r_TKEEP,
        out_V_V_din => ExtractPixels_U0_out_V_V_din,
        out_V_V_full_n => in_stream_extract_V_s_full_n,
        out_V_V_write => ExtractPixels_U0_out_V_V_write,
        reps => reps,
        reps_out_din => ExtractPixels_U0_reps_out_din,
        reps_out_full_n => reps_c_full_n,
        reps_out_write => ExtractPixels_U0_reps_out_write);

    StreamingDataWidthCo_U0 : component StreamingDataWidthCo
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => StreamingDataWidthCo_U0_ap_start,
        start_full_n => start_for_StreamingDataWidthCo_1_U0_full_n,
        ap_done => StreamingDataWidthCo_U0_ap_done,
        ap_continue => StreamingDataWidthCo_U0_ap_continue,
        ap_idle => StreamingDataWidthCo_U0_ap_idle,
        ap_ready => StreamingDataWidthCo_U0_ap_ready,
        start_out => StreamingDataWidthCo_U0_start_out,
        start_write => StreamingDataWidthCo_U0_start_write,
        in_V_V_dout => in_stream_extract_V_s_dout,
        in_V_V_empty_n => in_stream_extract_V_s_empty_n,
        in_V_V_read => StreamingDataWidthCo_U0_in_V_V_read,
        out_V_V_din => StreamingDataWidthCo_U0_out_V_V_din,
        out_V_V_full_n => in_stream0_V_V_full_n,
        out_V_V_write => StreamingDataWidthCo_U0_out_V_V_write,
        numReps_dout => reps_c_dout,
        numReps_empty_n => reps_c_empty_n,
        numReps_read => StreamingDataWidthCo_U0_numReps_read,
        numReps_out_din => StreamingDataWidthCo_U0_numReps_out_din,
        numReps_out_full_n => reps_c1_full_n,
        numReps_out_write => StreamingDataWidthCo_U0_numReps_out_write);

    StreamingDataWidthCo_1_U0 : component StreamingDataWidthCo_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => StreamingDataWidthCo_1_U0_ap_start,
        start_full_n => start_for_resize_batch_U0_full_n,
        ap_done => StreamingDataWidthCo_1_U0_ap_done,
        ap_continue => StreamingDataWidthCo_1_U0_ap_continue,
        ap_idle => StreamingDataWidthCo_1_U0_ap_idle,
        ap_ready => StreamingDataWidthCo_1_U0_ap_ready,
        start_out => StreamingDataWidthCo_1_U0_start_out,
        start_write => StreamingDataWidthCo_1_U0_start_write,
        in_V_V_dout => in_stream0_V_V_dout,
        in_V_V_empty_n => in_stream0_V_V_empty_n,
        in_V_V_read => StreamingDataWidthCo_1_U0_in_V_V_read,
        out_V_V_din => StreamingDataWidthCo_1_U0_out_V_V_din,
        out_V_V_full_n => in_stream1_V_V_full_n,
        out_V_V_write => StreamingDataWidthCo_1_U0_out_V_V_write,
        numReps_dout => reps_c1_dout,
        numReps_empty_n => reps_c1_empty_n,
        numReps_read => StreamingDataWidthCo_1_U0_numReps_read,
        numReps_out_din => StreamingDataWidthCo_1_U0_numReps_out_din,
        numReps_out_full_n => reps_c2_full_n,
        numReps_out_write => StreamingDataWidthCo_1_U0_numReps_out_write);

    resize_batch_U0 : component resize_batch
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => resize_batch_U0_ap_start,
        start_full_n => start_for_conv3x3_l0_bn_act_DS_U0_full_n,
        ap_done => resize_batch_U0_ap_done,
        ap_continue => resize_batch_U0_ap_continue,
        ap_idle => resize_batch_U0_ap_idle,
        ap_ready => resize_batch_U0_ap_ready,
        start_out => resize_batch_U0_start_out,
        start_write => resize_batch_U0_start_write,
        in_V_V_dout => in_stream1_V_V_dout,
        in_V_V_empty_n => in_stream1_V_V_empty_n,
        in_V_V_read => resize_batch_U0_in_V_V_read,
        out_V_V_din => resize_batch_U0_out_V_V_din,
        out_V_V_full_n => in_stream2_V_V_full_n,
        out_V_V_write => resize_batch_U0_out_V_V_write,
        reps_dout => reps_c2_dout,
        reps_empty_n => reps_c2_empty_n,
        reps_read => resize_batch_U0_reps_read,
        reps_out_din => resize_batch_U0_reps_out_din,
        reps_out_full_n => reps_c3_full_n,
        reps_out_write => resize_batch_U0_reps_out_write);

    conv3x3_l0_bn_act_DS_U0 : component conv3x3_l0_bn_act_DS
    port map (
        ap_start => conv3x3_l0_bn_act_DS_U0_ap_start,
        start_full_n => start_for_max_pool2x2_3_U0_full_n,
        start_out => conv3x3_l0_bn_act_DS_U0_start_out,
        start_write => conv3x3_l0_bn_act_DS_U0_start_write,
        in_V_V_dout => in_stream2_V_V_dout,
        in_V_V_empty_n => in_stream2_V_V_empty_n,
        in_V_V_read => conv3x3_l0_bn_act_DS_U0_in_V_V_read,
        out_V_V_din => conv3x3_l0_bn_act_DS_U0_out_V_V_din,
        out_V_V_full_n => conv_0_out_V_V_full_n,
        out_V_V_write => conv3x3_l0_bn_act_DS_U0_out_V_V_write,
        reps_dout => reps_c3_dout,
        reps_empty_n => reps_c3_empty_n,
        reps_read => conv3x3_l0_bn_act_DS_U0_reps_read,
        reps_out_din => conv3x3_l0_bn_act_DS_U0_reps_out_din,
        reps_out_full_n => reps_c4_full_n,
        reps_out_write => conv3x3_l0_bn_act_DS_U0_reps_out_write,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_done => conv3x3_l0_bn_act_DS_U0_ap_done,
        ap_ready => conv3x3_l0_bn_act_DS_U0_ap_ready,
        ap_idle => conv3x3_l0_bn_act_DS_U0_ap_idle,
        ap_continue => conv3x3_l0_bn_act_DS_U0_ap_continue);

    max_pool2x2_3_U0 : component max_pool2x2_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => max_pool2x2_3_U0_ap_start,
        start_full_n => start_for_conv3x3_bn_act_DSPop_U0_full_n,
        ap_done => max_pool2x2_3_U0_ap_done,
        ap_continue => max_pool2x2_3_U0_ap_continue,
        ap_idle => max_pool2x2_3_U0_ap_idle,
        ap_ready => max_pool2x2_3_U0_ap_ready,
        start_out => max_pool2x2_3_U0_start_out,
        start_write => max_pool2x2_3_U0_start_write,
        vec_V_V_dout => conv_0_out_V_V_dout,
        vec_V_V_empty_n => conv_0_out_V_V_empty_n,
        vec_V_V_read => max_pool2x2_3_U0_vec_V_V_read,
        out_V_V_din => max_pool2x2_3_U0_out_V_V_din,
        out_V_V_full_n => pool_0_out_V_V_full_n,
        out_V_V_write => max_pool2x2_3_U0_out_V_V_write,
        reps_dout => reps_c4_dout,
        reps_empty_n => reps_c4_empty_n,
        reps_read => max_pool2x2_3_U0_reps_read,
        reps_out_din => max_pool2x2_3_U0_reps_out_din,
        reps_out_full_n => reps_c5_full_n,
        reps_out_write => max_pool2x2_3_U0_reps_out_write);

    conv3x3_bn_act_DSPop_U0 : component conv3x3_bn_act_DSPop
    port map (
        ap_start => conv3x3_bn_act_DSPop_U0_ap_start,
        start_full_n => start_for_max_pool2x2_U0_full_n,
        start_out => conv3x3_bn_act_DSPop_U0_start_out,
        start_write => conv3x3_bn_act_DSPop_U0_start_write,
        in_V_V_dout => pool_0_out_V_V_dout,
        in_V_V_empty_n => pool_0_out_V_V_empty_n,
        in_V_V_read => conv3x3_bn_act_DSPop_U0_in_V_V_read,
        out_V_V_din => conv3x3_bn_act_DSPop_U0_out_V_V_din,
        out_V_V_full_n => conv_1_out_V_V_full_n,
        out_V_V_write => conv3x3_bn_act_DSPop_U0_out_V_V_write,
        reps_dout => reps_c5_dout,
        reps_empty_n => reps_c5_empty_n,
        reps_read => conv3x3_bn_act_DSPop_U0_reps_read,
        reps_out_din => conv3x3_bn_act_DSPop_U0_reps_out_din,
        reps_out_full_n => reps_c6_full_n,
        reps_out_write => conv3x3_bn_act_DSPop_U0_reps_out_write,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_done => conv3x3_bn_act_DSPop_U0_ap_done,
        ap_ready => conv3x3_bn_act_DSPop_U0_ap_ready,
        ap_idle => conv3x3_bn_act_DSPop_U0_ap_idle,
        ap_continue => conv3x3_bn_act_DSPop_U0_ap_continue);

    max_pool2x2_U0 : component max_pool2x2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => max_pool2x2_U0_ap_start,
        start_full_n => start_for_conv3x3_bn_act_DSPop_1_U0_full_n,
        ap_done => max_pool2x2_U0_ap_done,
        ap_continue => max_pool2x2_U0_ap_continue,
        ap_idle => max_pool2x2_U0_ap_idle,
        ap_ready => max_pool2x2_U0_ap_ready,
        start_out => max_pool2x2_U0_start_out,
        start_write => max_pool2x2_U0_start_write,
        vec_V_V_dout => conv_1_out_V_V_dout,
        vec_V_V_empty_n => conv_1_out_V_V_empty_n,
        vec_V_V_read => max_pool2x2_U0_vec_V_V_read,
        out_V_V_din => max_pool2x2_U0_out_V_V_din,
        out_V_V_full_n => pool_1_out_V_V_full_n,
        out_V_V_write => max_pool2x2_U0_out_V_V_write,
        reps_dout => reps_c6_dout,
        reps_empty_n => reps_c6_empty_n,
        reps_read => max_pool2x2_U0_reps_read,
        reps_out_din => max_pool2x2_U0_reps_out_din,
        reps_out_full_n => reps_c7_full_n,
        reps_out_write => max_pool2x2_U0_reps_out_write);

    conv3x3_bn_act_DSPop_1_U0 : component conv3x3_bn_act_DSPop_1
    port map (
        ap_start => conv3x3_bn_act_DSPop_1_U0_ap_start,
        start_full_n => start_for_max_pool2x2_1_U0_full_n,
        start_out => conv3x3_bn_act_DSPop_1_U0_start_out,
        start_write => conv3x3_bn_act_DSPop_1_U0_start_write,
        in_V_V_dout => pool_1_out_V_V_dout,
        in_V_V_empty_n => pool_1_out_V_V_empty_n,
        in_V_V_read => conv3x3_bn_act_DSPop_1_U0_in_V_V_read,
        out_V_V_din => conv3x3_bn_act_DSPop_1_U0_out_V_V_din,
        out_V_V_full_n => conv_2_out_V_V_full_n,
        out_V_V_write => conv3x3_bn_act_DSPop_1_U0_out_V_V_write,
        reps_dout => reps_c7_dout,
        reps_empty_n => reps_c7_empty_n,
        reps_read => conv3x3_bn_act_DSPop_1_U0_reps_read,
        reps_out_din => conv3x3_bn_act_DSPop_1_U0_reps_out_din,
        reps_out_full_n => reps_c8_full_n,
        reps_out_write => conv3x3_bn_act_DSPop_1_U0_reps_out_write,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_done => conv3x3_bn_act_DSPop_1_U0_ap_done,
        ap_ready => conv3x3_bn_act_DSPop_1_U0_ap_ready,
        ap_idle => conv3x3_bn_act_DSPop_1_U0_ap_idle,
        ap_continue => conv3x3_bn_act_DSPop_1_U0_ap_continue);

    max_pool2x2_1_U0 : component max_pool2x2_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => max_pool2x2_1_U0_ap_start,
        start_full_n => start_for_conv3x3_bn_act_DSPop_2_U0_full_n,
        ap_done => max_pool2x2_1_U0_ap_done,
        ap_continue => max_pool2x2_1_U0_ap_continue,
        ap_idle => max_pool2x2_1_U0_ap_idle,
        ap_ready => max_pool2x2_1_U0_ap_ready,
        start_out => max_pool2x2_1_U0_start_out,
        start_write => max_pool2x2_1_U0_start_write,
        vec_V_V_dout => conv_2_out_V_V_dout,
        vec_V_V_empty_n => conv_2_out_V_V_empty_n,
        vec_V_V_read => max_pool2x2_1_U0_vec_V_V_read,
        out_V_V_din => max_pool2x2_1_U0_out_V_V_din,
        out_V_V_full_n => pool_2_out_V_V_full_n,
        out_V_V_write => max_pool2x2_1_U0_out_V_V_write,
        reps_dout => reps_c8_dout,
        reps_empty_n => reps_c8_empty_n,
        reps_read => max_pool2x2_1_U0_reps_read,
        reps_out_din => max_pool2x2_1_U0_reps_out_din,
        reps_out_full_n => reps_c9_full_n,
        reps_out_write => max_pool2x2_1_U0_reps_out_write);

    conv3x3_bn_act_DSPop_2_U0 : component conv3x3_bn_act_DSPop_2
    port map (
        ap_start => conv3x3_bn_act_DSPop_2_U0_ap_start,
        start_full_n => start_for_max_pool2x2_2_U0_full_n,
        start_out => conv3x3_bn_act_DSPop_2_U0_start_out,
        start_write => conv3x3_bn_act_DSPop_2_U0_start_write,
        in_V_V_dout => pool_2_out_V_V_dout,
        in_V_V_empty_n => pool_2_out_V_V_empty_n,
        in_V_V_read => conv3x3_bn_act_DSPop_2_U0_in_V_V_read,
        out_V_V_din => conv3x3_bn_act_DSPop_2_U0_out_V_V_din,
        out_V_V_full_n => conv_3_out_V_V_full_n,
        out_V_V_write => conv3x3_bn_act_DSPop_2_U0_out_V_V_write,
        reps_dout => reps_c9_dout,
        reps_empty_n => reps_c9_empty_n,
        reps_read => conv3x3_bn_act_DSPop_2_U0_reps_read,
        reps_out_din => conv3x3_bn_act_DSPop_2_U0_reps_out_din,
        reps_out_full_n => reps_c10_full_n,
        reps_out_write => conv3x3_bn_act_DSPop_2_U0_reps_out_write,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_done => conv3x3_bn_act_DSPop_2_U0_ap_done,
        ap_ready => conv3x3_bn_act_DSPop_2_U0_ap_ready,
        ap_idle => conv3x3_bn_act_DSPop_2_U0_ap_idle,
        ap_continue => conv3x3_bn_act_DSPop_2_U0_ap_continue);

    max_pool2x2_2_U0 : component max_pool2x2_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => max_pool2x2_2_U0_ap_start,
        start_full_n => start_for_conv3x3_bn_act_DSPop_4_U0_full_n,
        ap_done => max_pool2x2_2_U0_ap_done,
        ap_continue => max_pool2x2_2_U0_ap_continue,
        ap_idle => max_pool2x2_2_U0_ap_idle,
        ap_ready => max_pool2x2_2_U0_ap_ready,
        start_out => max_pool2x2_2_U0_start_out,
        start_write => max_pool2x2_2_U0_start_write,
        vec_V_V_dout => conv_3_out_V_V_dout,
        vec_V_V_empty_n => conv_3_out_V_V_empty_n,
        vec_V_V_read => max_pool2x2_2_U0_vec_V_V_read,
        out_V_V_din => max_pool2x2_2_U0_out_V_V_din,
        out_V_V_full_n => pool_3_out_V_V_full_n,
        out_V_V_write => max_pool2x2_2_U0_out_V_V_write,
        reps_dout => reps_c10_dout,
        reps_empty_n => reps_c10_empty_n,
        reps_read => max_pool2x2_2_U0_reps_read,
        reps_out_din => max_pool2x2_2_U0_reps_out_din,
        reps_out_full_n => reps_c11_full_n,
        reps_out_write => max_pool2x2_2_U0_reps_out_write);

    conv3x3_bn_act_DSPop_4_U0 : component conv3x3_bn_act_DSPop_4
    port map (
        ap_start => conv3x3_bn_act_DSPop_4_U0_ap_start,
        start_full_n => start_for_conv3x3_bn_act_DSPop_6_U0_full_n,
        start_out => conv3x3_bn_act_DSPop_4_U0_start_out,
        start_write => conv3x3_bn_act_DSPop_4_U0_start_write,
        in_V_V_dout => pool_3_out_V_V_dout,
        in_V_V_empty_n => pool_3_out_V_V_empty_n,
        in_V_V_read => conv3x3_bn_act_DSPop_4_U0_in_V_V_read,
        out_V_V_din => conv3x3_bn_act_DSPop_4_U0_out_V_V_din,
        out_V_V_full_n => conv_4_out_V_V_full_n,
        out_V_V_write => conv3x3_bn_act_DSPop_4_U0_out_V_V_write,
        reps_dout => reps_c11_dout,
        reps_empty_n => reps_c11_empty_n,
        reps_read => conv3x3_bn_act_DSPop_4_U0_reps_read,
        reps_out_din => conv3x3_bn_act_DSPop_4_U0_reps_out_din,
        reps_out_full_n => reps_c12_full_n,
        reps_out_write => conv3x3_bn_act_DSPop_4_U0_reps_out_write,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_done => conv3x3_bn_act_DSPop_4_U0_ap_done,
        ap_ready => conv3x3_bn_act_DSPop_4_U0_ap_ready,
        ap_idle => conv3x3_bn_act_DSPop_4_U0_ap_idle,
        ap_continue => conv3x3_bn_act_DSPop_4_U0_ap_continue);

    conv3x3_bn_act_DSPop_6_U0 : component conv3x3_bn_act_DSPop_6
    port map (
        ap_start => conv3x3_bn_act_DSPop_6_U0_ap_start,
        start_full_n => start_for_conv3x3_bn_act_DSPop_5_U0_full_n,
        start_out => conv3x3_bn_act_DSPop_6_U0_start_out,
        start_write => conv3x3_bn_act_DSPop_6_U0_start_write,
        in_V_V_dout => conv_4_out_V_V_dout,
        in_V_V_empty_n => conv_4_out_V_V_empty_n,
        in_V_V_read => conv3x3_bn_act_DSPop_6_U0_in_V_V_read,
        out_V_V_din => conv3x3_bn_act_DSPop_6_U0_out_V_V_din,
        out_V_V_full_n => conv_5_out_V_V_full_n,
        out_V_V_write => conv3x3_bn_act_DSPop_6_U0_out_V_V_write,
        reps_dout => reps_c12_dout,
        reps_empty_n => reps_c12_empty_n,
        reps_read => conv3x3_bn_act_DSPop_6_U0_reps_read,
        reps_out_din => conv3x3_bn_act_DSPop_6_U0_reps_out_din,
        reps_out_full_n => reps_c13_full_n,
        reps_out_write => conv3x3_bn_act_DSPop_6_U0_reps_out_write,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_done => conv3x3_bn_act_DSPop_6_U0_ap_done,
        ap_ready => conv3x3_bn_act_DSPop_6_U0_ap_ready,
        ap_idle => conv3x3_bn_act_DSPop_6_U0_ap_idle,
        ap_continue => conv3x3_bn_act_DSPop_6_U0_ap_continue);

    conv3x3_bn_act_DSPop_5_U0 : component conv3x3_bn_act_DSPop_5
    port map (
        ap_start => conv3x3_bn_act_DSPop_5_U0_ap_start,
        start_full_n => start_for_conv3x3_bn_act_DSPop_3_U0_full_n,
        start_out => conv3x3_bn_act_DSPop_5_U0_start_out,
        start_write => conv3x3_bn_act_DSPop_5_U0_start_write,
        in_V_V_dout => conv_5_out_V_V_dout,
        in_V_V_empty_n => conv_5_out_V_V_empty_n,
        in_V_V_read => conv3x3_bn_act_DSPop_5_U0_in_V_V_read,
        out_V_V_din => conv3x3_bn_act_DSPop_5_U0_out_V_V_din,
        out_V_V_full_n => conv_6_out_V_V_full_n,
        out_V_V_write => conv3x3_bn_act_DSPop_5_U0_out_V_V_write,
        reps_dout => reps_c13_dout,
        reps_empty_n => reps_c13_empty_n,
        reps_read => conv3x3_bn_act_DSPop_5_U0_reps_read,
        reps_out_din => conv3x3_bn_act_DSPop_5_U0_reps_out_din,
        reps_out_full_n => reps_c14_full_n,
        reps_out_write => conv3x3_bn_act_DSPop_5_U0_reps_out_write,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_done => conv3x3_bn_act_DSPop_5_U0_ap_done,
        ap_ready => conv3x3_bn_act_DSPop_5_U0_ap_ready,
        ap_idle => conv3x3_bn_act_DSPop_5_U0_ap_idle,
        ap_continue => conv3x3_bn_act_DSPop_5_U0_ap_continue);

    conv3x3_bn_act_DSPop_3_U0 : component conv3x3_bn_act_DSPop_3
    port map (
        ap_start => conv3x3_bn_act_DSPop_3_U0_ap_start,
        start_full_n => start_for_conv1x1_DSPopt_U0_full_n,
        start_out => conv3x3_bn_act_DSPop_3_U0_start_out,
        start_write => conv3x3_bn_act_DSPop_3_U0_start_write,
        in_V_V_dout => conv_6_out_V_V_dout,
        in_V_V_empty_n => conv_6_out_V_V_empty_n,
        in_V_V_read => conv3x3_bn_act_DSPop_3_U0_in_V_V_read,
        out_V_V_din => conv3x3_bn_act_DSPop_3_U0_out_V_V_din,
        out_V_V_full_n => conv_7_out_V_V_full_n,
        out_V_V_write => conv3x3_bn_act_DSPop_3_U0_out_V_V_write,
        reps_dout => reps_c14_dout,
        reps_empty_n => reps_c14_empty_n,
        reps_read => conv3x3_bn_act_DSPop_3_U0_reps_read,
        reps_out_din => conv3x3_bn_act_DSPop_3_U0_reps_out_din,
        reps_out_full_n => reps_c15_full_n,
        reps_out_write => conv3x3_bn_act_DSPop_3_U0_reps_out_write,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_done => conv3x3_bn_act_DSPop_3_U0_ap_done,
        ap_ready => conv3x3_bn_act_DSPop_3_U0_ap_ready,
        ap_idle => conv3x3_bn_act_DSPop_3_U0_ap_idle,
        ap_continue => conv3x3_bn_act_DSPop_3_U0_ap_continue);

    conv1x1_DSPopt_U0 : component conv1x1_DSPopt
    port map (
        ap_start => conv1x1_DSPopt_U0_ap_start,
        start_full_n => start_for_AddLast_3600u_U0_full_n,
        start_out => conv1x1_DSPopt_U0_start_out,
        start_write => conv1x1_DSPopt_U0_start_write,
        in_V_V_dout => conv_7_out_V_V_dout,
        in_V_V_empty_n => conv_7_out_V_V_empty_n,
        in_V_V_read => conv1x1_DSPopt_U0_in_V_V_read,
        out_V_V_din => conv1x1_DSPopt_U0_out_V_V_din,
        out_V_V_full_n => conv_8_out_V_V_full_n,
        out_V_V_write => conv1x1_DSPopt_U0_out_V_V_write,
        reps_dout => reps_c15_dout,
        reps_empty_n => reps_c15_empty_n,
        reps_read => conv1x1_DSPopt_U0_reps_read,
        reps_out_din => conv1x1_DSPopt_U0_reps_out_din,
        reps_out_full_n => reps_c16_full_n,
        reps_out_write => conv1x1_DSPopt_U0_reps_out_write,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_done => conv1x1_DSPopt_U0_ap_done,
        ap_ready => conv1x1_DSPopt_U0_ap_ready,
        ap_idle => conv1x1_DSPopt_U0_ap_idle,
        ap_continue => conv1x1_DSPopt_U0_ap_continue);

    AddLast_3600u_U0 : component AddLast_3600u_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => AddLast_3600u_U0_ap_start,
        ap_done => AddLast_3600u_U0_ap_done,
        ap_continue => AddLast_3600u_U0_ap_continue,
        ap_idle => AddLast_3600u_U0_ap_idle,
        ap_ready => AddLast_3600u_U0_ap_ready,
        in_V_V_dout => conv_8_out_V_V_dout,
        in_V_V_empty_n => conv_8_out_V_V_empty_n,
        in_V_V_read => AddLast_3600u_U0_in_V_V_read,
        out_r_TDATA => AddLast_3600u_U0_out_r_TDATA,
        out_r_TVALID => AddLast_3600u_U0_out_r_TVALID,
        out_r_TREADY => out_r_TREADY,
        out_r_TLAST => AddLast_3600u_U0_out_r_TLAST,
        out_r_TKEEP => AddLast_3600u_U0_out_r_TKEEP,
        reps_dout => reps_c16_dout,
        reps_empty_n => reps_c16_empty_n,
        reps_read => AddLast_3600u_U0_reps_read);

    in_stream_extract_V_s_U : component fifo_w64_d1024_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ExtractPixels_U0_out_V_V_din,
        if_full_n => in_stream_extract_V_s_full_n,
        if_write => ExtractPixels_U0_out_V_V_write,
        if_dout => in_stream_extract_V_s_dout,
        if_empty_n => in_stream_extract_V_s_empty_n,
        if_read => StreamingDataWidthCo_U0_in_V_V_read);

    reps_c_U : component fifo_w32_d2_A_x7
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => ExtractPixels_U0_reps_out_din,
        if_full_n => reps_c_full_n,
        if_write => ExtractPixels_U0_reps_out_write,
        if_dout => reps_c_dout,
        if_empty_n => reps_c_empty_n,
        if_read => StreamingDataWidthCo_U0_numReps_read);

    in_stream0_V_V_U : component fifo_w192_d1024_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => StreamingDataWidthCo_U0_out_V_V_din,
        if_full_n => in_stream0_V_V_full_n,
        if_write => StreamingDataWidthCo_U0_out_V_V_write,
        if_dout => in_stream0_V_V_dout,
        if_empty_n => in_stream0_V_V_empty_n,
        if_read => StreamingDataWidthCo_1_U0_in_V_V_read);

    reps_c1_U : component fifo_w32_d2_A_x7
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => StreamingDataWidthCo_U0_numReps_out_din,
        if_full_n => reps_c1_full_n,
        if_write => StreamingDataWidthCo_U0_numReps_out_write,
        if_dout => reps_c1_dout,
        if_empty_n => reps_c1_empty_n,
        if_read => StreamingDataWidthCo_1_U0_numReps_read);

    in_stream1_V_V_U : component fifo_w24_d16_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => StreamingDataWidthCo_1_U0_out_V_V_din,
        if_full_n => in_stream1_V_V_full_n,
        if_write => StreamingDataWidthCo_1_U0_out_V_V_write,
        if_dout => in_stream1_V_V_dout,
        if_empty_n => in_stream1_V_V_empty_n,
        if_read => resize_batch_U0_in_V_V_read);

    reps_c2_U : component fifo_w32_d2_A_x7
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => StreamingDataWidthCo_1_U0_numReps_out_din,
        if_full_n => reps_c2_full_n,
        if_write => StreamingDataWidthCo_1_U0_numReps_out_write,
        if_dout => reps_c2_dout,
        if_empty_n => reps_c2_empty_n,
        if_read => resize_batch_U0_reps_read);

    in_stream2_V_V_U : component fifo_w24_d16_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => resize_batch_U0_out_V_V_din,
        if_full_n => in_stream2_V_V_full_n,
        if_write => resize_batch_U0_out_V_V_write,
        if_dout => in_stream2_V_V_dout,
        if_empty_n => in_stream2_V_V_empty_n,
        if_read => conv3x3_l0_bn_act_DS_U0_in_V_V_read);

    reps_c3_U : component fifo_w32_d2_A_x7
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => resize_batch_U0_reps_out_din,
        if_full_n => reps_c3_full_n,
        if_write => resize_batch_U0_reps_out_write,
        if_dout => reps_c3_dout,
        if_empty_n => reps_c3_empty_n,
        if_read => conv3x3_l0_bn_act_DS_U0_reps_read);

    conv_0_out_V_V_U : component fifo_w128_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv3x3_l0_bn_act_DS_U0_out_V_V_din,
        if_full_n => conv_0_out_V_V_full_n,
        if_write => conv3x3_l0_bn_act_DS_U0_out_V_V_write,
        if_dout => conv_0_out_V_V_dout,
        if_empty_n => conv_0_out_V_V_empty_n,
        if_read => max_pool2x2_3_U0_vec_V_V_read);

    reps_c4_U : component fifo_w32_d2_A_x7
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv3x3_l0_bn_act_DS_U0_reps_out_din,
        if_full_n => reps_c4_full_n,
        if_write => conv3x3_l0_bn_act_DS_U0_reps_out_write,
        if_dout => reps_c4_dout,
        if_empty_n => reps_c4_empty_n,
        if_read => max_pool2x2_3_U0_reps_read);

    pool_0_out_V_V_U : component fifo_w128_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => max_pool2x2_3_U0_out_V_V_din,
        if_full_n => pool_0_out_V_V_full_n,
        if_write => max_pool2x2_3_U0_out_V_V_write,
        if_dout => pool_0_out_V_V_dout,
        if_empty_n => pool_0_out_V_V_empty_n,
        if_read => conv3x3_bn_act_DSPop_U0_in_V_V_read);

    reps_c5_U : component fifo_w32_d2_A_x7
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => max_pool2x2_3_U0_reps_out_din,
        if_full_n => reps_c5_full_n,
        if_write => max_pool2x2_3_U0_reps_out_write,
        if_dout => reps_c5_dout,
        if_empty_n => reps_c5_empty_n,
        if_read => conv3x3_bn_act_DSPop_U0_reps_read);

    conv_1_out_V_V_U : component fifo_w32_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv3x3_bn_act_DSPop_U0_out_V_V_din,
        if_full_n => conv_1_out_V_V_full_n,
        if_write => conv3x3_bn_act_DSPop_U0_out_V_V_write,
        if_dout => conv_1_out_V_V_dout,
        if_empty_n => conv_1_out_V_V_empty_n,
        if_read => max_pool2x2_U0_vec_V_V_read);

    reps_c6_U : component fifo_w32_d2_A_x7
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv3x3_bn_act_DSPop_U0_reps_out_din,
        if_full_n => reps_c6_full_n,
        if_write => conv3x3_bn_act_DSPop_U0_reps_out_write,
        if_dout => reps_c6_dout,
        if_empty_n => reps_c6_empty_n,
        if_read => max_pool2x2_U0_reps_read);

    pool_1_out_V_V_U : component fifo_w32_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => max_pool2x2_U0_out_V_V_din,
        if_full_n => pool_1_out_V_V_full_n,
        if_write => max_pool2x2_U0_out_V_V_write,
        if_dout => pool_1_out_V_V_dout,
        if_empty_n => pool_1_out_V_V_empty_n,
        if_read => conv3x3_bn_act_DSPop_1_U0_in_V_V_read);

    reps_c7_U : component fifo_w32_d2_A_x7
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => max_pool2x2_U0_reps_out_din,
        if_full_n => reps_c7_full_n,
        if_write => max_pool2x2_U0_reps_out_write,
        if_dout => reps_c7_dout,
        if_empty_n => reps_c7_empty_n,
        if_read => conv3x3_bn_act_DSPop_1_U0_reps_read);

    conv_2_out_V_V_U : component fifo_w64_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv3x3_bn_act_DSPop_1_U0_out_V_V_din,
        if_full_n => conv_2_out_V_V_full_n,
        if_write => conv3x3_bn_act_DSPop_1_U0_out_V_V_write,
        if_dout => conv_2_out_V_V_dout,
        if_empty_n => conv_2_out_V_V_empty_n,
        if_read => max_pool2x2_1_U0_vec_V_V_read);

    reps_c8_U : component fifo_w32_d2_A_x7
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv3x3_bn_act_DSPop_1_U0_reps_out_din,
        if_full_n => reps_c8_full_n,
        if_write => conv3x3_bn_act_DSPop_1_U0_reps_out_write,
        if_dout => reps_c8_dout,
        if_empty_n => reps_c8_empty_n,
        if_read => max_pool2x2_1_U0_reps_read);

    pool_2_out_V_V_U : component fifo_w64_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => max_pool2x2_1_U0_out_V_V_din,
        if_full_n => pool_2_out_V_V_full_n,
        if_write => max_pool2x2_1_U0_out_V_V_write,
        if_dout => pool_2_out_V_V_dout,
        if_empty_n => pool_2_out_V_V_empty_n,
        if_read => conv3x3_bn_act_DSPop_2_U0_in_V_V_read);

    reps_c9_U : component fifo_w32_d2_A_x7
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => max_pool2x2_1_U0_reps_out_din,
        if_full_n => reps_c9_full_n,
        if_write => max_pool2x2_1_U0_reps_out_write,
        if_dout => reps_c9_dout,
        if_empty_n => reps_c9_empty_n,
        if_read => conv3x3_bn_act_DSPop_2_U0_reps_read);

    conv_3_out_V_V_U : component fifo_w32_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv3x3_bn_act_DSPop_2_U0_out_V_V_din,
        if_full_n => conv_3_out_V_V_full_n,
        if_write => conv3x3_bn_act_DSPop_2_U0_out_V_V_write,
        if_dout => conv_3_out_V_V_dout,
        if_empty_n => conv_3_out_V_V_empty_n,
        if_read => max_pool2x2_2_U0_vec_V_V_read);

    reps_c10_U : component fifo_w32_d2_A_x7
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv3x3_bn_act_DSPop_2_U0_reps_out_din,
        if_full_n => reps_c10_full_n,
        if_write => conv3x3_bn_act_DSPop_2_U0_reps_out_write,
        if_dout => reps_c10_dout,
        if_empty_n => reps_c10_empty_n,
        if_read => max_pool2x2_2_U0_reps_read);

    pool_3_out_V_V_U : component fifo_w32_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => max_pool2x2_2_U0_out_V_V_din,
        if_full_n => pool_3_out_V_V_full_n,
        if_write => max_pool2x2_2_U0_out_V_V_write,
        if_dout => pool_3_out_V_V_dout,
        if_empty_n => pool_3_out_V_V_empty_n,
        if_read => conv3x3_bn_act_DSPop_4_U0_in_V_V_read);

    reps_c11_U : component fifo_w32_d2_A_x7
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => max_pool2x2_2_U0_reps_out_din,
        if_full_n => reps_c11_full_n,
        if_write => max_pool2x2_2_U0_reps_out_write,
        if_dout => reps_c11_dout,
        if_empty_n => reps_c11_empty_n,
        if_read => conv3x3_bn_act_DSPop_4_U0_reps_read);

    conv_4_out_V_V_U : component fifo_w16_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv3x3_bn_act_DSPop_4_U0_out_V_V_din,
        if_full_n => conv_4_out_V_V_full_n,
        if_write => conv3x3_bn_act_DSPop_4_U0_out_V_V_write,
        if_dout => conv_4_out_V_V_dout,
        if_empty_n => conv_4_out_V_V_empty_n,
        if_read => conv3x3_bn_act_DSPop_6_U0_in_V_V_read);

    reps_c12_U : component fifo_w32_d2_A_x7
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv3x3_bn_act_DSPop_4_U0_reps_out_din,
        if_full_n => reps_c12_full_n,
        if_write => conv3x3_bn_act_DSPop_4_U0_reps_out_write,
        if_dout => reps_c12_dout,
        if_empty_n => reps_c12_empty_n,
        if_read => conv3x3_bn_act_DSPop_6_U0_reps_read);

    conv_5_out_V_V_U : component fifo_w16_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv3x3_bn_act_DSPop_6_U0_out_V_V_din,
        if_full_n => conv_5_out_V_V_full_n,
        if_write => conv3x3_bn_act_DSPop_6_U0_out_V_V_write,
        if_dout => conv_5_out_V_V_dout,
        if_empty_n => conv_5_out_V_V_empty_n,
        if_read => conv3x3_bn_act_DSPop_5_U0_in_V_V_read);

    reps_c13_U : component fifo_w32_d2_A_x7
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv3x3_bn_act_DSPop_6_U0_reps_out_din,
        if_full_n => reps_c13_full_n,
        if_write => conv3x3_bn_act_DSPop_6_U0_reps_out_write,
        if_dout => reps_c13_dout,
        if_empty_n => reps_c13_empty_n,
        if_read => conv3x3_bn_act_DSPop_5_U0_reps_read);

    conv_6_out_V_V_U : component fifo_w16_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv3x3_bn_act_DSPop_5_U0_out_V_V_din,
        if_full_n => conv_6_out_V_V_full_n,
        if_write => conv3x3_bn_act_DSPop_5_U0_out_V_V_write,
        if_dout => conv_6_out_V_V_dout,
        if_empty_n => conv_6_out_V_V_empty_n,
        if_read => conv3x3_bn_act_DSPop_3_U0_in_V_V_read);

    reps_c14_U : component fifo_w32_d2_A_x7
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv3x3_bn_act_DSPop_5_U0_reps_out_din,
        if_full_n => reps_c14_full_n,
        if_write => conv3x3_bn_act_DSPop_5_U0_reps_out_write,
        if_dout => reps_c14_dout,
        if_empty_n => reps_c14_empty_n,
        if_read => conv3x3_bn_act_DSPop_3_U0_reps_read);

    conv_7_out_V_V_U : component fifo_w16_d128_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv3x3_bn_act_DSPop_3_U0_out_V_V_din,
        if_full_n => conv_7_out_V_V_full_n,
        if_write => conv3x3_bn_act_DSPop_3_U0_out_V_V_write,
        if_dout => conv_7_out_V_V_dout,
        if_empty_n => conv_7_out_V_V_empty_n,
        if_read => conv1x1_DSPopt_U0_in_V_V_read);

    reps_c15_U : component fifo_w32_d2_A_x7
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv3x3_bn_act_DSPop_3_U0_reps_out_din,
        if_full_n => reps_c15_full_n,
        if_write => conv3x3_bn_act_DSPop_3_U0_reps_out_write,
        if_dout => reps_c15_dout,
        if_empty_n => reps_c15_empty_n,
        if_read => conv1x1_DSPopt_U0_reps_read);

    conv_8_out_V_V_U : component fifo_w64_d64_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv1x1_DSPopt_U0_out_V_V_din,
        if_full_n => conv_8_out_V_V_full_n,
        if_write => conv1x1_DSPopt_U0_out_V_V_write,
        if_dout => conv_8_out_V_V_dout,
        if_empty_n => conv_8_out_V_V_empty_n,
        if_read => AddLast_3600u_U0_in_V_V_read);

    reps_c16_U : component fifo_w32_d2_A_x7
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv1x1_DSPopt_U0_reps_out_din,
        if_full_n => reps_c16_full_n,
        if_write => conv1x1_DSPopt_U0_reps_out_write,
        if_dout => reps_c16_dout,
        if_empty_n => reps_c16_empty_n,
        if_read => AddLast_3600u_U0_reps_read);

    start_for_StreamidYM_U : component start_for_StreamidYM
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_StreamingDataWidthCo_U0_din,
        if_full_n => start_for_StreamingDataWidthCo_U0_full_n,
        if_write => ExtractPixels_U0_start_write,
        if_dout => start_for_StreamingDataWidthCo_U0_dout,
        if_empty_n => start_for_StreamingDataWidthCo_U0_empty_n,
        if_read => StreamingDataWidthCo_U0_ap_ready);

    start_for_StreamidZM_U : component start_for_StreamidZM
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_StreamingDataWidthCo_1_U0_din,
        if_full_n => start_for_StreamingDataWidthCo_1_U0_full_n,
        if_write => StreamingDataWidthCo_U0_start_write,
        if_dout => start_for_StreamingDataWidthCo_1_U0_dout,
        if_empty_n => start_for_StreamingDataWidthCo_1_U0_empty_n,
        if_read => StreamingDataWidthCo_1_U0_ap_ready);

    start_for_resize_d0M_U : component start_for_resize_d0M
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_resize_batch_U0_din,
        if_full_n => start_for_resize_batch_U0_full_n,
        if_write => StreamingDataWidthCo_1_U0_start_write,
        if_dout => start_for_resize_batch_U0_dout,
        if_empty_n => start_for_resize_batch_U0_empty_n,
        if_read => resize_batch_U0_ap_ready);

    start_for_conv3x3d1M_U : component start_for_conv3x3d1M
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_conv3x3_l0_bn_act_DS_U0_din,
        if_full_n => start_for_conv3x3_l0_bn_act_DS_U0_full_n,
        if_write => resize_batch_U0_start_write,
        if_dout => start_for_conv3x3_l0_bn_act_DS_U0_dout,
        if_empty_n => start_for_conv3x3_l0_bn_act_DS_U0_empty_n,
        if_read => conv3x3_l0_bn_act_DS_U0_ap_ready);

    start_for_max_pood2M_U : component start_for_max_pood2M
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_max_pool2x2_3_U0_din,
        if_full_n => start_for_max_pool2x2_3_U0_full_n,
        if_write => conv3x3_l0_bn_act_DS_U0_start_write,
        if_dout => start_for_max_pool2x2_3_U0_dout,
        if_empty_n => start_for_max_pool2x2_3_U0_empty_n,
        if_read => max_pool2x2_3_U0_ap_ready);

    start_for_conv3x3d3M_U : component start_for_conv3x3d3M
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_conv3x3_bn_act_DSPop_U0_din,
        if_full_n => start_for_conv3x3_bn_act_DSPop_U0_full_n,
        if_write => max_pool2x2_3_U0_start_write,
        if_dout => start_for_conv3x3_bn_act_DSPop_U0_dout,
        if_empty_n => start_for_conv3x3_bn_act_DSPop_U0_empty_n,
        if_read => conv3x3_bn_act_DSPop_U0_ap_ready);

    start_for_max_pood4N_U : component start_for_max_pood4N
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_max_pool2x2_U0_din,
        if_full_n => start_for_max_pool2x2_U0_full_n,
        if_write => conv3x3_bn_act_DSPop_U0_start_write,
        if_dout => start_for_max_pool2x2_U0_dout,
        if_empty_n => start_for_max_pool2x2_U0_empty_n,
        if_read => max_pool2x2_U0_ap_ready);

    start_for_conv3x3d5N_U : component start_for_conv3x3d5N
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_conv3x3_bn_act_DSPop_1_U0_din,
        if_full_n => start_for_conv3x3_bn_act_DSPop_1_U0_full_n,
        if_write => max_pool2x2_U0_start_write,
        if_dout => start_for_conv3x3_bn_act_DSPop_1_U0_dout,
        if_empty_n => start_for_conv3x3_bn_act_DSPop_1_U0_empty_n,
        if_read => conv3x3_bn_act_DSPop_1_U0_ap_ready);

    start_for_max_pood6N_U : component start_for_max_pood6N
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_max_pool2x2_1_U0_din,
        if_full_n => start_for_max_pool2x2_1_U0_full_n,
        if_write => conv3x3_bn_act_DSPop_1_U0_start_write,
        if_dout => start_for_max_pool2x2_1_U0_dout,
        if_empty_n => start_for_max_pool2x2_1_U0_empty_n,
        if_read => max_pool2x2_1_U0_ap_ready);

    start_for_conv3x3d7N_U : component start_for_conv3x3d7N
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_conv3x3_bn_act_DSPop_2_U0_din,
        if_full_n => start_for_conv3x3_bn_act_DSPop_2_U0_full_n,
        if_write => max_pool2x2_1_U0_start_write,
        if_dout => start_for_conv3x3_bn_act_DSPop_2_U0_dout,
        if_empty_n => start_for_conv3x3_bn_act_DSPop_2_U0_empty_n,
        if_read => conv3x3_bn_act_DSPop_2_U0_ap_ready);

    start_for_max_pood8N_U : component start_for_max_pood8N
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_max_pool2x2_2_U0_din,
        if_full_n => start_for_max_pool2x2_2_U0_full_n,
        if_write => conv3x3_bn_act_DSPop_2_U0_start_write,
        if_dout => start_for_max_pool2x2_2_U0_dout,
        if_empty_n => start_for_max_pool2x2_2_U0_empty_n,
        if_read => max_pool2x2_2_U0_ap_ready);

    start_for_conv3x3d9N_U : component start_for_conv3x3d9N
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_conv3x3_bn_act_DSPop_4_U0_din,
        if_full_n => start_for_conv3x3_bn_act_DSPop_4_U0_full_n,
        if_write => max_pool2x2_2_U0_start_write,
        if_dout => start_for_conv3x3_bn_act_DSPop_4_U0_dout,
        if_empty_n => start_for_conv3x3_bn_act_DSPop_4_U0_empty_n,
        if_read => conv3x3_bn_act_DSPop_4_U0_ap_ready);

    start_for_conv3x3eaO_U : component start_for_conv3x3eaO
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_conv3x3_bn_act_DSPop_6_U0_din,
        if_full_n => start_for_conv3x3_bn_act_DSPop_6_U0_full_n,
        if_write => conv3x3_bn_act_DSPop_4_U0_start_write,
        if_dout => start_for_conv3x3_bn_act_DSPop_6_U0_dout,
        if_empty_n => start_for_conv3x3_bn_act_DSPop_6_U0_empty_n,
        if_read => conv3x3_bn_act_DSPop_6_U0_ap_ready);

    start_for_conv3x3ebO_U : component start_for_conv3x3ebO
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_conv3x3_bn_act_DSPop_5_U0_din,
        if_full_n => start_for_conv3x3_bn_act_DSPop_5_U0_full_n,
        if_write => conv3x3_bn_act_DSPop_6_U0_start_write,
        if_dout => start_for_conv3x3_bn_act_DSPop_5_U0_dout,
        if_empty_n => start_for_conv3x3_bn_act_DSPop_5_U0_empty_n,
        if_read => conv3x3_bn_act_DSPop_5_U0_ap_ready);

    start_for_conv3x3ecO_U : component start_for_conv3x3ecO
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_conv3x3_bn_act_DSPop_3_U0_din,
        if_full_n => start_for_conv3x3_bn_act_DSPop_3_U0_full_n,
        if_write => conv3x3_bn_act_DSPop_5_U0_start_write,
        if_dout => start_for_conv3x3_bn_act_DSPop_3_U0_dout,
        if_empty_n => start_for_conv3x3_bn_act_DSPop_3_U0_empty_n,
        if_read => conv3x3_bn_act_DSPop_3_U0_ap_ready);

    start_for_conv1x1edO_U : component start_for_conv1x1edO
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_conv1x1_DSPopt_U0_din,
        if_full_n => start_for_conv1x1_DSPopt_U0_full_n,
        if_write => conv3x3_bn_act_DSPop_3_U0_start_write,
        if_dout => start_for_conv1x1_DSPopt_U0_dout,
        if_empty_n => start_for_conv1x1_DSPopt_U0_empty_n,
        if_read => conv1x1_DSPopt_U0_ap_ready);

    start_for_AddLasteeO_U : component start_for_AddLasteeO
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_AddLast_3600u_U0_din,
        if_full_n => start_for_AddLast_3600u_U0_full_n,
        if_write => conv1x1_DSPopt_U0_start_write,
        if_dout => start_for_AddLast_3600u_U0_dout,
        if_empty_n => start_for_AddLast_3600u_U0_empty_n,
        if_read => AddLast_3600u_U0_ap_ready);




    AddLast_3600u_U0_ap_continue <= ap_continue;
    AddLast_3600u_U0_ap_start <= start_for_AddLast_3600u_U0_empty_n;
    AddLast_3600u_U0_start_full_n <= ap_const_logic_1;
    AddLast_3600u_U0_start_write <= ap_const_logic_0;
    ExtractPixels_U0_ap_continue <= ap_const_logic_1;
    ExtractPixels_U0_ap_start <= ap_start;
    StreamingDataWidthCo_1_U0_ap_continue <= ap_const_logic_1;
    StreamingDataWidthCo_1_U0_ap_start <= start_for_StreamingDataWidthCo_1_U0_empty_n;
    StreamingDataWidthCo_U0_ap_continue <= ap_const_logic_1;
    StreamingDataWidthCo_U0_ap_start <= start_for_StreamingDataWidthCo_U0_empty_n;
    ap_done <= AddLast_3600u_U0_ap_done;
    ap_idle <= (resize_batch_U0_ap_idle and max_pool2x2_U0_ap_idle and max_pool2x2_3_U0_ap_idle and max_pool2x2_2_U0_ap_idle and max_pool2x2_1_U0_ap_idle and conv3x3_l0_bn_act_DS_U0_ap_idle and conv3x3_bn_act_DSPop_U0_ap_idle and conv3x3_bn_act_DSPop_6_U0_ap_idle and conv3x3_bn_act_DSPop_5_U0_ap_idle and conv3x3_bn_act_DSPop_4_U0_ap_idle and conv3x3_bn_act_DSPop_3_U0_ap_idle and conv3x3_bn_act_DSPop_2_U0_ap_idle and conv3x3_bn_act_DSPop_1_U0_ap_idle and conv1x1_DSPopt_U0_ap_idle and StreamingDataWidthCo_U0_ap_idle and StreamingDataWidthCo_1_U0_ap_idle and ExtractPixels_U0_ap_idle and AddLast_3600u_U0_ap_idle);
    ap_ready <= ExtractPixels_U0_ap_ready;
    ap_sync_continue <= ap_continue;
    ap_sync_done <= AddLast_3600u_U0_ap_done;
    ap_sync_ready <= ExtractPixels_U0_ap_ready;
    conv1x1_DSPopt_U0_ap_continue <= ap_const_logic_1;
    conv1x1_DSPopt_U0_ap_start <= start_for_conv1x1_DSPopt_U0_empty_n;
    conv3x3_bn_act_DSPop_1_U0_ap_continue <= ap_const_logic_1;
    conv3x3_bn_act_DSPop_1_U0_ap_start <= start_for_conv3x3_bn_act_DSPop_1_U0_empty_n;
    conv3x3_bn_act_DSPop_2_U0_ap_continue <= ap_const_logic_1;
    conv3x3_bn_act_DSPop_2_U0_ap_start <= start_for_conv3x3_bn_act_DSPop_2_U0_empty_n;
    conv3x3_bn_act_DSPop_3_U0_ap_continue <= ap_const_logic_1;
    conv3x3_bn_act_DSPop_3_U0_ap_start <= start_for_conv3x3_bn_act_DSPop_3_U0_empty_n;
    conv3x3_bn_act_DSPop_4_U0_ap_continue <= ap_const_logic_1;
    conv3x3_bn_act_DSPop_4_U0_ap_start <= start_for_conv3x3_bn_act_DSPop_4_U0_empty_n;
    conv3x3_bn_act_DSPop_5_U0_ap_continue <= ap_const_logic_1;
    conv3x3_bn_act_DSPop_5_U0_ap_start <= start_for_conv3x3_bn_act_DSPop_5_U0_empty_n;
    conv3x3_bn_act_DSPop_6_U0_ap_continue <= ap_const_logic_1;
    conv3x3_bn_act_DSPop_6_U0_ap_start <= start_for_conv3x3_bn_act_DSPop_6_U0_empty_n;
    conv3x3_bn_act_DSPop_U0_ap_continue <= ap_const_logic_1;
    conv3x3_bn_act_DSPop_U0_ap_start <= start_for_conv3x3_bn_act_DSPop_U0_empty_n;
    conv3x3_l0_bn_act_DS_U0_ap_continue <= ap_const_logic_1;
    conv3x3_l0_bn_act_DS_U0_ap_start <= start_for_conv3x3_l0_bn_act_DS_U0_empty_n;
    in_r_TREADY <= ExtractPixels_U0_in_r_TREADY;
    max_pool2x2_1_U0_ap_continue <= ap_const_logic_1;
    max_pool2x2_1_U0_ap_start <= start_for_max_pool2x2_1_U0_empty_n;
    max_pool2x2_2_U0_ap_continue <= ap_const_logic_1;
    max_pool2x2_2_U0_ap_start <= start_for_max_pool2x2_2_U0_empty_n;
    max_pool2x2_3_U0_ap_continue <= ap_const_logic_1;
    max_pool2x2_3_U0_ap_start <= start_for_max_pool2x2_3_U0_empty_n;
    max_pool2x2_U0_ap_continue <= ap_const_logic_1;
    max_pool2x2_U0_ap_start <= start_for_max_pool2x2_U0_empty_n;
    out_r_TDATA <= AddLast_3600u_U0_out_r_TDATA;
    out_r_TKEEP <= AddLast_3600u_U0_out_r_TKEEP;
    out_r_TLAST <= AddLast_3600u_U0_out_r_TLAST;
    out_r_TVALID <= AddLast_3600u_U0_out_r_TVALID;
    resize_batch_U0_ap_continue <= ap_const_logic_1;
    resize_batch_U0_ap_start <= start_for_resize_batch_U0_empty_n;
    start_for_AddLast_3600u_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_StreamingDataWidthCo_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_StreamingDataWidthCo_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_conv1x1_DSPopt_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_conv3x3_bn_act_DSPop_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_conv3x3_bn_act_DSPop_2_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_conv3x3_bn_act_DSPop_3_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_conv3x3_bn_act_DSPop_4_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_conv3x3_bn_act_DSPop_5_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_conv3x3_bn_act_DSPop_6_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_conv3x3_bn_act_DSPop_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_conv3x3_l0_bn_act_DS_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_max_pool2x2_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_max_pool2x2_2_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_max_pool2x2_3_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_max_pool2x2_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_resize_batch_U0_din <= (0=>ap_const_logic_1, others=>'-');
end behav;
