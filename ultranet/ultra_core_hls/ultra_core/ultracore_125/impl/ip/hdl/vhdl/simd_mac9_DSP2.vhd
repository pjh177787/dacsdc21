-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity simd_mac9_DSP2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    invec_0_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    invec_1_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    invec_2_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    invec_3_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    invec_4_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    invec_5_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    invec_6_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    invec_7_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    invec_8_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    w0vec_0_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    w0vec_1_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    w0vec_2_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    w0vec_3_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    w0vec_4_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    w0vec_5_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    w0vec_6_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    w0vec_7_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    w0vec_8_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    w1vec_0_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    w1vec_1_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    w1vec_2_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    w1vec_3_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    w1vec_4_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    w1vec_5_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    w1vec_6_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    w1vec_7_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    w1vec_8_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (19 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (19 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of simd_mac9_DSP2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";

    signal w1vec_8_V_read_1_reg_680 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal w0vec_8_V_read_1_reg_685 : STD_LOGIC_VECTOR (7 downto 0);
    signal invec_8_V_read_1_reg_690 : STD_LOGIC_VECTOR (7 downto 0);
    signal invec_8_V_read_1_reg_690_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal invec_7_V_read_1_reg_695 : STD_LOGIC_VECTOR (7 downto 0);
    signal invec_6_V_read_1_reg_700 : STD_LOGIC_VECTOR (7 downto 0);
    signal invec_5_V_read_1_reg_705 : STD_LOGIC_VECTOR (7 downto 0);
    signal invec_4_V_read_1_reg_710 : STD_LOGIC_VECTOR (7 downto 0);
    signal invec_3_V_read_2_reg_715 : STD_LOGIC_VECTOR (7 downto 0);
    signal invec_2_V_read_2_reg_720 : STD_LOGIC_VECTOR (7 downto 0);
    signal invec_1_V_read_2_reg_725 : STD_LOGIC_VECTOR (7 downto 0);
    signal invec_0_V_read_2_reg_730 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln68_fu_246_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln68_reg_735 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln68_4_fu_264_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln68_4_reg_740 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln68_5_fu_282_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln68_5_reg_745 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln68_6_fu_300_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln68_6_reg_750 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln68_7_fu_318_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln68_7_reg_755 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln68_8_fu_336_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln68_8_reg_760 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln68_9_fu_354_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln68_9_reg_765 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln68_10_fu_372_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln68_10_reg_770 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_ln1352_fu_624_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1352_reg_775 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1352_4_fu_630_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1352_4_reg_780 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1352_5_fu_636_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1352_5_reg_785 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1352_6_fu_642_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1352_6_reg_790 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1352_7_fu_648_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1352_7_reg_795 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1352_8_fu_654_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1352_8_reg_800 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1352_9_fu_661_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1352_9_reg_805 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1352_10_fu_667_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1352_10_reg_810 : STD_LOGIC_VECTOR (35 downto 0);
    signal trunc_ln700_1_fu_426_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln700_1_reg_815 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln700_1_reg_815_pp0_iter2_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln68_11_fu_439_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln68_11_reg_820 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln700_fu_505_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln700_reg_825 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln700_2_fu_535_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln700_2_reg_830 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln700_8_fu_539_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal add_ln700_8_reg_835 : STD_LOGIC_VECTOR (38 downto 0);
    signal mul_ln1352_11_fu_673_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1352_11_reg_840 : STD_LOGIC_VECTOR (35 downto 0);
    signal trunc_ln700_3_fu_551_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln700_3_reg_845 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal shl_ln_fu_234_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln68_fu_242_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln68_4_fu_252_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln68_1_fu_260_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln68_5_fu_270_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln68_2_fu_278_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln68_6_fu_288_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln68_3_fu_296_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln68_7_fu_306_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln68_4_fu_314_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln68_8_fu_324_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln68_5_fu_332_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln68_9_fu_342_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln68_6_fu_350_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln68_s_fu_360_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln68_7_fu_368_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln68_1_fu_429_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln68_8_fu_436_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln215_4_fu_445_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal sext_ln700_fu_448_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal add_ln700_fu_451_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal sext_ln68_11_fu_461_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal sext_ln700_2_fu_464_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal add_ln700_3_fu_467_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal sext_ln700_3_fu_473_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal sext_ln700_1_fu_457_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal add_ln700_4_fu_483_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal add_ln700_12_fu_477_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal sext_ln700_4_fu_489_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal sext_ln700_5_fu_496_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal sext_ln68_12_fu_493_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal sext_ln700_6_fu_502_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal add_ln700_6_fu_515_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal sext_ln700_7_fu_521_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal sext_ln68_13_fu_499_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal add_ln700_7_fu_525_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal sext_ln700_8_fu_531_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal add_ln700_5_fu_509_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal add_ln700_10_fu_554_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln700_9_fu_563_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal sext_ln68_10_fu_566_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal add_ln700_11_fu_558_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln700_9_fu_569_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal add_ln647_fu_575_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_fu_594_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_584_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln78_fu_602_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln647_fu_580_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln78_fu_606_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal mul_ln1352_fu_624_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1352_4_fu_630_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1352_5_fu_636_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1352_6_fu_642_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1352_7_fu_648_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1352_8_fu_654_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1352_9_fu_661_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1352_10_fu_667_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1352_11_fu_673_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal invec_0_V_read_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal invec_1_V_read_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal invec_2_V_read_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal invec_3_V_read_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal invec_4_V_read_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal invec_5_V_read_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal invec_6_V_read_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal invec_7_V_read_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal invec_8_V_read_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal w0vec_0_V_read_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal w0vec_1_V_read_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal w0vec_2_V_read_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal w0vec_3_V_read_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal w0vec_4_V_read_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal w0vec_5_V_read_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal w0vec_6_V_read_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal w0vec_7_V_read_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal w0vec_8_V_read_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal w1vec_0_V_read_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal w1vec_1_V_read_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal w1vec_2_V_read_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal w1vec_3_V_read_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal w1vec_4_V_read_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal w1vec_5_V_read_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal w1vec_6_V_read_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal w1vec_7_V_read_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal w1vec_8_V_read_int_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_return_0_int_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_return_1_int_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal mul_ln1352_10_fu_667_p10 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1352_11_fu_673_p10 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1352_4_fu_630_p10 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1352_5_fu_636_p10 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1352_6_fu_642_p10 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1352_7_fu_648_p10 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1352_8_fu_654_p10 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1352_9_fu_661_p10 : STD_LOGIC_VECTOR (35 downto 0);
    signal mul_ln1352_fu_624_p10 : STD_LOGIC_VECTOR (35 downto 0);

    component ultra_net_mul_multde IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (27 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;



begin
    ultra_net_mul_multde_U104 : component ultra_net_mul_multde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 8,
        dout_WIDTH => 36)
    port map (
        din0 => add_ln68_reg_735,
        din1 => mul_ln1352_fu_624_p1,
        dout => mul_ln1352_fu_624_p2);

    ultra_net_mul_multde_U105 : component ultra_net_mul_multde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 8,
        dout_WIDTH => 36)
    port map (
        din0 => add_ln68_4_reg_740,
        din1 => mul_ln1352_4_fu_630_p1,
        dout => mul_ln1352_4_fu_630_p2);

    ultra_net_mul_multde_U106 : component ultra_net_mul_multde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 8,
        dout_WIDTH => 36)
    port map (
        din0 => add_ln68_5_reg_745,
        din1 => mul_ln1352_5_fu_636_p1,
        dout => mul_ln1352_5_fu_636_p2);

    ultra_net_mul_multde_U107 : component ultra_net_mul_multde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 8,
        dout_WIDTH => 36)
    port map (
        din0 => add_ln68_6_reg_750,
        din1 => mul_ln1352_6_fu_642_p1,
        dout => mul_ln1352_6_fu_642_p2);

    ultra_net_mul_multde_U108 : component ultra_net_mul_multde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 8,
        dout_WIDTH => 36)
    port map (
        din0 => add_ln68_7_reg_755,
        din1 => mul_ln1352_7_fu_648_p1,
        dout => mul_ln1352_7_fu_648_p2);

    ultra_net_mul_multde_U109 : component ultra_net_mul_multde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 8,
        dout_WIDTH => 36)
    port map (
        din0 => add_ln68_8_reg_760,
        din1 => mul_ln1352_8_fu_654_p1,
        dout => mul_ln1352_8_fu_654_p2);

    ultra_net_mul_multde_U110 : component ultra_net_mul_multde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 8,
        dout_WIDTH => 36)
    port map (
        din0 => add_ln68_9_reg_765,
        din1 => mul_ln1352_9_fu_661_p1,
        dout => mul_ln1352_9_fu_661_p2);

    ultra_net_mul_multde_U111 : component ultra_net_mul_multde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 8,
        dout_WIDTH => 36)
    port map (
        din0 => add_ln68_10_reg_770,
        din1 => mul_ln1352_10_fu_667_p1,
        dout => mul_ln1352_10_fu_667_p2);

    ultra_net_mul_multde_U112 : component ultra_net_mul_multde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 28,
        din1_WIDTH => 8,
        dout_WIDTH => 36)
    port map (
        din0 => add_ln68_11_reg_820,
        din1 => mul_ln1352_11_fu_673_p1,
        dout => mul_ln1352_11_fu_673_p2);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then
                add_ln68_10_reg_770 <= add_ln68_10_fu_372_p2;
                add_ln68_11_reg_820 <= add_ln68_11_fu_439_p2;
                add_ln68_4_reg_740 <= add_ln68_4_fu_264_p2;
                add_ln68_5_reg_745 <= add_ln68_5_fu_282_p2;
                add_ln68_6_reg_750 <= add_ln68_6_fu_300_p2;
                add_ln68_7_reg_755 <= add_ln68_7_fu_318_p2;
                add_ln68_8_reg_760 <= add_ln68_8_fu_336_p2;
                add_ln68_9_reg_765 <= add_ln68_9_fu_354_p2;
                add_ln68_reg_735 <= add_ln68_fu_246_p2;
                add_ln700_8_reg_835 <= add_ln700_8_fu_539_p2;
                invec_0_V_read_2_reg_730 <= invec_0_V_read_int_reg;
                invec_1_V_read_2_reg_725 <= invec_1_V_read_int_reg;
                invec_2_V_read_2_reg_720 <= invec_2_V_read_int_reg;
                invec_3_V_read_2_reg_715 <= invec_3_V_read_int_reg;
                invec_4_V_read_1_reg_710 <= invec_4_V_read_int_reg;
                invec_5_V_read_1_reg_705 <= invec_5_V_read_int_reg;
                invec_6_V_read_1_reg_700 <= invec_6_V_read_int_reg;
                invec_7_V_read_1_reg_695 <= invec_7_V_read_int_reg;
                invec_8_V_read_1_reg_690 <= invec_8_V_read_int_reg;
                invec_8_V_read_1_reg_690_pp0_iter1_reg <= invec_8_V_read_1_reg_690;
                mul_ln1352_10_reg_810 <= mul_ln1352_10_fu_667_p2;
                mul_ln1352_11_reg_840 <= mul_ln1352_11_fu_673_p2;
                mul_ln1352_4_reg_780 <= mul_ln1352_4_fu_630_p2;
                mul_ln1352_5_reg_785 <= mul_ln1352_5_fu_636_p2;
                mul_ln1352_6_reg_790 <= mul_ln1352_6_fu_642_p2;
                mul_ln1352_7_reg_795 <= mul_ln1352_7_fu_648_p2;
                mul_ln1352_8_reg_800 <= mul_ln1352_8_fu_654_p2;
                mul_ln1352_9_reg_805 <= mul_ln1352_9_fu_661_p2;
                mul_ln1352_reg_775 <= mul_ln1352_fu_624_p2;
                trunc_ln700_1_reg_815 <= trunc_ln700_1_fu_426_p1;
                trunc_ln700_1_reg_815_pp0_iter2_reg <= trunc_ln700_1_reg_815;
                trunc_ln700_2_reg_830 <= trunc_ln700_2_fu_535_p1;
                trunc_ln700_3_reg_845 <= trunc_ln700_3_fu_551_p1;
                trunc_ln700_reg_825 <= trunc_ln700_fu_505_p1;
                w0vec_8_V_read_1_reg_685 <= w0vec_8_V_read_int_reg;
                w1vec_8_V_read_1_reg_680 <= w1vec_8_V_read_int_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_0_int_reg <= trunc_ln647_fu_580_p1;
                ap_return_1_int_reg <= add_ln78_fu_606_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                invec_0_V_read_int_reg <= invec_0_V_read;
                invec_1_V_read_int_reg <= invec_1_V_read;
                invec_2_V_read_int_reg <= invec_2_V_read;
                invec_3_V_read_int_reg <= invec_3_V_read;
                invec_4_V_read_int_reg <= invec_4_V_read;
                invec_5_V_read_int_reg <= invec_5_V_read;
                invec_6_V_read_int_reg <= invec_6_V_read;
                invec_7_V_read_int_reg <= invec_7_V_read;
                invec_8_V_read_int_reg <= invec_8_V_read;
                w0vec_0_V_read_int_reg <= w0vec_0_V_read;
                w0vec_1_V_read_int_reg <= w0vec_1_V_read;
                w0vec_2_V_read_int_reg <= w0vec_2_V_read;
                w0vec_3_V_read_int_reg <= w0vec_3_V_read;
                w0vec_4_V_read_int_reg <= w0vec_4_V_read;
                w0vec_5_V_read_int_reg <= w0vec_5_V_read;
                w0vec_6_V_read_int_reg <= w0vec_6_V_read;
                w0vec_7_V_read_int_reg <= w0vec_7_V_read;
                w0vec_8_V_read_int_reg <= w0vec_8_V_read;
                w1vec_0_V_read_int_reg <= w1vec_0_V_read;
                w1vec_1_V_read_int_reg <= w1vec_1_V_read;
                w1vec_2_V_read_int_reg <= w1vec_2_V_read;
                w1vec_3_V_read_int_reg <= w1vec_3_V_read;
                w1vec_4_V_read_int_reg <= w1vec_4_V_read;
                w1vec_5_V_read_int_reg <= w1vec_5_V_read;
                w1vec_6_V_read_int_reg <= w1vec_6_V_read;
                w1vec_7_V_read_int_reg <= w1vec_7_V_read;
                w1vec_8_V_read_int_reg <= w1vec_8_V_read;
            end if;
        end if;
    end process;
    add_ln647_fu_575_p2 <= std_logic_vector(unsigned(add_ln700_11_fu_558_p2) + unsigned(trunc_ln700_3_reg_845));
    add_ln68_10_fu_372_p2 <= std_logic_vector(unsigned(shl_ln68_s_fu_360_p3) + unsigned(sext_ln68_7_fu_368_p1));
    add_ln68_11_fu_439_p2 <= std_logic_vector(unsigned(shl_ln68_1_fu_429_p3) + unsigned(sext_ln68_8_fu_436_p1));
    add_ln68_4_fu_264_p2 <= std_logic_vector(unsigned(shl_ln68_4_fu_252_p3) + unsigned(sext_ln68_1_fu_260_p1));
    add_ln68_5_fu_282_p2 <= std_logic_vector(unsigned(shl_ln68_5_fu_270_p3) + unsigned(sext_ln68_2_fu_278_p1));
    add_ln68_6_fu_300_p2 <= std_logic_vector(unsigned(shl_ln68_6_fu_288_p3) + unsigned(sext_ln68_3_fu_296_p1));
    add_ln68_7_fu_318_p2 <= std_logic_vector(unsigned(shl_ln68_7_fu_306_p3) + unsigned(sext_ln68_4_fu_314_p1));
    add_ln68_8_fu_336_p2 <= std_logic_vector(unsigned(shl_ln68_8_fu_324_p3) + unsigned(sext_ln68_5_fu_332_p1));
    add_ln68_9_fu_354_p2 <= std_logic_vector(unsigned(shl_ln68_9_fu_342_p3) + unsigned(sext_ln68_6_fu_350_p1));
    add_ln68_fu_246_p2 <= std_logic_vector(unsigned(shl_ln_fu_234_p3) + unsigned(sext_ln68_fu_242_p1));
    add_ln700_10_fu_554_p2 <= std_logic_vector(unsigned(trunc_ln700_1_reg_815_pp0_iter2_reg) + unsigned(trunc_ln700_reg_825));
    add_ln700_11_fu_558_p2 <= std_logic_vector(unsigned(add_ln700_10_fu_554_p2) + unsigned(trunc_ln700_2_reg_830));
    add_ln700_12_fu_477_p2 <= std_logic_vector(signed(add_ln700_fu_451_p2) + signed(add_ln700_3_fu_467_p2));
    add_ln700_3_fu_467_p2 <= std_logic_vector(signed(sext_ln68_11_fu_461_p1) + signed(sext_ln700_2_fu_464_p1));
    add_ln700_4_fu_483_p2 <= std_logic_vector(signed(sext_ln700_3_fu_473_p1) + signed(sext_ln700_1_fu_457_p1));
    add_ln700_5_fu_509_p2 <= std_logic_vector(signed(sext_ln700_4_fu_489_p1) + signed(sext_ln700_5_fu_496_p1));
    add_ln700_6_fu_515_p2 <= std_logic_vector(signed(sext_ln68_12_fu_493_p1) + signed(sext_ln700_6_fu_502_p1));
    add_ln700_7_fu_525_p2 <= std_logic_vector(signed(sext_ln700_7_fu_521_p1) + signed(sext_ln68_13_fu_499_p1));
    add_ln700_8_fu_539_p2 <= std_logic_vector(signed(sext_ln700_8_fu_531_p1) + signed(add_ln700_5_fu_509_p2));
    add_ln700_9_fu_569_p2 <= std_logic_vector(signed(sext_ln700_9_fu_563_p1) + signed(sext_ln68_10_fu_566_p1));
    add_ln700_fu_451_p2 <= std_logic_vector(signed(sext_ln215_4_fu_445_p1) + signed(sext_ln700_fu_448_p1));
    add_ln78_fu_606_p2 <= std_logic_vector(unsigned(p_Result_s_fu_584_p4) + unsigned(zext_ln78_fu_602_p1));
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_0_assign_proc : process(trunc_ln647_fu_580_p1, ap_ce_reg, ap_return_0_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_0 <= ap_return_0_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_0 <= trunc_ln647_fu_580_p1;
        end if; 
    end process;


    ap_return_1_assign_proc : process(add_ln78_fu_606_p2, ap_ce_reg, ap_return_1_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_1 <= ap_return_1_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_1 <= add_ln78_fu_606_p2;
        end if; 
    end process;

    mul_ln1352_10_fu_667_p1 <= mul_ln1352_10_fu_667_p10(8 - 1 downto 0);
    mul_ln1352_10_fu_667_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(invec_7_V_read_1_reg_695),36));
    mul_ln1352_11_fu_673_p1 <= mul_ln1352_11_fu_673_p10(8 - 1 downto 0);
    mul_ln1352_11_fu_673_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(invec_8_V_read_1_reg_690_pp0_iter1_reg),36));
    mul_ln1352_4_fu_630_p1 <= mul_ln1352_4_fu_630_p10(8 - 1 downto 0);
    mul_ln1352_4_fu_630_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(invec_1_V_read_2_reg_725),36));
    mul_ln1352_5_fu_636_p1 <= mul_ln1352_5_fu_636_p10(8 - 1 downto 0);
    mul_ln1352_5_fu_636_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(invec_2_V_read_2_reg_720),36));
    mul_ln1352_6_fu_642_p1 <= mul_ln1352_6_fu_642_p10(8 - 1 downto 0);
    mul_ln1352_6_fu_642_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(invec_3_V_read_2_reg_715),36));
    mul_ln1352_7_fu_648_p1 <= mul_ln1352_7_fu_648_p10(8 - 1 downto 0);
    mul_ln1352_7_fu_648_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(invec_4_V_read_1_reg_710),36));
    mul_ln1352_8_fu_654_p1 <= mul_ln1352_8_fu_654_p10(8 - 1 downto 0);
    mul_ln1352_8_fu_654_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(invec_5_V_read_1_reg_705),36));
    mul_ln1352_9_fu_661_p1 <= mul_ln1352_9_fu_661_p10(8 - 1 downto 0);
    mul_ln1352_9_fu_661_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(invec_6_V_read_1_reg_700),36));
    mul_ln1352_fu_624_p1 <= mul_ln1352_fu_624_p10(8 - 1 downto 0);
    mul_ln1352_fu_624_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(invec_0_V_read_2_reg_730),36));
    p_Result_s_fu_584_p4 <= add_ln700_9_fu_569_p2(39 downto 20);
        sext_ln215_4_fu_445_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_reg_775),37));

        sext_ln68_10_fu_566_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_11_reg_840),40));

        sext_ln68_11_fu_461_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_5_reg_785),37));

        sext_ln68_12_fu_493_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_7_reg_795),37));

        sext_ln68_13_fu_499_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_9_reg_805),38));

        sext_ln68_1_fu_260_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(w0vec_1_V_read_int_reg),28));

        sext_ln68_2_fu_278_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(w0vec_2_V_read_int_reg),28));

        sext_ln68_3_fu_296_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(w0vec_3_V_read_int_reg),28));

        sext_ln68_4_fu_314_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(w0vec_4_V_read_int_reg),28));

        sext_ln68_5_fu_332_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(w0vec_5_V_read_int_reg),28));

        sext_ln68_6_fu_350_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(w0vec_6_V_read_int_reg),28));

        sext_ln68_7_fu_368_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(w0vec_7_V_read_int_reg),28));

        sext_ln68_8_fu_436_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(w0vec_8_V_read_1_reg_685),28));

        sext_ln68_fu_242_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(w0vec_0_V_read_int_reg),28));

        sext_ln700_1_fu_457_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln700_fu_451_p2),38));

        sext_ln700_2_fu_464_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_6_reg_790),37));

        sext_ln700_3_fu_473_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln700_3_fu_467_p2),38));

        sext_ln700_4_fu_489_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln700_4_fu_483_p2),39));

        sext_ln700_5_fu_496_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_8_reg_800),39));

        sext_ln700_6_fu_502_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_10_reg_810),37));

        sext_ln700_7_fu_521_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln700_6_fu_515_p2),38));

        sext_ln700_8_fu_531_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln700_7_fu_525_p2),39));

        sext_ln700_9_fu_563_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln700_8_reg_835),40));

        sext_ln700_fu_448_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_4_reg_780),37));

    shl_ln68_1_fu_429_p3 <= (w1vec_8_V_read_1_reg_680 & ap_const_lv20_0);
    shl_ln68_4_fu_252_p3 <= (w1vec_1_V_read_int_reg & ap_const_lv20_0);
    shl_ln68_5_fu_270_p3 <= (w1vec_2_V_read_int_reg & ap_const_lv20_0);
    shl_ln68_6_fu_288_p3 <= (w1vec_3_V_read_int_reg & ap_const_lv20_0);
    shl_ln68_7_fu_306_p3 <= (w1vec_4_V_read_int_reg & ap_const_lv20_0);
    shl_ln68_8_fu_324_p3 <= (w1vec_5_V_read_int_reg & ap_const_lv20_0);
    shl_ln68_9_fu_342_p3 <= (w1vec_6_V_read_int_reg & ap_const_lv20_0);
    shl_ln68_s_fu_360_p3 <= (w1vec_7_V_read_int_reg & ap_const_lv20_0);
    shl_ln_fu_234_p3 <= (w1vec_0_V_read_int_reg & ap_const_lv20_0);
    tmp_fu_594_p3 <= add_ln647_fu_575_p2(19 downto 19);
    trunc_ln647_fu_580_p1 <= add_ln700_9_fu_569_p2(20 - 1 downto 0);
    trunc_ln700_1_fu_426_p1 <= mul_ln1352_8_fu_654_p2(20 - 1 downto 0);
    trunc_ln700_2_fu_535_p1 <= add_ln700_7_fu_525_p2(20 - 1 downto 0);
    trunc_ln700_3_fu_551_p1 <= mul_ln1352_11_fu_673_p2(20 - 1 downto 0);
    trunc_ln700_fu_505_p1 <= add_ln700_12_fu_477_p2(20 - 1 downto 0);
    zext_ln78_fu_602_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_594_p3),20));
end behav;
