-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity convDSPOpt_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    vec_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    vec_V_V_empty_n : IN STD_LOGIC;
    vec_V_V_read : OUT STD_LOGIC;
    out_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_V_V_full_n : IN STD_LOGIC;
    out_V_V_write : OUT STD_LOGIC;
    reps_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    reps_empty_n : IN STD_LOGIC;
    reps_read : OUT STD_LOGIC );
end;


architecture behav of convDSPOpt_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv47_0 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv47_1 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000000000001";
    constant ap_const_lv16_4200 : STD_LOGIC_VECTOR (15 downto 0) := "0100001000000000";
    constant ap_const_lv6_30 : STD_LOGIC_VECTOR (5 downto 0) := "110000";
    constant ap_const_lv10_210 : STD_LOGIC_VECTOR (9 downto 0) := "1000010000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv21_4000 : STD_LOGIC_VECTOR (20 downto 0) := "000000100000000000000";
    constant ap_const_lv22_4000 : STD_LOGIC_VECTOR (21 downto 0) := "0000000100000000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv6_2F : STD_LOGIC_VECTOR (5 downto 0) := "101111";
    constant ap_const_lv12_114 : STD_LOGIC_VECTOR (11 downto 0) := "000100010100";
    constant ap_const_lv21_4E9D5 : STD_LOGIC_VECTOR (20 downto 0) := "001001110100111010101";
    constant ap_const_lv21_529D5 : STD_LOGIC_VECTOR (20 downto 0) := "001010010100111010101";
    constant ap_const_lv12_38E : STD_LOGIC_VECTOR (11 downto 0) := "001110001110";
    constant ap_const_lv22_3EC5F9 : STD_LOGIC_VECTOR (21 downto 0) := "1111101100010111111001";
    constant ap_const_lv22_3F05F9 : STD_LOGIC_VECTOR (21 downto 0) := "1111110000010111111001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal conv_7_inc_new_V_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_7_inc_new_V_0_ce0 : STD_LOGIC;
    signal conv_7_inc_new_V_0_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv_7_inc_new_V_0_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_7_inc_new_V_0_ce1 : STD_LOGIC;
    signal conv_7_inc_new_V_0_q1 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv_7_bias_new_V_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_7_bias_new_V_0_ce0 : STD_LOGIC;
    signal conv_7_bias_new_V_0_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal conv_7_bias_new_V_0_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_7_bias_new_V_0_ce1 : STD_LOGIC;
    signal conv_7_bias_new_V_0_q1 : STD_LOGIC_VECTOR (20 downto 0);
    signal conv_7_inc_new_V_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_7_inc_new_V_1_ce0 : STD_LOGIC;
    signal conv_7_inc_new_V_1_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv_7_inc_new_V_1_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_7_inc_new_V_1_ce1 : STD_LOGIC;
    signal conv_7_inc_new_V_1_q1 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv_7_bias_new_V_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_7_bias_new_V_1_ce0 : STD_LOGIC;
    signal conv_7_bias_new_V_1_q0 : STD_LOGIC_VECTOR (21 downto 0);
    signal conv_7_bias_new_V_1_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_7_bias_new_V_1_ce1 : STD_LOGIC;
    signal conv_7_bias_new_V_1_q1 : STD_LOGIC_VECTOR (21 downto 0);
    signal conv_7_w_new_V_0_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_7_w_new_V_0_2_ce0 : STD_LOGIC;
    signal conv_7_w_new_V_0_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_7_w_new_V_0_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_7_w_new_V_0_1_ce0 : STD_LOGIC;
    signal conv_7_w_new_V_0_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_7_w_new_V_0_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_7_w_new_V_0_0_ce0 : STD_LOGIC;
    signal conv_7_w_new_V_0_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_7_w_new_V_1_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_7_w_new_V_1_2_ce0 : STD_LOGIC;
    signal conv_7_w_new_V_1_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_7_w_new_V_1_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_7_w_new_V_1_1_ce0 : STD_LOGIC;
    signal conv_7_w_new_V_1_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_7_w_new_V_1_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_7_w_new_V_1_0_ce0 : STD_LOGIC;
    signal conv_7_w_new_V_1_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal vec_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln392_reg_2603 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln392_reg_2603_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal o_out_reg_2748 : STD_LOGIC_VECTOR (0 downto 0);
    signal o_out_reg_2748_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal reps_blk_n : STD_LOGIC;
    signal indvar_flatten145_reg_431 : STD_LOGIC_VECTOR (46 downto 0);
    signal indvar_flatten33_reg_442 : STD_LOGIC_VECTOR (15 downto 0);
    signal peIdx_0_i_reg_453 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten_reg_464 : STD_LOGIC_VECTOR (9 downto 0);
    signal infoldIdx_0_i_reg_475 : STD_LOGIC_VECTOR (5 downto 0);
    signal w_0_i_reg_486 : STD_LOGIC_VECTOR (4 downto 0);
    signal reps_read_reg_2566 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal bound46_fu_537_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal bound46_reg_2572 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal trunc_ln404_fu_543_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln404_reg_2577 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln392_fu_555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln392_reg_2603_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln392_reg_2603_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln392_reg_2603_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln392_reg_2603_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln392_6_fu_560_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal icmp_ln393_fu_566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln393_reg_2612 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln393_reg_2612_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln393_fu_580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln393_reg_2623 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln393_22_fu_604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln393_22_reg_2628 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln393_22_reg_2628_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal peIdx_fu_610_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal peIdx_reg_2639 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln393_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln393_reg_2644 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln404_6_fu_622_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln404_6_reg_2649 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln393_6_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln393_6_reg_2655 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln393_24_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln393_24_reg_2660 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln393_133_fu_644_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln399_fu_664_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln399_reg_2671 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln399_reg_2671_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln399_reg_2671_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln399_reg_2671_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln399_reg_2671_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal infoldIdx_fu_672_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln394_6_fu_684_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln393_134_fu_698_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_7_inc_new_V_0_l_reg_2693 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal conv_7_bias_new_V_0_1_reg_2698 : STD_LOGIC_VECTOR (20 downto 0);
    signal conv_7_inc_new_V_1_l_reg_2703 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv_7_bias_new_V_1_1_reg_2708 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln1353_fu_734_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln1353_reg_2713 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln1353_28_fu_740_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln1353_28_reg_2718 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln394_fu_837_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal o_out_fu_852_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal o_out_reg_2748_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal o_out_reg_2748_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal o_out_reg_2748_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal o_out_reg_2748_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal o_out_reg_2748_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln393_127_fu_914_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_127_reg_2782 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_127_reg_2782_pp0_iter3_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_127_reg_2782_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_127_reg_2782_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_128_fu_921_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_128_reg_2787 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_128_reg_2787_pp0_iter3_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_128_reg_2787_pp0_iter4_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_128_reg_2787_pp0_iter5_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_128_reg_2787_pp0_iter6_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_129_fu_934_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_129_reg_2792 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_129_reg_2792_pp0_iter3_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_129_reg_2792_pp0_iter4_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_129_reg_2792_pp0_iter5_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_129_reg_2792_pp0_iter6_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_130_fu_941_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_130_reg_2797 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_130_reg_2797_pp0_iter3_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_130_reg_2797_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_130_reg_2797_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_131_fu_948_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln393_131_reg_2802 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln393_131_reg_2802_pp0_iter3_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln393_131_reg_2802_pp0_iter4_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln393_131_reg_2802_pp0_iter5_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln393_131_reg_2802_pp0_iter6_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln393_132_fu_961_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln393_132_reg_2807 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln393_132_reg_2807_pp0_iter3_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln393_132_reg_2807_pp0_iter4_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln393_132_reg_2807_pp0_iter5_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln393_132_reg_2807_pp0_iter6_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln647_fu_968_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln647_reg_2812 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_78_i_i_reg_2817 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_1_i_i_reg_2822 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_78_1_i_i_reg_2827 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_2_i_i_reg_2832 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_78_2_i_i_reg_2837 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_3_i_i_reg_2842 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_78_3_i_i_reg_2847 : STD_LOGIC_VECTOR (3 downto 0);
    signal wpacks_0_0_V_fu_1088_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_0_V_reg_2852 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_1_V_fu_1158_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_1_V_reg_2857 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_2_V_fu_1228_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_2_V_reg_2862 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_3_V_fu_1298_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_3_V_reg_2867 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_0_V_fu_1350_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_0_V_reg_2872 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_1_V_fu_1420_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_1_V_reg_2877 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_2_V_fu_1490_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_2_V_reg_2882 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_3_V_fu_1560_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_3_V_reg_2887 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1352_fu_2438_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_reg_2892 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_41_fu_2445_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_41_reg_2897 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln700_fu_1612_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_reg_2902 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_102_fu_1615_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_102_reg_2907 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1352_42_fu_2452_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_42_reg_2912 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln700_103_fu_1625_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_103_reg_2917 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1352_43_fu_2459_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_43_reg_2922 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln700_104_fu_1635_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_104_reg_2927 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1352_44_fu_2466_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_44_reg_2932 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_45_fu_2473_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_45_reg_2937 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln700_105_fu_1644_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_105_reg_2942 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_106_fu_1647_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_106_reg_2947 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1352_46_fu_2480_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_46_reg_2952 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln700_107_fu_1653_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_107_reg_2957 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1352_47_fu_2487_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_47_reg_2962 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln700_108_fu_1659_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln700_108_reg_2967 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln700_fu_1668_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln700_reg_2972 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln700_115_fu_1684_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln700_115_reg_2978 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_74_reg_2984 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_79_fu_1714_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln700_79_reg_2989 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln700_123_fu_1730_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln700_123_reg_2995 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_77_reg_3001 : STD_LOGIC_VECTOR (0 downto 0);
    signal firPartialRes0_V_0_3_6_reg_3006 : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes0_V_1_3_6_reg_3011 : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes1_0_V_s_reg_3016 : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes1_1_V_s_reg_3021 : STD_LOGIC_VECTOR (17 downto 0);
    signal o_clear_fu_1778_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal o_clear_reg_3026 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln78_22_fu_1844_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln78_22_reg_3034 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_reg_3039 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_76_reg_3044 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln398_fu_1884_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln398_reg_3049 : STD_LOGIC_VECTOR (17 downto 0);
    signal outPartialArr0_0_V_fu_1898_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal outPartialArr0_0_V_reg_3054 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln78_25_fu_1965_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln78_25_reg_3059 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_s_reg_3064 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_79_reg_3069 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln398_4_fu_2005_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln398_4_reg_3074 : STD_LOGIC_VECTOR (17 downto 0);
    signal outPartialArr0_1_V_fu_2019_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal outPartialArr0_1_V_reg_3079 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_fu_2494_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal ret_V_reg_3084 : STD_LOGIC_VECTOR (29 downto 0);
    signal ret_V_85_fu_2500_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal ret_V_85_reg_3090 : STD_LOGIC_VECTOR (29 downto 0);
    signal ret_V_88_fu_2506_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal ret_V_88_reg_3096 : STD_LOGIC_VECTOR (29 downto 0);
    signal ret_V_91_fu_2512_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal ret_V_91_reg_3102 : STD_LOGIC_VECTOR (29 downto 0);
    signal res_V_fu_2235_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_reg_3108 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_17_fu_2297_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_17_reg_3113 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_18_fu_2359_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_18_reg_3118 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_19_fu_2421_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_19_reg_3123 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter1_state4 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal zext_ln458_fu_547_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln458_6_fu_806_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln404_4_fu_868_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal firPartialRes0_V_0_3_fu_202 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln398_17_fu_2080_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_sig_allocacmp_firPartialRes0_V_0_3_6 : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes0_V_1_3_fu_206 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln398_21_fu_2123_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_sig_allocacmp_firPartialRes0_V_1_3_6 : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes1_0_V_6_fu_210 : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes1_0_V_fu_2087_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_sig_allocacmp_firPartialRes1_0_V_s : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes1_1_V_6_fu_214 : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes1_1_V_fu_2130_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_sig_allocacmp_firPartialRes1_1_V_s : STD_LOGIC_VECTOR (17 downto 0);
    signal outPartialArr0_0_V_6_fu_218 : STD_LOGIC_VECTOR (17 downto 0);
    signal outPartialArr0_1_V_6_fu_222 : STD_LOGIC_VECTOR (17 downto 0);
    signal outPartialArr1_V_0_3_fu_226 : STD_LOGIC_VECTOR (17 downto 0);
    signal outPartialArr1_V_1_3_fu_230 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal shl_ln392_6_fu_502_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln392_fu_497_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_fu_507_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_104_fu_513_p3 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_105_fu_525_p3 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_shl232_fu_533_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal p_shl_fu_521_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal icmp_ln395_fu_586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln394_fu_598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln393_fu_572_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln393_6_fu_626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln393_21_fu_592_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln399_fu_652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln399_6_fu_658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln394_6_fu_678_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln393_6_fu_692_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_706_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln404_2_fu_717_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln404_fu_713_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln404_3_fu_724_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln404_fu_728_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln399_fu_753_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln404_mid1_fu_771_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln404_2_mid1_fu_782_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln404_15_fu_778_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln404_16_fu_789_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln404_6_fu_793_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_118_fu_746_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal and_ln393_fu_759_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln393_125_fu_764_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal w_fu_818_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln399_9_fu_824_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln393_23_fu_813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln399_2_fu_847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln399_6_fu_830_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln393_126_fu_799_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln395_fu_844_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln404_fu_858_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln404_fu_864_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln393_119_fu_878_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_120_fu_884_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln1353_57_fu_928_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_121_fu_890_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_122_fu_896_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_123_fu_902_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln1353_58_fu_955_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln393_124_fu_908_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln68_fu_1046_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln68_14_fu_1058_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln68_73_fu_1062_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln647_25_fu_1042_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln68_fu_1070_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln68_133_fu_1074_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln68_fu_1078_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln2_fu_1050_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln68_134_fu_1084_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_106_fu_1104_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_107_fu_1122_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln68_75_fu_1132_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Result_1_i8_i_fu_1094_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln68_135_fu_1140_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln68_136_fu_1144_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln68_47_fu_1148_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln68_74_fu_1114_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln68_137_fu_1154_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_108_fu_1174_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_109_fu_1192_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln68_77_fu_1202_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Result_2_i9_i_fu_1164_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln68_138_fu_1210_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln68_139_fu_1214_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln68_49_fu_1218_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln68_76_fu_1184_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln68_140_fu_1224_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_110_fu_1244_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_111_fu_1262_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln68_79_fu_1272_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Result_3_i10_i_fu_1234_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln68_141_fu_1280_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln68_142_fu_1284_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln68_51_fu_1288_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln68_78_fu_1254_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln68_143_fu_1294_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln68_15_fu_1308_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln68_16_fu_1320_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln68_81_fu_1324_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln647_26_fu_1304_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln68_144_fu_1332_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln68_145_fu_1336_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln68_53_fu_1340_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln68_80_fu_1312_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln68_146_fu_1346_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_112_fu_1366_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_113_fu_1384_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln68_s_fu_1394_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Result_1_i25_i_fu_1356_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln68_147_fu_1402_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln68_148_fu_1406_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln68_55_fu_1410_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln68_82_fu_1376_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln68_149_fu_1416_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_114_fu_1436_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_115_fu_1454_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln68_84_fu_1464_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Result_2_i35_i_fu_1426_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln68_150_fu_1472_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln68_151_fu_1476_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln68_57_fu_1480_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln68_83_fu_1446_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln68_152_fu_1486_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_116_fu_1506_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_117_fu_1524_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln68_86_fu_1534_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Result_3_i45_i_fu_1496_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln68_153_fu_1542_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln68_154_fu_1546_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln68_59_fu_1550_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln68_85_fu_1516_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln68_155_fu_1556_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal ipack_0_V_fu_1566_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ipack_1_V_fu_1574_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ipack_2_V_fu_1582_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ipack_3_V_fu_1590_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln700_fu_1665_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln215_51_fu_1662_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln700_83_fu_1674_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln700_84_fu_1681_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln700_119_fu_1690_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln700_114_fu_1677_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln700_120_fu_1694_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln700_86_fu_1711_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln215_56_fu_1708_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln700_88_fu_1720_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln700_89_fu_1727_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln700_127_fu_1736_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln700_122_fu_1723_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln700_128_fu_1740_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln700_85_fu_1786_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal sext_ln700_82_fu_1783_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal add_ln700_116_fu_1789_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal p_Result_i_i_i_i2_s_fu_1803_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln78_fu_1813_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_75_fu_1832_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_i_i_i_i4_s_fu_1822_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln78_22_fu_1840_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln700_75_fu_1793_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal trunc_ln647_27_fu_1799_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln78_fu_1816_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln398_fu_1876_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln68_157_fu_1872_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln398_16_fu_1890_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln68_156_fu_1868_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln700_90_fu_1907_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal sext_ln700_87_fu_1904_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal add_ln700_124_fu_1910_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal p_Result_i_i_i_i2_4_fu_1924_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln78_24_fu_1934_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_78_fu_1953_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_i_i_i_i4_4_fu_1943_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln78_25_fu_1961_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln700_81_fu_1914_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal trunc_ln647_28_fu_1920_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln78_24_fu_1937_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln398_19_fu_1997_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln68_161_fu_1993_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln398_20_fu_2011_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln68_160_fu_1989_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln647_fu_2051_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln78_23_fu_2054_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln78_23_fu_2057_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal firPartialRes0_0_V_fu_2063_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln68_159_fu_2066_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes0_0_V_6_fu_2070_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln700_78_fu_2075_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln647_12_fu_2094_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln78_26_fu_2097_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln78_26_fu_2100_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal firPartialRes0_1_V_fu_2106_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln68_163_fu_2109_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal firPartialRes0_1_V_6_fu_2113_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln700_84_fu_2118_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln393_fu_2169_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln1352_fu_2181_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal ret_V_94_fu_2184_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln393_19_fu_2172_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal ret_V_84_fu_2196_p2 : STD_LOGIC_VECTOR (29 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of ret_V_84_fu_2196_p2 : signal is "no";
    signal tmp_80_fu_2201_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln895_59_fu_2211_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln_fu_2217_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln895_fu_2190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln192_fu_2227_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1352_6_fu_2243_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal ret_V_95_fu_2246_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ret_V_87_fu_2258_p2 : STD_LOGIC_VECTOR (29 downto 0);
    attribute use_dsp48 of ret_V_87_fu_2258_p2 : signal is "no";
    signal tmp_81_fu_2263_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln895_60_fu_2273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln214_8_fu_2279_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln895_46_fu_2252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln192_8_fu_2289_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln393_20_fu_2175_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln1352_7_fu_2305_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal ret_V_96_fu_2308_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln393_21_fu_2178_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal ret_V_90_fu_2320_p2 : STD_LOGIC_VECTOR (29 downto 0);
    attribute use_dsp48 of ret_V_90_fu_2320_p2 : signal is "no";
    signal tmp_82_fu_2325_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln895_61_fu_2335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln214_9_fu_2341_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln895_48_fu_2314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln192_9_fu_2351_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1352_8_fu_2367_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal ret_V_97_fu_2370_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ret_V_93_fu_2382_p2 : STD_LOGIC_VECTOR (29 downto 0);
    attribute use_dsp48 of ret_V_93_fu_2382_p2 : signal is "no";
    signal tmp_83_fu_2387_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln895_62_fu_2397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln214_s_fu_2403_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln895_50_fu_2376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln192_10_fu_2413_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln1352_fu_2438_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln215_fu_1601_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_41_fu_2445_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln215_36_fu_1608_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_42_fu_2452_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln215_37_fu_1621_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_43_fu_2459_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln215_38_fu_1631_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal mul_ln1352_44_fu_2466_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1352_45_fu_2473_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1352_46_fu_2480_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln1352_47_fu_2487_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ret_V_fu_2494_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln393_fu_2045_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal ret_V_85_fu_2500_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_88_fu_2506_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln393_14_fu_2048_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal ret_V_91_fu_2512_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component ultra_net_mul_mulbml IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (25 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (40 downto 0) );
    end component;


    component ultra_net_mul_muldMK IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component convDSPOpt_1_convdCI IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component convDSPOpt_1_convdDI IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (20 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component convDSPOpt_1_convdEI IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component convDSPOpt_1_convdFJ IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component convDSPOpt_1_convdGJ IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component convDSPOpt_1_convdHJ IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component convDSPOpt_1_convdIJ IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component convDSPOpt_1_convdJJ IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component convDSPOpt_1_convdKJ IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component convDSPOpt_1_convdLJ IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    conv_7_inc_new_V_0_U : component convDSPOpt_1_convdCI
    generic map (
        DataWidth => 12,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_7_inc_new_V_0_address0,
        ce0 => conv_7_inc_new_V_0_ce0,
        q0 => conv_7_inc_new_V_0_q0,
        address1 => conv_7_inc_new_V_0_address1,
        ce1 => conv_7_inc_new_V_0_ce1,
        q1 => conv_7_inc_new_V_0_q1);

    conv_7_bias_new_V_0_U : component convDSPOpt_1_convdDI
    generic map (
        DataWidth => 21,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_7_bias_new_V_0_address0,
        ce0 => conv_7_bias_new_V_0_ce0,
        q0 => conv_7_bias_new_V_0_q0,
        address1 => conv_7_bias_new_V_0_address1,
        ce1 => conv_7_bias_new_V_0_ce1,
        q1 => conv_7_bias_new_V_0_q1);

    conv_7_inc_new_V_1_U : component convDSPOpt_1_convdEI
    generic map (
        DataWidth => 12,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_7_inc_new_V_1_address0,
        ce0 => conv_7_inc_new_V_1_ce0,
        q0 => conv_7_inc_new_V_1_q0,
        address1 => conv_7_inc_new_V_1_address1,
        ce1 => conv_7_inc_new_V_1_ce1,
        q1 => conv_7_inc_new_V_1_q1);

    conv_7_bias_new_V_1_U : component convDSPOpt_1_convdFJ
    generic map (
        DataWidth => 22,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_7_bias_new_V_1_address0,
        ce0 => conv_7_bias_new_V_1_ce0,
        q0 => conv_7_bias_new_V_1_q0,
        address1 => conv_7_bias_new_V_1_address1,
        ce1 => conv_7_bias_new_V_1_ce1,
        q1 => conv_7_bias_new_V_1_q1);

    conv_7_w_new_V_0_2_U : component convDSPOpt_1_convdGJ
    generic map (
        DataWidth => 16,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_7_w_new_V_0_2_address0,
        ce0 => conv_7_w_new_V_0_2_ce0,
        q0 => conv_7_w_new_V_0_2_q0);

    conv_7_w_new_V_0_1_U : component convDSPOpt_1_convdHJ
    generic map (
        DataWidth => 16,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_7_w_new_V_0_1_address0,
        ce0 => conv_7_w_new_V_0_1_ce0,
        q0 => conv_7_w_new_V_0_1_q0);

    conv_7_w_new_V_0_0_U : component convDSPOpt_1_convdIJ
    generic map (
        DataWidth => 16,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_7_w_new_V_0_0_address0,
        ce0 => conv_7_w_new_V_0_0_ce0,
        q0 => conv_7_w_new_V_0_0_q0);

    conv_7_w_new_V_1_2_U : component convDSPOpt_1_convdJJ
    generic map (
        DataWidth => 16,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_7_w_new_V_1_2_address0,
        ce0 => conv_7_w_new_V_1_2_ce0,
        q0 => conv_7_w_new_V_1_2_q0);

    conv_7_w_new_V_1_1_U : component convDSPOpt_1_convdKJ
    generic map (
        DataWidth => 16,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_7_w_new_V_1_1_address0,
        ce0 => conv_7_w_new_V_1_1_ce0,
        q0 => conv_7_w_new_V_1_1_q0);

    conv_7_w_new_V_1_0_U : component convDSPOpt_1_convdLJ
    generic map (
        DataWidth => 16,
        AddressRange => 1536,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_7_w_new_V_1_0_address0,
        ce0 => conv_7_w_new_V_1_0_ce0,
        q0 => conv_7_w_new_V_1_0_q0);

    ultra_net_mul_mulbml_U672 : component ultra_net_mul_mulbml
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 15,
        dout_WIDTH => 41)
    port map (
        din0 => wpacks_0_0_V_reg_2852,
        din1 => mul_ln1352_fu_2438_p1,
        dout => mul_ln1352_fu_2438_p2);

    ultra_net_mul_mulbml_U673 : component ultra_net_mul_mulbml
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 15,
        dout_WIDTH => 41)
    port map (
        din0 => wpacks_0_1_V_reg_2857,
        din1 => mul_ln1352_41_fu_2445_p1,
        dout => mul_ln1352_41_fu_2445_p2);

    ultra_net_mul_mulbml_U674 : component ultra_net_mul_mulbml
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 15,
        dout_WIDTH => 41)
    port map (
        din0 => wpacks_0_2_V_reg_2862,
        din1 => mul_ln1352_42_fu_2452_p1,
        dout => mul_ln1352_42_fu_2452_p2);

    ultra_net_mul_mulbml_U675 : component ultra_net_mul_mulbml
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 15,
        dout_WIDTH => 41)
    port map (
        din0 => wpacks_0_3_V_reg_2867,
        din1 => mul_ln1352_43_fu_2459_p1,
        dout => mul_ln1352_43_fu_2459_p2);

    ultra_net_mul_mulbml_U676 : component ultra_net_mul_mulbml
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 15,
        dout_WIDTH => 41)
    port map (
        din0 => wpacks_1_0_V_reg_2872,
        din1 => mul_ln1352_44_fu_2466_p1,
        dout => mul_ln1352_44_fu_2466_p2);

    ultra_net_mul_mulbml_U677 : component ultra_net_mul_mulbml
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 15,
        dout_WIDTH => 41)
    port map (
        din0 => wpacks_1_1_V_reg_2877,
        din1 => mul_ln1352_45_fu_2473_p1,
        dout => mul_ln1352_45_fu_2473_p2);

    ultra_net_mul_mulbml_U678 : component ultra_net_mul_mulbml
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 15,
        dout_WIDTH => 41)
    port map (
        din0 => wpacks_1_2_V_reg_2882,
        din1 => mul_ln1352_46_fu_2480_p1,
        dout => mul_ln1352_46_fu_2480_p2);

    ultra_net_mul_mulbml_U679 : component ultra_net_mul_mulbml
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 15,
        dout_WIDTH => 41)
    port map (
        din0 => wpacks_1_3_V_reg_2887,
        din1 => mul_ln1352_47_fu_2487_p1,
        dout => mul_ln1352_47_fu_2487_p2);

    ultra_net_mul_muldMK_U680 : component ultra_net_mul_muldMK
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 18,
        dout_WIDTH => 30)
    port map (
        din0 => ret_V_fu_2494_p0,
        din1 => outPartialArr0_0_V_reg_3054,
        dout => ret_V_fu_2494_p2);

    ultra_net_mul_muldMK_U681 : component ultra_net_mul_muldMK
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 18,
        dout_WIDTH => 30)
    port map (
        din0 => ret_V_85_fu_2500_p0,
        din1 => add_ln398_reg_3049,
        dout => ret_V_85_fu_2500_p2);

    ultra_net_mul_muldMK_U682 : component ultra_net_mul_muldMK
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 18,
        dout_WIDTH => 30)
    port map (
        din0 => ret_V_88_fu_2506_p0,
        din1 => outPartialArr0_1_V_reg_3079,
        dout => ret_V_88_fu_2506_p2);

    ultra_net_mul_muldMK_U683 : component ultra_net_mul_muldMK
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 18,
        dout_WIDTH => 30)
    port map (
        din0 => ret_V_91_fu_2512_p0,
        din1 => add_ln398_4_reg_3074,
        dout => ret_V_91_fu_2512_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln392_fu_555_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter1_state4)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten145_reg_431_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln392_fu_555_p2 = ap_const_lv1_0))) then 
                indvar_flatten145_reg_431 <= add_ln392_6_fu_560_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                indvar_flatten145_reg_431 <= ap_const_lv47_0;
            end if; 
        end if;
    end process;

    indvar_flatten33_reg_442_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln392_fu_555_p2 = ap_const_lv1_0))) then 
                indvar_flatten33_reg_442 <= select_ln393_134_fu_698_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                indvar_flatten33_reg_442 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_464_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln392_fu_555_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_464 <= select_ln394_6_fu_684_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                indvar_flatten_reg_464 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    infoldIdx_0_i_reg_475_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln392_fu_555_p2 = ap_const_lv1_0))) then 
                infoldIdx_0_i_reg_475 <= infoldIdx_fu_672_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                infoldIdx_0_i_reg_475 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    peIdx_0_i_reg_453_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln392_fu_555_p2 = ap_const_lv1_0))) then 
                peIdx_0_i_reg_453 <= select_ln393_133_fu_644_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                peIdx_0_i_reg_453 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    w_0_i_reg_486_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln392_reg_2603 = ap_const_lv1_0))) then 
                w_0_i_reg_486 <= select_ln394_fu_837_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                w_0_i_reg_486 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = and_ln393_22_reg_2628) and (icmp_ln393_reg_2612 = ap_const_lv1_0))) then
                add_ln1353_28_reg_2718 <= add_ln1353_28_fu_740_p2;
                add_ln1353_reg_2713 <= add_ln1353_fu_734_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln392_reg_2603_pp0_iter4_reg = ap_const_lv1_0))) then
                add_ln398_4_reg_3074 <= add_ln398_4_fu_2005_p2;
                add_ln398_reg_3049 <= add_ln398_fu_1884_p2;
                add_ln78_22_reg_3034 <= add_ln78_22_fu_1844_p2;
                add_ln78_25_reg_3059 <= add_ln78_25_fu_1965_p2;
                firPartialRes0_V_0_3_6_reg_3006 <= ap_sig_allocacmp_firPartialRes0_V_0_3_6;
                firPartialRes0_V_1_3_6_reg_3011 <= ap_sig_allocacmp_firPartialRes0_V_1_3_6;
                firPartialRes1_0_V_s_reg_3016 <= ap_sig_allocacmp_firPartialRes1_0_V_s;
                firPartialRes1_1_V_s_reg_3021 <= ap_sig_allocacmp_firPartialRes1_1_V_s;
                o_clear_reg_3026 <= o_clear_fu_1778_p2;
                outPartialArr0_0_V_reg_3054 <= outPartialArr0_0_V_fu_1898_p2;
                outPartialArr0_1_V_reg_3079 <= outPartialArr0_1_V_fu_2019_p2;
                tmp_76_reg_3044 <= add_ln700_116_fu_1789_p2(32 downto 32);
                tmp_79_reg_3069 <= add_ln700_124_fu_1910_p2(32 downto 32);
                tmp_reg_3039 <= add_ln700_75_fu_1793_p2(42 downto 33);
                tmp_s_reg_3064 <= add_ln700_81_fu_1914_p2(42 downto 33);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln392_reg_2603_pp0_iter3_reg = ap_const_lv1_0))) then
                add_ln700_115_reg_2978 <= add_ln700_115_fu_1684_p2;
                add_ln700_123_reg_2995 <= add_ln700_123_fu_1730_p2;
                add_ln700_79_reg_2989 <= add_ln700_79_fu_1714_p2;
                add_ln700_reg_2972 <= add_ln700_fu_1668_p2;
                tmp_74_reg_2984 <= add_ln700_120_fu_1694_p2(10 downto 10);
                tmp_77_reg_3001 <= add_ln700_128_fu_1740_p2(10 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln392_fu_555_p2 = ap_const_lv1_0))) then
                and_ln393_22_reg_2628 <= and_ln393_22_fu_604_p2;
                and_ln393_24_reg_2660 <= and_ln393_24_fu_638_p2;
                icmp_ln393_reg_2612 <= icmp_ln393_fu_566_p2;
                or_ln393_6_reg_2655 <= or_ln393_6_fu_632_p2;
                or_ln393_reg_2644 <= or_ln393_fu_616_p2;
                peIdx_reg_2639 <= peIdx_fu_610_p2;
                select_ln399_reg_2671 <= select_ln399_fu_664_p3;
                trunc_ln404_6_reg_2649 <= trunc_ln404_6_fu_622_p1;
                xor_ln393_reg_2623 <= xor_ln393_fu_580_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln393_22_reg_2628_pp0_iter1_reg <= and_ln393_22_reg_2628;
                icmp_ln392_reg_2603 <= icmp_ln392_fu_555_p2;
                icmp_ln392_reg_2603_pp0_iter1_reg <= icmp_ln392_reg_2603;
                icmp_ln393_reg_2612_pp0_iter1_reg <= icmp_ln393_reg_2612;
                select_ln399_reg_2671_pp0_iter1_reg <= select_ln399_reg_2671;
                trunc_ln404_reg_2577 <= trunc_ln404_fu_543_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    bound46_reg_2572(46 downto 10) <= bound46_fu_537_p2(46 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                conv_7_bias_new_V_0_1_reg_2698 <= conv_7_bias_new_V_0_q0;
                conv_7_bias_new_V_1_1_reg_2708 <= conv_7_bias_new_V_1_q0;
                conv_7_inc_new_V_0_l_reg_2693 <= conv_7_inc_new_V_0_q0;
                conv_7_inc_new_V_1_l_reg_2703 <= conv_7_inc_new_V_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln392_reg_2603_pp0_iter5_reg = ap_const_lv1_0))) then
                firPartialRes0_V_0_3_fu_202 <= select_ln398_17_fu_2080_p3;
                firPartialRes0_V_1_3_fu_206 <= select_ln398_21_fu_2123_p3;
                firPartialRes1_0_V_6_fu_210 <= firPartialRes1_0_V_fu_2087_p3;
                firPartialRes1_1_V_6_fu_214 <= firPartialRes1_1_V_fu_2130_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln392_reg_2603_pp0_iter2_reg <= icmp_ln392_reg_2603_pp0_iter1_reg;
                icmp_ln392_reg_2603_pp0_iter3_reg <= icmp_ln392_reg_2603_pp0_iter2_reg;
                icmp_ln392_reg_2603_pp0_iter4_reg <= icmp_ln392_reg_2603_pp0_iter3_reg;
                icmp_ln392_reg_2603_pp0_iter5_reg <= icmp_ln392_reg_2603_pp0_iter4_reg;
                o_out_reg_2748_pp0_iter2_reg <= o_out_reg_2748;
                o_out_reg_2748_pp0_iter3_reg <= o_out_reg_2748_pp0_iter2_reg;
                o_out_reg_2748_pp0_iter4_reg <= o_out_reg_2748_pp0_iter3_reg;
                o_out_reg_2748_pp0_iter5_reg <= o_out_reg_2748_pp0_iter4_reg;
                o_out_reg_2748_pp0_iter6_reg <= o_out_reg_2748_pp0_iter5_reg;
                o_out_reg_2748_pp0_iter7_reg <= o_out_reg_2748_pp0_iter6_reg;
                select_ln393_127_reg_2782_pp0_iter3_reg <= select_ln393_127_reg_2782;
                select_ln393_127_reg_2782_pp0_iter4_reg <= select_ln393_127_reg_2782_pp0_iter3_reg;
                select_ln393_127_reg_2782_pp0_iter5_reg <= select_ln393_127_reg_2782_pp0_iter4_reg;
                select_ln393_128_reg_2787_pp0_iter3_reg <= select_ln393_128_reg_2787;
                select_ln393_128_reg_2787_pp0_iter4_reg <= select_ln393_128_reg_2787_pp0_iter3_reg;
                select_ln393_128_reg_2787_pp0_iter5_reg <= select_ln393_128_reg_2787_pp0_iter4_reg;
                select_ln393_128_reg_2787_pp0_iter6_reg <= select_ln393_128_reg_2787_pp0_iter5_reg;
                select_ln393_129_reg_2792_pp0_iter3_reg <= select_ln393_129_reg_2792;
                select_ln393_129_reg_2792_pp0_iter4_reg <= select_ln393_129_reg_2792_pp0_iter3_reg;
                select_ln393_129_reg_2792_pp0_iter5_reg <= select_ln393_129_reg_2792_pp0_iter4_reg;
                select_ln393_129_reg_2792_pp0_iter6_reg <= select_ln393_129_reg_2792_pp0_iter5_reg;
                select_ln393_130_reg_2797_pp0_iter3_reg <= select_ln393_130_reg_2797;
                select_ln393_130_reg_2797_pp0_iter4_reg <= select_ln393_130_reg_2797_pp0_iter3_reg;
                select_ln393_130_reg_2797_pp0_iter5_reg <= select_ln393_130_reg_2797_pp0_iter4_reg;
                select_ln393_131_reg_2802_pp0_iter3_reg <= select_ln393_131_reg_2802;
                select_ln393_131_reg_2802_pp0_iter4_reg <= select_ln393_131_reg_2802_pp0_iter3_reg;
                select_ln393_131_reg_2802_pp0_iter5_reg <= select_ln393_131_reg_2802_pp0_iter4_reg;
                select_ln393_131_reg_2802_pp0_iter6_reg <= select_ln393_131_reg_2802_pp0_iter5_reg;
                select_ln393_132_reg_2807_pp0_iter3_reg <= select_ln393_132_reg_2807;
                select_ln393_132_reg_2807_pp0_iter4_reg <= select_ln393_132_reg_2807_pp0_iter3_reg;
                select_ln393_132_reg_2807_pp0_iter5_reg <= select_ln393_132_reg_2807_pp0_iter4_reg;
                select_ln393_132_reg_2807_pp0_iter6_reg <= select_ln393_132_reg_2807_pp0_iter5_reg;
                select_ln399_reg_2671_pp0_iter2_reg <= select_ln399_reg_2671_pp0_iter1_reg;
                select_ln399_reg_2671_pp0_iter3_reg <= select_ln399_reg_2671_pp0_iter2_reg;
                select_ln399_reg_2671_pp0_iter4_reg <= select_ln399_reg_2671_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln392_reg_2603_pp0_iter2_reg = ap_const_lv1_0))) then
                mul_ln1352_41_reg_2897 <= mul_ln1352_41_fu_2445_p2;
                mul_ln1352_42_reg_2912 <= mul_ln1352_42_fu_2452_p2;
                mul_ln1352_43_reg_2922 <= mul_ln1352_43_fu_2459_p2;
                mul_ln1352_44_reg_2932 <= mul_ln1352_44_fu_2466_p2;
                mul_ln1352_45_reg_2937 <= mul_ln1352_45_fu_2473_p2;
                mul_ln1352_46_reg_2952 <= mul_ln1352_46_fu_2480_p2;
                mul_ln1352_47_reg_2962 <= mul_ln1352_47_fu_2487_p2;
                mul_ln1352_reg_2892 <= mul_ln1352_fu_2438_p2;
                trunc_ln700_102_reg_2907 <= trunc_ln700_102_fu_1615_p1;
                trunc_ln700_103_reg_2917 <= trunc_ln700_103_fu_1625_p1;
                trunc_ln700_104_reg_2927 <= trunc_ln700_104_fu_1635_p1;
                trunc_ln700_105_reg_2942 <= trunc_ln700_105_fu_1644_p1;
                trunc_ln700_106_reg_2947 <= trunc_ln700_106_fu_1647_p1;
                trunc_ln700_107_reg_2957 <= trunc_ln700_107_fu_1653_p1;
                trunc_ln700_108_reg_2967 <= trunc_ln700_108_fu_1659_p1;
                trunc_ln700_reg_2902 <= trunc_ln700_fu_1612_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln392_reg_2603 = ap_const_lv1_0))) then
                o_out_reg_2748 <= o_out_fu_852_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln392_reg_2603_pp0_iter4_reg = ap_const_lv1_0))) then
                outPartialArr0_0_V_6_fu_218 <= outPartialArr0_0_V_fu_1898_p2;
                outPartialArr0_1_V_6_fu_222 <= outPartialArr0_1_V_fu_2019_p2;
                outPartialArr1_V_0_3_fu_226 <= add_ln398_fu_1884_p2;
                outPartialArr1_V_1_3_fu_230 <= add_ln398_4_fu_2005_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln392_reg_2603_pp0_iter1_reg = ap_const_lv1_0))) then
                p_Result_1_i_i_reg_2822 <= vec_V_V_dout(7 downto 4);
                p_Result_2_i_i_reg_2832 <= vec_V_V_dout(11 downto 8);
                p_Result_3_i_i_reg_2842 <= vec_V_V_dout(15 downto 12);
                p_Result_78_1_i_i_reg_2827 <= vec_V_V_dout(23 downto 20);
                p_Result_78_2_i_i_reg_2837 <= vec_V_V_dout(27 downto 24);
                p_Result_78_3_i_i_reg_2847 <= vec_V_V_dout(31 downto 28);
                p_Result_78_i_i_reg_2817 <= vec_V_V_dout(19 downto 16);
                select_ln393_127_reg_2782 <= select_ln393_127_fu_914_p3;
                select_ln393_128_reg_2787 <= select_ln393_128_fu_921_p3;
                select_ln393_129_reg_2792 <= select_ln393_129_fu_934_p3;
                select_ln393_130_reg_2797 <= select_ln393_130_fu_941_p3;
                select_ln393_131_reg_2802 <= select_ln393_131_fu_948_p3;
                select_ln393_132_reg_2807 <= select_ln393_132_fu_961_p3;
                trunc_ln647_reg_2812 <= trunc_ln647_fu_968_p1;
                wpacks_0_0_V_reg_2852 <= wpacks_0_0_V_fu_1088_p2;
                wpacks_0_1_V_reg_2857 <= wpacks_0_1_V_fu_1158_p2;
                wpacks_0_2_V_reg_2862 <= wpacks_0_2_V_fu_1228_p2;
                wpacks_0_3_V_reg_2867 <= wpacks_0_3_V_fu_1298_p2;
                wpacks_1_0_V_reg_2872 <= wpacks_1_0_V_fu_1350_p2;
                wpacks_1_1_V_reg_2877 <= wpacks_1_1_V_fu_1420_p2;
                wpacks_1_2_V_reg_2882 <= wpacks_1_2_V_fu_1490_p2;
                wpacks_1_3_V_reg_2887 <= wpacks_1_3_V_fu_1560_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (reps_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                reps_read_reg_2566 <= reps_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (o_out_reg_2748_pp0_iter6_reg = ap_const_lv1_1))) then
                res_V_17_reg_3113 <= res_V_17_fu_2297_p3;
                res_V_18_reg_3118 <= res_V_18_fu_2359_p3;
                res_V_19_reg_3123 <= res_V_19_fu_2421_p3;
                res_V_reg_3108 <= res_V_fu_2235_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (o_out_reg_2748_pp0_iter5_reg = ap_const_lv1_1))) then
                ret_V_85_reg_3090 <= ret_V_85_fu_2500_p2;
                ret_V_88_reg_3096 <= ret_V_88_fu_2506_p2;
                ret_V_91_reg_3102 <= ret_V_91_fu_2512_p2;
                ret_V_reg_3084 <= ret_V_fu_2494_p2;
            end if;
        end if;
    end process;
    bound46_reg_2572(9 downto 0) <= "0000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, reps_empty_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter7)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (reps_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln1353_28_fu_740_p2 <= std_logic_vector(unsigned(ap_const_lv22_4000) + unsigned(conv_7_bias_new_V_1_q0));
    add_ln1353_57_fu_928_p2 <= std_logic_vector(unsigned(ap_const_lv21_4000) + unsigned(conv_7_bias_new_V_0_q1));
    add_ln1353_58_fu_955_p2 <= std_logic_vector(unsigned(ap_const_lv22_4000) + unsigned(conv_7_bias_new_V_1_q1));
    add_ln1353_fu_734_p2 <= std_logic_vector(unsigned(ap_const_lv21_4000) + unsigned(conv_7_bias_new_V_0_q0));
    add_ln392_6_fu_560_p2 <= std_logic_vector(unsigned(ap_const_lv47_1) + unsigned(indvar_flatten145_reg_431));
    add_ln392_fu_507_p2 <= std_logic_vector(unsigned(shl_ln392_6_fu_502_p2) + unsigned(shl_ln392_fu_497_p2));
    add_ln393_6_fu_692_p2 <= std_logic_vector(unsigned(indvar_flatten33_reg_442) + unsigned(ap_const_lv16_1));
    add_ln394_6_fu_678_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_464) + unsigned(ap_const_lv10_1));
    add_ln398_4_fu_2005_p2 <= std_logic_vector(unsigned(select_ln398_19_fu_1997_p3) + unsigned(sext_ln68_161_fu_1993_p1));
    add_ln398_fu_1884_p2 <= std_logic_vector(unsigned(select_ln398_fu_1876_p3) + unsigned(sext_ln68_157_fu_1872_p1));
    add_ln404_fu_858_p2 <= std_logic_vector(unsigned(select_ln393_126_fu_799_p3) + unsigned(zext_ln395_fu_844_p1));
    add_ln68_47_fu_1148_p2 <= std_logic_vector(signed(sext_ln68_135_fu_1140_p1) + signed(sext_ln68_136_fu_1144_p1));
    add_ln68_49_fu_1218_p2 <= std_logic_vector(signed(sext_ln68_138_fu_1210_p1) + signed(sext_ln68_139_fu_1214_p1));
    add_ln68_51_fu_1288_p2 <= std_logic_vector(signed(sext_ln68_141_fu_1280_p1) + signed(sext_ln68_142_fu_1284_p1));
    add_ln68_53_fu_1340_p2 <= std_logic_vector(signed(sext_ln68_144_fu_1332_p1) + signed(sext_ln68_145_fu_1336_p1));
    add_ln68_55_fu_1410_p2 <= std_logic_vector(signed(sext_ln68_147_fu_1402_p1) + signed(sext_ln68_148_fu_1406_p1));
    add_ln68_57_fu_1480_p2 <= std_logic_vector(signed(sext_ln68_150_fu_1472_p1) + signed(sext_ln68_151_fu_1476_p1));
    add_ln68_59_fu_1550_p2 <= std_logic_vector(signed(sext_ln68_153_fu_1542_p1) + signed(sext_ln68_154_fu_1546_p1));
    add_ln68_fu_1078_p2 <= std_logic_vector(signed(sext_ln68_fu_1070_p1) + signed(sext_ln68_133_fu_1074_p1));
    add_ln700_114_fu_1677_p2 <= std_logic_vector(unsigned(trunc_ln700_reg_2902) + unsigned(trunc_ln700_102_reg_2907));
    add_ln700_115_fu_1684_p2 <= std_logic_vector(signed(sext_ln700_83_fu_1674_p1) + signed(sext_ln700_84_fu_1681_p1));
    add_ln700_116_fu_1789_p2 <= std_logic_vector(signed(add_ln700_reg_2972) + signed(add_ln700_115_reg_2978));
    add_ln700_119_fu_1690_p2 <= std_logic_vector(unsigned(trunc_ln700_103_reg_2917) + unsigned(trunc_ln700_104_reg_2927));
    add_ln700_120_fu_1694_p2 <= std_logic_vector(unsigned(add_ln700_119_fu_1690_p2) + unsigned(add_ln700_114_fu_1677_p2));
    add_ln700_122_fu_1723_p2 <= std_logic_vector(unsigned(trunc_ln700_105_reg_2942) + unsigned(trunc_ln700_106_reg_2947));
    add_ln700_123_fu_1730_p2 <= std_logic_vector(signed(sext_ln700_88_fu_1720_p1) + signed(sext_ln700_89_fu_1727_p1));
    add_ln700_124_fu_1910_p2 <= std_logic_vector(signed(add_ln700_79_reg_2989) + signed(add_ln700_123_reg_2995));
    add_ln700_127_fu_1736_p2 <= std_logic_vector(unsigned(trunc_ln700_107_reg_2957) + unsigned(trunc_ln700_108_reg_2967));
    add_ln700_128_fu_1740_p2 <= std_logic_vector(unsigned(add_ln700_127_fu_1736_p2) + unsigned(add_ln700_122_fu_1723_p2));
    add_ln700_75_fu_1793_p2 <= std_logic_vector(signed(sext_ln700_85_fu_1786_p1) + signed(sext_ln700_82_fu_1783_p1));
    add_ln700_78_fu_2075_p2 <= std_logic_vector(unsigned(firPartialRes1_0_V_s_reg_3016) + unsigned(sext_ln68_159_fu_2066_p1));
    add_ln700_79_fu_1714_p2 <= std_logic_vector(signed(sext_ln700_86_fu_1711_p1) + signed(sext_ln215_56_fu_1708_p1));
    add_ln700_81_fu_1914_p2 <= std_logic_vector(signed(sext_ln700_90_fu_1907_p1) + signed(sext_ln700_87_fu_1904_p1));
    add_ln700_84_fu_2118_p2 <= std_logic_vector(unsigned(firPartialRes1_1_V_s_reg_3021) + unsigned(sext_ln68_163_fu_2109_p1));
    add_ln700_fu_1668_p2 <= std_logic_vector(signed(sext_ln700_fu_1665_p1) + signed(sext_ln215_51_fu_1662_p1));
    add_ln78_22_fu_1844_p2 <= std_logic_vector(unsigned(p_Result_i_i_i_i4_s_fu_1822_p4) + unsigned(zext_ln78_22_fu_1840_p1));
    add_ln78_23_fu_2057_p2 <= std_logic_vector(signed(sext_ln647_fu_2051_p1) + signed(zext_ln78_23_fu_2054_p1));
    add_ln78_24_fu_1937_p2 <= std_logic_vector(unsigned(p_Result_i_i_i_i2_4_fu_1924_p4) + unsigned(zext_ln78_24_fu_1934_p1));
    add_ln78_25_fu_1965_p2 <= std_logic_vector(unsigned(p_Result_i_i_i_i4_4_fu_1943_p4) + unsigned(zext_ln78_25_fu_1961_p1));
    add_ln78_26_fu_2100_p2 <= std_logic_vector(signed(sext_ln647_12_fu_2094_p1) + signed(zext_ln78_26_fu_2097_p1));
    add_ln78_fu_1816_p2 <= std_logic_vector(unsigned(p_Result_i_i_i_i2_s_fu_1803_p4) + unsigned(zext_ln78_fu_1813_p1));
    and_ln393_21_fu_592_p2 <= (xor_ln393_fu_580_p2 and icmp_ln395_fu_586_p2);
    and_ln393_22_fu_604_p2 <= (xor_ln393_fu_580_p2 and icmp_ln394_fu_598_p2);
    and_ln393_23_fu_813_p2 <= (or_ln393_6_reg_2655 and and_ln393_fu_759_p2);
    and_ln393_24_fu_638_p2 <= (or_ln393_6_fu_632_p2 and and_ln393_21_fu_592_p2);
    and_ln393_fu_759_p2 <= (xor_ln393_reg_2623 and icmp_ln399_fu_753_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(3);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(vec_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter2, icmp_ln392_reg_2603_pp0_iter1_reg, ap_enable_reg_pp0_iter8, o_out_reg_2748_pp0_iter7_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (o_out_reg_2748_pp0_iter7_reg = ap_const_lv1_1)) or ((vec_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln392_reg_2603_pp0_iter1_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(vec_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter2, icmp_ln392_reg_2603_pp0_iter1_reg, ap_enable_reg_pp0_iter8, o_out_reg_2748_pp0_iter7_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (o_out_reg_2748_pp0_iter7_reg = ap_const_lv1_1)) or ((vec_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln392_reg_2603_pp0_iter1_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(vec_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter2, icmp_ln392_reg_2603_pp0_iter1_reg, ap_enable_reg_pp0_iter8, o_out_reg_2748_pp0_iter7_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (o_out_reg_2748_pp0_iter7_reg = ap_const_lv1_1)) or ((vec_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln392_reg_2603_pp0_iter1_reg = ap_const_lv1_0)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, reps_empty_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (reps_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp0_stage0_iter8_assign_proc : process(out_V_V_full_n, o_out_reg_2748_pp0_iter7_reg)
    begin
                ap_block_state11_pp0_stage0_iter8 <= ((out_V_V_full_n = ap_const_logic_0) and (o_out_reg_2748_pp0_iter7_reg = ap_const_lv1_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter2_assign_proc : process(vec_V_V_empty_n, icmp_ln392_reg_2603_pp0_iter1_reg)
    begin
                ap_block_state5_pp0_stage0_iter2 <= ((vec_V_V_empty_n = ap_const_logic_0) and (icmp_ln392_reg_2603_pp0_iter1_reg = ap_const_lv1_0));
    end process;

        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter1_state4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter1_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_firPartialRes0_V_0_3_6_assign_proc : process(ap_block_pp0_stage0, icmp_ln392_reg_2603_pp0_iter5_reg, ap_enable_reg_pp0_iter6, firPartialRes0_V_0_3_fu_202, select_ln398_17_fu_2080_p3)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln392_reg_2603_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_firPartialRes0_V_0_3_6 <= select_ln398_17_fu_2080_p3;
        else 
            ap_sig_allocacmp_firPartialRes0_V_0_3_6 <= firPartialRes0_V_0_3_fu_202;
        end if; 
    end process;


    ap_sig_allocacmp_firPartialRes0_V_1_3_6_assign_proc : process(ap_block_pp0_stage0, icmp_ln392_reg_2603_pp0_iter5_reg, ap_enable_reg_pp0_iter6, firPartialRes0_V_1_3_fu_206, select_ln398_21_fu_2123_p3)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln392_reg_2603_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_firPartialRes0_V_1_3_6 <= select_ln398_21_fu_2123_p3;
        else 
            ap_sig_allocacmp_firPartialRes0_V_1_3_6 <= firPartialRes0_V_1_3_fu_206;
        end if; 
    end process;


    ap_sig_allocacmp_firPartialRes1_0_V_s_assign_proc : process(ap_block_pp0_stage0, icmp_ln392_reg_2603_pp0_iter5_reg, ap_enable_reg_pp0_iter6, firPartialRes1_0_V_6_fu_210, firPartialRes1_0_V_fu_2087_p3)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln392_reg_2603_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_firPartialRes1_0_V_s <= firPartialRes1_0_V_fu_2087_p3;
        else 
            ap_sig_allocacmp_firPartialRes1_0_V_s <= firPartialRes1_0_V_6_fu_210;
        end if; 
    end process;


    ap_sig_allocacmp_firPartialRes1_1_V_s_assign_proc : process(ap_block_pp0_stage0, icmp_ln392_reg_2603_pp0_iter5_reg, ap_enable_reg_pp0_iter6, firPartialRes1_1_V_6_fu_214, firPartialRes1_1_V_fu_2130_p3)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (icmp_ln392_reg_2603_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_firPartialRes1_1_V_s <= firPartialRes1_1_V_fu_2130_p3;
        else 
            ap_sig_allocacmp_firPartialRes1_1_V_s <= firPartialRes1_1_V_6_fu_214;
        end if; 
    end process;

    bound46_fu_537_p2 <= std_logic_vector(unsigned(p_shl232_fu_533_p1) + unsigned(p_shl_fu_521_p1));
    conv_7_bias_new_V_0_address0 <= zext_ln458_fu_547_p1(5 - 1 downto 0);
    conv_7_bias_new_V_0_address1 <= zext_ln458_6_fu_806_p1(5 - 1 downto 0);

    conv_7_bias_new_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_7_bias_new_V_0_ce0 <= ap_const_logic_1;
        else 
            conv_7_bias_new_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_7_bias_new_V_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_7_bias_new_V_0_ce1 <= ap_const_logic_1;
        else 
            conv_7_bias_new_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_7_bias_new_V_1_address0 <= zext_ln458_fu_547_p1(5 - 1 downto 0);
    conv_7_bias_new_V_1_address1 <= zext_ln458_6_fu_806_p1(5 - 1 downto 0);

    conv_7_bias_new_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_7_bias_new_V_1_ce0 <= ap_const_logic_1;
        else 
            conv_7_bias_new_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_7_bias_new_V_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_7_bias_new_V_1_ce1 <= ap_const_logic_1;
        else 
            conv_7_bias_new_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_7_inc_new_V_0_address0 <= zext_ln458_fu_547_p1(5 - 1 downto 0);
    conv_7_inc_new_V_0_address1 <= zext_ln458_6_fu_806_p1(5 - 1 downto 0);

    conv_7_inc_new_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_7_inc_new_V_0_ce0 <= ap_const_logic_1;
        else 
            conv_7_inc_new_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_7_inc_new_V_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_7_inc_new_V_0_ce1 <= ap_const_logic_1;
        else 
            conv_7_inc_new_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_7_inc_new_V_1_address0 <= zext_ln458_fu_547_p1(5 - 1 downto 0);
    conv_7_inc_new_V_1_address1 <= zext_ln458_6_fu_806_p1(5 - 1 downto 0);

    conv_7_inc_new_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_7_inc_new_V_1_ce0 <= ap_const_logic_1;
        else 
            conv_7_inc_new_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_7_inc_new_V_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_7_inc_new_V_1_ce1 <= ap_const_logic_1;
        else 
            conv_7_inc_new_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_7_w_new_V_0_0_address0 <= zext_ln404_4_fu_868_p1(11 - 1 downto 0);

    conv_7_w_new_V_0_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_7_w_new_V_0_0_ce0 <= ap_const_logic_1;
        else 
            conv_7_w_new_V_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_7_w_new_V_0_1_address0 <= zext_ln404_4_fu_868_p1(11 - 1 downto 0);

    conv_7_w_new_V_0_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_7_w_new_V_0_1_ce0 <= ap_const_logic_1;
        else 
            conv_7_w_new_V_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_7_w_new_V_0_2_address0 <= zext_ln404_4_fu_868_p1(11 - 1 downto 0);

    conv_7_w_new_V_0_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_7_w_new_V_0_2_ce0 <= ap_const_logic_1;
        else 
            conv_7_w_new_V_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_7_w_new_V_1_0_address0 <= zext_ln404_4_fu_868_p1(11 - 1 downto 0);

    conv_7_w_new_V_1_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_7_w_new_V_1_0_ce0 <= ap_const_logic_1;
        else 
            conv_7_w_new_V_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_7_w_new_V_1_1_address0 <= zext_ln404_4_fu_868_p1(11 - 1 downto 0);

    conv_7_w_new_V_1_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_7_w_new_V_1_1_ce0 <= ap_const_logic_1;
        else 
            conv_7_w_new_V_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_7_w_new_V_1_2_address0 <= zext_ln404_4_fu_868_p1(11 - 1 downto 0);

    conv_7_w_new_V_1_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_7_w_new_V_1_2_ce0 <= ap_const_logic_1;
        else 
            conv_7_w_new_V_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    firPartialRes0_0_V_6_fu_2070_p2 <= std_logic_vector(unsigned(firPartialRes0_V_0_3_6_reg_3006) + unsigned(firPartialRes0_0_V_fu_2063_p1));
        firPartialRes0_0_V_fu_2063_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln78_22_reg_3034),18));

    firPartialRes0_1_V_6_fu_2113_p2 <= std_logic_vector(unsigned(firPartialRes0_V_1_3_6_reg_3011) + unsigned(firPartialRes0_1_V_fu_2106_p1));
        firPartialRes0_1_V_fu_2106_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln78_25_reg_3059),18));

    firPartialRes1_0_V_fu_2087_p3 <= 
        sext_ln68_159_fu_2066_p1 when (o_clear_reg_3026(0) = '1') else 
        add_ln700_78_fu_2075_p2;
    firPartialRes1_1_V_fu_2130_p3 <= 
        sext_ln68_163_fu_2109_p1 when (o_clear_reg_3026(0) = '1') else 
        add_ln700_84_fu_2118_p2;
    icmp_ln392_fu_555_p2 <= "1" when (indvar_flatten145_reg_431 = bound46_reg_2572) else "0";
    icmp_ln393_fu_566_p2 <= "1" when (indvar_flatten33_reg_442 = ap_const_lv16_4200) else "0";
    icmp_ln394_fu_598_p2 <= "1" when (indvar_flatten_reg_464 = ap_const_lv10_210) else "0";
    icmp_ln395_fu_586_p2 <= "1" when (infoldIdx_0_i_reg_475 = ap_const_lv6_30) else "0";
    icmp_ln399_2_fu_847_p2 <= "1" when (select_ln399_reg_2671 = ap_const_lv6_2F) else "0";
    icmp_ln399_9_fu_824_p2 <= "0" when (w_fu_818_p2 = ap_const_lv5_0) else "1";
    icmp_ln399_fu_753_p2 <= "0" when (w_0_i_reg_486 = ap_const_lv5_0) else "1";
    icmp_ln895_46_fu_2252_p2 <= "1" when (signed(ret_V_95_fu_2246_p2) > signed(ap_const_lv31_0)) else "0";
    icmp_ln895_48_fu_2314_p2 <= "1" when (signed(ret_V_96_fu_2308_p2) > signed(ap_const_lv31_0)) else "0";
    icmp_ln895_50_fu_2376_p2 <= "1" when (signed(ret_V_97_fu_2370_p2) > signed(ap_const_lv31_0)) else "0";
    icmp_ln895_59_fu_2211_p2 <= "0" when (tmp_80_fu_2201_p4 = ap_const_lv11_0) else "1";
    icmp_ln895_60_fu_2273_p2 <= "0" when (tmp_81_fu_2263_p4 = ap_const_lv11_0) else "1";
    icmp_ln895_61_fu_2335_p2 <= "0" when (tmp_82_fu_2325_p4 = ap_const_lv11_0) else "1";
    icmp_ln895_62_fu_2397_p2 <= "0" when (tmp_83_fu_2387_p4 = ap_const_lv11_0) else "1";
    icmp_ln895_fu_2190_p2 <= "1" when (signed(ret_V_94_fu_2184_p2) > signed(ap_const_lv31_0)) else "0";
    infoldIdx_fu_672_p2 <= std_logic_vector(unsigned(select_ln399_fu_664_p3) + unsigned(ap_const_lv6_1));
    ipack_0_V_fu_1566_p4 <= ((p_Result_78_i_i_reg_2817 & ap_const_lv7_0) & trunc_ln647_reg_2812);
    ipack_1_V_fu_1574_p4 <= ((p_Result_78_1_i_i_reg_2827 & ap_const_lv7_0) & p_Result_1_i_i_reg_2822);
    ipack_2_V_fu_1582_p4 <= ((p_Result_78_2_i_i_reg_2837 & ap_const_lv7_0) & p_Result_2_i_i_reg_2832);
    ipack_3_V_fu_1590_p4 <= ((p_Result_78_3_i_i_reg_2847 & ap_const_lv7_0) & p_Result_3_i_i_reg_2842);
    mul_ln1352_41_fu_2445_p1 <= zext_ln215_36_fu_1608_p1(15 - 1 downto 0);
    mul_ln1352_42_fu_2452_p1 <= zext_ln215_37_fu_1621_p1(15 - 1 downto 0);
    mul_ln1352_43_fu_2459_p1 <= zext_ln215_38_fu_1631_p1(15 - 1 downto 0);
    mul_ln1352_44_fu_2466_p1 <= zext_ln215_fu_1601_p1(15 - 1 downto 0);
    mul_ln1352_45_fu_2473_p1 <= zext_ln215_36_fu_1608_p1(15 - 1 downto 0);
    mul_ln1352_46_fu_2480_p1 <= zext_ln215_37_fu_1621_p1(15 - 1 downto 0);
    mul_ln1352_47_fu_2487_p1 <= zext_ln215_38_fu_1631_p1(15 - 1 downto 0);
    mul_ln1352_fu_2438_p1 <= zext_ln215_fu_1601_p1(15 - 1 downto 0);
    o_clear_fu_1778_p2 <= "1" when (select_ln399_reg_2671_pp0_iter4_reg = ap_const_lv6_0) else "0";
    o_out_fu_852_p2 <= (select_ln399_6_fu_830_p3 and icmp_ln399_2_fu_847_p2);
    or_ln393_6_fu_632_p2 <= (xor_ln393_6_fu_626_p2 or icmp_ln393_fu_566_p2);
    or_ln393_fu_616_p2 <= (icmp_ln393_fu_566_p2 or and_ln393_22_fu_604_p2);
    or_ln399_6_fu_658_p2 <= (or_ln399_fu_652_p2 or icmp_ln393_fu_566_p2);
    or_ln399_fu_652_p2 <= (and_ln393_24_fu_638_p2 or and_ln393_22_fu_604_p2);
    outPartialArr0_0_V_fu_1898_p2 <= std_logic_vector(unsigned(select_ln398_16_fu_1890_p3) + unsigned(sext_ln68_156_fu_1868_p1));
    outPartialArr0_1_V_fu_2019_p2 <= std_logic_vector(unsigned(select_ln398_20_fu_2011_p3) + unsigned(sext_ln68_160_fu_1989_p1));

    out_V_V_blk_n_assign_proc : process(out_V_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter8, o_out_reg_2748_pp0_iter7_reg)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (o_out_reg_2748_pp0_iter7_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            out_V_V_blk_n <= out_V_V_full_n;
        else 
            out_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_V_V_din <= (((res_V_19_reg_3123 & res_V_17_reg_3113) & res_V_18_reg_3118) & res_V_reg_3108);

    out_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter8, o_out_reg_2748_pp0_iter7_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (o_out_reg_2748_pp0_iter7_reg = ap_const_lv1_1))) then 
            out_V_V_write <= ap_const_logic_1;
        else 
            out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_1_i25_i_fu_1356_p4 <= conv_7_w_new_V_1_2_q0(7 downto 4);
    p_Result_1_i8_i_fu_1094_p4 <= conv_7_w_new_V_0_2_q0(7 downto 4);
    p_Result_2_i35_i_fu_1426_p4 <= conv_7_w_new_V_1_2_q0(11 downto 8);
    p_Result_2_i9_i_fu_1164_p4 <= conv_7_w_new_V_0_2_q0(11 downto 8);
    p_Result_3_i10_i_fu_1234_p4 <= conv_7_w_new_V_0_2_q0(15 downto 12);
    p_Result_3_i45_i_fu_1496_p4 <= conv_7_w_new_V_1_2_q0(15 downto 12);
    p_Result_i_i_i_i2_4_fu_1924_p4 <= add_ln700_124_fu_1910_p2(21 downto 11);
    p_Result_i_i_i_i2_s_fu_1803_p4 <= add_ln700_116_fu_1789_p2(21 downto 11);
    p_Result_i_i_i_i4_4_fu_1943_p4 <= add_ln700_124_fu_1910_p2(32 downto 22);
    p_Result_i_i_i_i4_s_fu_1822_p4 <= add_ln700_116_fu_1789_p2(32 downto 22);
    p_shl232_fu_533_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_105_fu_525_p3),47));
    p_shl_fu_521_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_104_fu_513_p3),47));
    peIdx_fu_610_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(select_ln393_fu_572_p3));

    reps_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, reps_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            reps_blk_n <= reps_empty_n;
        else 
            reps_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    reps_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, reps_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (reps_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            reps_read <= ap_const_logic_1;
        else 
            reps_read <= ap_const_logic_0;
        end if; 
    end process;

    res_V_17_fu_2297_p3 <= 
        select_ln192_8_fu_2289_p3 when (icmp_ln895_46_fu_2252_p2(0) = '1') else 
        ap_const_lv4_0;
    res_V_18_fu_2359_p3 <= 
        select_ln192_9_fu_2351_p3 when (icmp_ln895_48_fu_2314_p2(0) = '1') else 
        ap_const_lv4_0;
    res_V_19_fu_2421_p3 <= 
        select_ln192_10_fu_2413_p3 when (icmp_ln895_50_fu_2376_p2(0) = '1') else 
        ap_const_lv4_0;
    res_V_fu_2235_p3 <= 
        select_ln192_fu_2227_p3 when (icmp_ln895_fu_2190_p2(0) = '1') else 
        ap_const_lv4_0;
    ret_V_84_fu_2196_p2 <= std_logic_vector(signed(ret_V_reg_3084) + signed(sext_ln393_19_fu_2172_p1));
    ret_V_85_fu_2500_p0 <= zext_ln393_fu_2045_p1(12 - 1 downto 0);
    ret_V_87_fu_2258_p2 <= std_logic_vector(signed(ret_V_85_reg_3090) + signed(sext_ln393_19_fu_2172_p1));
    ret_V_88_fu_2506_p0 <= zext_ln393_14_fu_2048_p1(12 - 1 downto 0);
    ret_V_90_fu_2320_p2 <= std_logic_vector(signed(ret_V_88_reg_3096) + signed(sext_ln393_21_fu_2178_p1));
    ret_V_91_fu_2512_p0 <= zext_ln393_14_fu_2048_p1(12 - 1 downto 0);
    ret_V_93_fu_2382_p2 <= std_logic_vector(signed(ret_V_91_reg_3102) + signed(sext_ln393_21_fu_2178_p1));
    ret_V_94_fu_2184_p2 <= std_logic_vector(signed(sext_ln393_fu_2169_p1) + signed(sext_ln1352_fu_2181_p1));
    ret_V_95_fu_2246_p2 <= std_logic_vector(signed(sext_ln393_fu_2169_p1) + signed(sext_ln1352_6_fu_2243_p1));
    ret_V_96_fu_2308_p2 <= std_logic_vector(signed(sext_ln393_20_fu_2175_p1) + signed(sext_ln1352_7_fu_2305_p1));
    ret_V_97_fu_2370_p2 <= std_logic_vector(signed(sext_ln393_20_fu_2175_p1) + signed(sext_ln1352_8_fu_2367_p1));
    ret_V_fu_2494_p0 <= zext_ln393_fu_2045_p1(12 - 1 downto 0);
    select_ln192_10_fu_2413_p3 <= 
        ap_const_lv4_F when (icmp_ln895_62_fu_2397_p2(0) = '1') else 
        trunc_ln214_s_fu_2403_p4;
    select_ln192_8_fu_2289_p3 <= 
        ap_const_lv4_F when (icmp_ln895_60_fu_2273_p2(0) = '1') else 
        trunc_ln214_8_fu_2279_p4;
    select_ln192_9_fu_2351_p3 <= 
        ap_const_lv4_F when (icmp_ln895_61_fu_2335_p2(0) = '1') else 
        trunc_ln214_9_fu_2341_p4;
    select_ln192_fu_2227_p3 <= 
        ap_const_lv4_F when (icmp_ln895_59_fu_2211_p2(0) = '1') else 
        trunc_ln_fu_2217_p4;
    select_ln393_118_fu_746_p3 <= 
        ap_const_lv12_0 when (icmp_ln393_reg_2612(0) = '1') else 
        sub_ln404_fu_728_p2;
    select_ln393_119_fu_878_p3 <= 
        ap_const_lv12_114 when (icmp_ln393_reg_2612_pp0_iter1_reg(0) = '1') else 
        conv_7_inc_new_V_0_l_reg_2693;
    select_ln393_120_fu_884_p3 <= 
        ap_const_lv21_4E9D5 when (icmp_ln393_reg_2612_pp0_iter1_reg(0) = '1') else 
        conv_7_bias_new_V_0_1_reg_2698;
    select_ln393_121_fu_890_p3 <= 
        ap_const_lv21_529D5 when (icmp_ln393_reg_2612_pp0_iter1_reg(0) = '1') else 
        add_ln1353_reg_2713;
    select_ln393_122_fu_896_p3 <= 
        ap_const_lv12_38E when (icmp_ln393_reg_2612_pp0_iter1_reg(0) = '1') else 
        conv_7_inc_new_V_1_l_reg_2703;
    select_ln393_123_fu_902_p3 <= 
        ap_const_lv22_3EC5F9 when (icmp_ln393_reg_2612_pp0_iter1_reg(0) = '1') else 
        conv_7_bias_new_V_1_1_reg_2708;
    select_ln393_124_fu_908_p3 <= 
        ap_const_lv22_3F05F9 when (icmp_ln393_reg_2612_pp0_iter1_reg(0) = '1') else 
        add_ln1353_28_reg_2718;
    select_ln393_125_fu_764_p3 <= 
        ap_const_lv5_0 when (or_ln393_reg_2644(0) = '1') else 
        w_0_i_reg_486;
    select_ln393_126_fu_799_p3 <= 
        sub_ln404_6_fu_793_p2 when (and_ln393_22_reg_2628(0) = '1') else 
        select_ln393_118_fu_746_p3;
    select_ln393_127_fu_914_p3 <= 
        conv_7_inc_new_V_0_q1 when (and_ln393_22_reg_2628_pp0_iter1_reg(0) = '1') else 
        select_ln393_119_fu_878_p3;
    select_ln393_128_fu_921_p3 <= 
        conv_7_bias_new_V_0_q1 when (and_ln393_22_reg_2628_pp0_iter1_reg(0) = '1') else 
        select_ln393_120_fu_884_p3;
    select_ln393_129_fu_934_p3 <= 
        add_ln1353_57_fu_928_p2 when (and_ln393_22_reg_2628_pp0_iter1_reg(0) = '1') else 
        select_ln393_121_fu_890_p3;
    select_ln393_130_fu_941_p3 <= 
        conv_7_inc_new_V_1_q1 when (and_ln393_22_reg_2628_pp0_iter1_reg(0) = '1') else 
        select_ln393_122_fu_896_p3;
    select_ln393_131_fu_948_p3 <= 
        conv_7_bias_new_V_1_q1 when (and_ln393_22_reg_2628_pp0_iter1_reg(0) = '1') else 
        select_ln393_123_fu_902_p3;
    select_ln393_132_fu_961_p3 <= 
        add_ln1353_58_fu_955_p2 when (and_ln393_22_reg_2628_pp0_iter1_reg(0) = '1') else 
        select_ln393_124_fu_908_p3;
    select_ln393_133_fu_644_p3 <= 
        peIdx_fu_610_p2 when (and_ln393_22_fu_604_p2(0) = '1') else 
        select_ln393_fu_572_p3;
    select_ln393_134_fu_698_p3 <= 
        ap_const_lv16_1 when (icmp_ln393_fu_566_p2(0) = '1') else 
        add_ln393_6_fu_692_p2;
    select_ln393_fu_572_p3 <= 
        ap_const_lv6_0 when (icmp_ln393_fu_566_p2(0) = '1') else 
        peIdx_0_i_reg_453;
    select_ln394_6_fu_684_p3 <= 
        ap_const_lv10_1 when (or_ln393_fu_616_p2(0) = '1') else 
        add_ln394_6_fu_678_p2;
    select_ln394_fu_837_p3 <= 
        w_fu_818_p2 when (and_ln393_24_reg_2660(0) = '1') else 
        select_ln393_125_fu_764_p3;
    select_ln398_16_fu_1890_p3 <= 
        ap_sig_allocacmp_firPartialRes0_V_0_3_6 when (o_clear_fu_1778_p2(0) = '1') else 
        outPartialArr0_0_V_6_fu_218;
    select_ln398_17_fu_2080_p3 <= 
        firPartialRes0_0_V_fu_2063_p1 when (o_clear_reg_3026(0) = '1') else 
        firPartialRes0_0_V_6_fu_2070_p2;
    select_ln398_19_fu_1997_p3 <= 
        ap_sig_allocacmp_firPartialRes1_1_V_s when (o_clear_fu_1778_p2(0) = '1') else 
        outPartialArr1_V_1_3_fu_230;
    select_ln398_20_fu_2011_p3 <= 
        ap_sig_allocacmp_firPartialRes0_V_1_3_6 when (o_clear_fu_1778_p2(0) = '1') else 
        outPartialArr0_1_V_6_fu_222;
    select_ln398_21_fu_2123_p3 <= 
        firPartialRes0_1_V_fu_2106_p1 when (o_clear_reg_3026(0) = '1') else 
        firPartialRes0_1_V_6_fu_2113_p2;
    select_ln398_fu_1876_p3 <= 
        ap_sig_allocacmp_firPartialRes1_0_V_s when (o_clear_fu_1778_p2(0) = '1') else 
        outPartialArr1_V_0_3_fu_226;
    select_ln399_6_fu_830_p3 <= 
        icmp_ln399_9_fu_824_p2 when (and_ln393_24_reg_2660(0) = '1') else 
        and_ln393_23_fu_813_p2;
    select_ln399_fu_664_p3 <= 
        ap_const_lv6_0 when (or_ln399_6_fu_658_p2(0) = '1') else 
        infoldIdx_0_i_reg_475;
        sext_ln1352_6_fu_2243_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_85_reg_3090),31));

        sext_ln1352_7_fu_2305_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_88_reg_3096),31));

        sext_ln1352_8_fu_2367_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_91_reg_3102),31));

        sext_ln1352_fu_2181_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_reg_3084),31));

        sext_ln215_51_fu_1662_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_reg_2892),42));

        sext_ln215_56_fu_1708_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_44_reg_2932),42));

        sext_ln393_19_fu_2172_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln393_129_reg_2792_pp0_iter6_reg),30));

        sext_ln393_20_fu_2175_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln393_131_reg_2802_pp0_iter6_reg),31));

        sext_ln393_21_fu_2178_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln393_132_reg_2807_pp0_iter6_reg),30));

        sext_ln393_fu_2169_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln393_128_reg_2787_pp0_iter6_reg),31));

        sext_ln404_fu_864_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln404_fu_858_p2),32));

        sext_ln647_12_fu_2094_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_reg_3064),11));

        sext_ln647_fu_2051_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_reg_3039),11));

        sext_ln68_133_fu_1074_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln647_25_fu_1042_p1),16));

        sext_ln68_134_fu_1084_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_fu_1078_p2),26));

        sext_ln68_135_fu_1140_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_75_fu_1132_p3),16));

        sext_ln68_136_fu_1144_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_1_i8_i_fu_1094_p4),16));

        sext_ln68_137_fu_1154_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_47_fu_1148_p2),26));

        sext_ln68_138_fu_1210_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_77_fu_1202_p3),16));

        sext_ln68_139_fu_1214_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_i9_i_fu_1164_p4),16));

        sext_ln68_140_fu_1224_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_49_fu_1218_p2),26));

        sext_ln68_141_fu_1280_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_79_fu_1272_p3),16));

        sext_ln68_142_fu_1284_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_3_i10_i_fu_1234_p4),16));

        sext_ln68_143_fu_1294_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_51_fu_1288_p2),26));

        sext_ln68_144_fu_1332_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_81_fu_1324_p3),16));

        sext_ln68_145_fu_1336_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln647_26_fu_1304_p1),16));

        sext_ln68_146_fu_1346_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_53_fu_1340_p2),26));

        sext_ln68_147_fu_1402_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_s_fu_1394_p3),16));

        sext_ln68_148_fu_1406_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_1_i25_i_fu_1356_p4),16));

        sext_ln68_149_fu_1416_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_55_fu_1410_p2),26));

        sext_ln68_150_fu_1472_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_84_fu_1464_p3),16));

        sext_ln68_151_fu_1476_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_2_i35_i_fu_1426_p4),16));

        sext_ln68_152_fu_1486_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_57_fu_1480_p2),26));

        sext_ln68_153_fu_1542_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_86_fu_1534_p3),16));

        sext_ln68_154_fu_1546_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_3_i45_i_fu_1496_p4),16));

        sext_ln68_155_fu_1556_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln68_59_fu_1550_p2),26));

        sext_ln68_156_fu_1868_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln647_27_fu_1799_p1),18));

        sext_ln68_157_fu_1872_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln78_fu_1816_p2),18));

        sext_ln68_159_fu_2066_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln78_23_fu_2057_p2),18));

        sext_ln68_160_fu_1989_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln647_28_fu_1920_p1),18));

        sext_ln68_161_fu_1993_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln78_24_fu_1937_p2),18));

        sext_ln68_163_fu_2109_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln78_26_fu_2100_p2),18));

        sext_ln68_fu_1070_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln68_73_fu_1062_p3),16));

        sext_ln700_82_fu_1783_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln700_reg_2972),43));

        sext_ln700_83_fu_1674_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_42_reg_2912),42));

        sext_ln700_84_fu_1681_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_43_reg_2922),42));

        sext_ln700_85_fu_1786_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln700_115_reg_2978),43));

        sext_ln700_86_fu_1711_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_45_reg_2937),42));

        sext_ln700_87_fu_1904_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln700_79_reg_2989),43));

        sext_ln700_88_fu_1720_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_46_reg_2952),42));

        sext_ln700_89_fu_1727_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_47_reg_2962),42));

        sext_ln700_90_fu_1907_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln700_123_reg_2995),43));

        sext_ln700_fu_1665_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1352_41_reg_2897),42));

    shl_ln2_fu_1050_p3 <= (trunc_ln68_fu_1046_p1 & ap_const_lv22_0);
    shl_ln392_6_fu_502_p2 <= std_logic_vector(shift_left(unsigned(reps_read_reg_2566),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln392_fu_497_p2 <= std_logic_vector(shift_left(unsigned(reps_read_reg_2566),to_integer(unsigned('0' & ap_const_lv32_3(31-1 downto 0)))));
    shl_ln404_2_fu_717_p3 <= (trunc_ln404_reg_2577 & ap_const_lv4_0);
    shl_ln404_2_mid1_fu_782_p3 <= (trunc_ln404_6_reg_2649 & ap_const_lv4_0);
    shl_ln404_mid1_fu_771_p3 <= (trunc_ln404_6_reg_2649 & ap_const_lv6_0);
    shl_ln68_73_fu_1062_p3 <= (trunc_ln68_14_fu_1058_p1 & ap_const_lv11_0);
    shl_ln68_74_fu_1114_p3 <= (tmp_106_fu_1104_p4 & ap_const_lv22_0);
    shl_ln68_75_fu_1132_p3 <= (tmp_107_fu_1122_p4 & ap_const_lv11_0);
    shl_ln68_76_fu_1184_p3 <= (tmp_108_fu_1174_p4 & ap_const_lv22_0);
    shl_ln68_77_fu_1202_p3 <= (tmp_109_fu_1192_p4 & ap_const_lv11_0);
    shl_ln68_78_fu_1254_p3 <= (tmp_110_fu_1244_p4 & ap_const_lv22_0);
    shl_ln68_79_fu_1272_p3 <= (tmp_111_fu_1262_p4 & ap_const_lv11_0);
    shl_ln68_80_fu_1312_p3 <= (trunc_ln68_15_fu_1308_p1 & ap_const_lv22_0);
    shl_ln68_81_fu_1324_p3 <= (trunc_ln68_16_fu_1320_p1 & ap_const_lv11_0);
    shl_ln68_82_fu_1376_p3 <= (tmp_112_fu_1366_p4 & ap_const_lv22_0);
    shl_ln68_83_fu_1446_p3 <= (tmp_114_fu_1436_p4 & ap_const_lv22_0);
    shl_ln68_84_fu_1464_p3 <= (tmp_115_fu_1454_p4 & ap_const_lv11_0);
    shl_ln68_85_fu_1516_p3 <= (tmp_116_fu_1506_p4 & ap_const_lv22_0);
    shl_ln68_86_fu_1534_p3 <= (tmp_117_fu_1524_p4 & ap_const_lv11_0);
    shl_ln68_s_fu_1394_p3 <= (tmp_113_fu_1384_p4 & ap_const_lv11_0);
    shl_ln_fu_706_p3 <= (trunc_ln404_reg_2577 & ap_const_lv6_0);
    sub_ln404_6_fu_793_p2 <= std_logic_vector(unsigned(zext_ln404_15_fu_778_p1) - unsigned(zext_ln404_16_fu_789_p1));
    sub_ln404_fu_728_p2 <= std_logic_vector(unsigned(zext_ln404_fu_713_p1) - unsigned(zext_ln404_3_fu_724_p1));
    tmp_104_fu_513_p3 <= (add_ln392_fu_507_p2 & ap_const_lv14_0);
    tmp_105_fu_525_p3 <= (add_ln392_fu_507_p2 & ap_const_lv9_0);
    tmp_106_fu_1104_p4 <= conv_7_w_new_V_0_0_q0(7 downto 4);
    tmp_107_fu_1122_p4 <= conv_7_w_new_V_0_1_q0(7 downto 4);
    tmp_108_fu_1174_p4 <= conv_7_w_new_V_0_0_q0(11 downto 8);
    tmp_109_fu_1192_p4 <= conv_7_w_new_V_0_1_q0(11 downto 8);
    tmp_110_fu_1244_p4 <= conv_7_w_new_V_0_0_q0(15 downto 12);
    tmp_111_fu_1262_p4 <= conv_7_w_new_V_0_1_q0(15 downto 12);
    tmp_112_fu_1366_p4 <= conv_7_w_new_V_1_0_q0(7 downto 4);
    tmp_113_fu_1384_p4 <= conv_7_w_new_V_1_1_q0(7 downto 4);
    tmp_114_fu_1436_p4 <= conv_7_w_new_V_1_0_q0(11 downto 8);
    tmp_115_fu_1454_p4 <= conv_7_w_new_V_1_1_q0(11 downto 8);
    tmp_116_fu_1506_p4 <= conv_7_w_new_V_1_0_q0(15 downto 12);
    tmp_117_fu_1524_p4 <= conv_7_w_new_V_1_1_q0(15 downto 12);
    tmp_75_fu_1832_p3 <= add_ln700_116_fu_1789_p2(21 downto 21);
    tmp_78_fu_1953_p3 <= add_ln700_124_fu_1910_p2(21 downto 21);
    tmp_80_fu_2201_p4 <= ret_V_84_fu_2196_p2(29 downto 19);
    tmp_81_fu_2263_p4 <= ret_V_87_fu_2258_p2(29 downto 19);
    tmp_82_fu_2325_p4 <= ret_V_90_fu_2320_p2(29 downto 19);
    tmp_83_fu_2387_p4 <= ret_V_93_fu_2382_p2(29 downto 19);
    trunc_ln214_8_fu_2279_p4 <= ret_V_87_fu_2258_p2(18 downto 15);
    trunc_ln214_9_fu_2341_p4 <= ret_V_90_fu_2320_p2(18 downto 15);
    trunc_ln214_s_fu_2403_p4 <= ret_V_93_fu_2382_p2(18 downto 15);
    trunc_ln404_6_fu_622_p1 <= peIdx_fu_610_p2(5 - 1 downto 0);
    trunc_ln404_fu_543_p1 <= peIdx_0_i_reg_453(5 - 1 downto 0);
    trunc_ln647_25_fu_1042_p1 <= conv_7_w_new_V_0_2_q0(4 - 1 downto 0);
    trunc_ln647_26_fu_1304_p1 <= conv_7_w_new_V_1_2_q0(4 - 1 downto 0);
    trunc_ln647_27_fu_1799_p1 <= add_ln700_116_fu_1789_p2(11 - 1 downto 0);
    trunc_ln647_28_fu_1920_p1 <= add_ln700_124_fu_1910_p2(11 - 1 downto 0);
    trunc_ln647_fu_968_p1 <= vec_V_V_dout(4 - 1 downto 0);
    trunc_ln68_14_fu_1058_p1 <= conv_7_w_new_V_0_1_q0(4 - 1 downto 0);
    trunc_ln68_15_fu_1308_p1 <= conv_7_w_new_V_1_0_q0(4 - 1 downto 0);
    trunc_ln68_16_fu_1320_p1 <= conv_7_w_new_V_1_1_q0(4 - 1 downto 0);
    trunc_ln68_fu_1046_p1 <= conv_7_w_new_V_0_0_q0(4 - 1 downto 0);
    trunc_ln700_102_fu_1615_p1 <= mul_ln1352_41_fu_2445_p2(21 - 1 downto 0);
    trunc_ln700_103_fu_1625_p1 <= mul_ln1352_42_fu_2452_p2(21 - 1 downto 0);
    trunc_ln700_104_fu_1635_p1 <= mul_ln1352_43_fu_2459_p2(21 - 1 downto 0);
    trunc_ln700_105_fu_1644_p1 <= mul_ln1352_44_fu_2466_p2(21 - 1 downto 0);
    trunc_ln700_106_fu_1647_p1 <= mul_ln1352_45_fu_2473_p2(21 - 1 downto 0);
    trunc_ln700_107_fu_1653_p1 <= mul_ln1352_46_fu_2480_p2(21 - 1 downto 0);
    trunc_ln700_108_fu_1659_p1 <= mul_ln1352_47_fu_2487_p2(21 - 1 downto 0);
    trunc_ln700_fu_1612_p1 <= mul_ln1352_fu_2438_p2(21 - 1 downto 0);
    trunc_ln_fu_2217_p4 <= ret_V_84_fu_2196_p2(18 downto 15);

    vec_V_V_blk_n_assign_proc : process(vec_V_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, icmp_ln392_reg_2603_pp0_iter1_reg)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln392_reg_2603_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            vec_V_V_blk_n <= vec_V_V_empty_n;
        else 
            vec_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    vec_V_V_read_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln392_reg_2603_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln392_reg_2603_pp0_iter1_reg = ap_const_lv1_0))) then 
            vec_V_V_read <= ap_const_logic_1;
        else 
            vec_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    w_fu_818_p2 <= std_logic_vector(unsigned(ap_const_lv5_2) + unsigned(select_ln393_125_fu_764_p3));
    wpacks_0_0_V_fu_1088_p2 <= std_logic_vector(unsigned(shl_ln2_fu_1050_p3) + unsigned(sext_ln68_134_fu_1084_p1));
    wpacks_0_1_V_fu_1158_p2 <= std_logic_vector(unsigned(shl_ln68_74_fu_1114_p3) + unsigned(sext_ln68_137_fu_1154_p1));
    wpacks_0_2_V_fu_1228_p2 <= std_logic_vector(unsigned(shl_ln68_76_fu_1184_p3) + unsigned(sext_ln68_140_fu_1224_p1));
    wpacks_0_3_V_fu_1298_p2 <= std_logic_vector(unsigned(shl_ln68_78_fu_1254_p3) + unsigned(sext_ln68_143_fu_1294_p1));
    wpacks_1_0_V_fu_1350_p2 <= std_logic_vector(unsigned(shl_ln68_80_fu_1312_p3) + unsigned(sext_ln68_146_fu_1346_p1));
    wpacks_1_1_V_fu_1420_p2 <= std_logic_vector(unsigned(shl_ln68_82_fu_1376_p3) + unsigned(sext_ln68_149_fu_1416_p1));
    wpacks_1_2_V_fu_1490_p2 <= std_logic_vector(unsigned(shl_ln68_83_fu_1446_p3) + unsigned(sext_ln68_152_fu_1486_p1));
    wpacks_1_3_V_fu_1560_p2 <= std_logic_vector(unsigned(shl_ln68_85_fu_1516_p3) + unsigned(sext_ln68_155_fu_1556_p1));
    xor_ln393_6_fu_626_p2 <= (icmp_ln394_fu_598_p2 xor ap_const_lv1_1);
    xor_ln393_fu_580_p2 <= (icmp_ln393_fu_566_p2 xor ap_const_lv1_1);
    zext_ln215_36_fu_1608_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ipack_1_V_fu_1574_p4),41));
    zext_ln215_37_fu_1621_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ipack_2_V_fu_1582_p4),41));
    zext_ln215_38_fu_1631_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ipack_3_V_fu_1590_p4),41));
    zext_ln215_fu_1601_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ipack_0_V_fu_1566_p4),41));
    zext_ln393_14_fu_2048_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln393_130_reg_2797_pp0_iter5_reg),30));
    zext_ln393_fu_2045_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln393_127_reg_2782_pp0_iter5_reg),30));
    zext_ln395_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln399_reg_2671),12));
    zext_ln404_15_fu_778_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln404_mid1_fu_771_p3),12));
    zext_ln404_16_fu_789_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln404_2_mid1_fu_782_p3),12));
    zext_ln404_3_fu_724_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln404_2_fu_717_p3),12));
    zext_ln404_4_fu_868_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln404_fu_864_p1),64));
    zext_ln404_fu_713_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_706_p3),12));
    zext_ln458_6_fu_806_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(peIdx_reg_2639),64));
    zext_ln458_fu_547_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(peIdx_0_i_reg_453),64));
    zext_ln78_22_fu_1840_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_75_fu_1832_p3),11));
    zext_ln78_23_fu_2054_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_76_reg_3044),11));
    zext_ln78_24_fu_1934_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_77_reg_3001),11));
    zext_ln78_25_fu_1961_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_78_fu_1953_p3),11));
    zext_ln78_26_fu_2097_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_79_reg_3069),11));
    zext_ln78_fu_1813_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_74_reg_2984),11));
end behav;
