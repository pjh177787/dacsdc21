-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity convDSPOpt_5 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    vec_V_V_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    vec_V_V_empty_n : IN STD_LOGIC;
    vec_V_V_read : OUT STD_LOGIC;
    out_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_V_V_full_n : IN STD_LOGIC;
    out_V_V_write : OUT STD_LOGIC;
    reps_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    reps_empty_n : IN STD_LOGIC;
    reps_read : OUT STD_LOGIC );
end;


architecture behav of convDSPOpt_5 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv43_0 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000000000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv43_798 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000011110011000";
    constant ap_const_lv43_1 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000000000000001";
    constant ap_const_lv12_798 : STD_LOGIC_VECTOR (11 downto 0) := "011110011000";
    constant ap_const_lv9_F3 : STD_LOGIC_VECTOR (8 downto 0) := "011110011";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv23_4000 : STD_LOGIC_VECTOR (22 downto 0) := "00000000100000000000000";
    constant ap_const_lv21_4000 : STD_LOGIC_VECTOR (20 downto 0) := "000000100000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv12_4F4 : STD_LOGIC_VECTOR (11 downto 0) := "010011110100";
    constant ap_const_lv23_97C2 : STD_LOGIC_VECTOR (22 downto 0) := "00000001001011111000010";
    constant ap_const_lv23_D7C2 : STD_LOGIC_VECTOR (22 downto 0) := "00000001101011111000010";
    constant ap_const_lv13_492 : STD_LOGIC_VECTOR (12 downto 0) := "0010010010010";
    constant ap_const_lv23_784317 : STD_LOGIC_VECTOR (22 downto 0) := "11110000100001100010111";
    constant ap_const_lv23_788317 : STD_LOGIC_VECTOR (22 downto 0) := "11110001000001100010111";
    constant ap_const_lv11_403 : STD_LOGIC_VECTOR (10 downto 0) := "10000000011";
    constant ap_const_lv21_1B3009 : STD_LOGIC_VECTOR (20 downto 0) := "110110011000000001001";
    constant ap_const_lv21_1B7009 : STD_LOGIC_VECTOR (20 downto 0) := "110110111000000001001";
    constant ap_const_lv12_31D : STD_LOGIC_VECTOR (11 downto 0) := "001100011101";
    constant ap_const_lv23_C292B : STD_LOGIC_VECTOR (22 downto 0) := "00011000010100100101011";
    constant ap_const_lv23_C692B : STD_LOGIC_VECTOR (22 downto 0) := "00011000110100100101011";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_5B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_64 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100100";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_6B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_6C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101100";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_73 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_74 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110100";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_78 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111000";
    constant ap_const_lv32_7B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111011";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_7C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111100";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv29_0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal conv_1_inc_new_V_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_inc_new_V_0_ce0 : STD_LOGIC;
    signal conv_1_inc_new_V_0_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv_1_inc_new_V_0_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_inc_new_V_0_ce1 : STD_LOGIC;
    signal conv_1_inc_new_V_0_q1 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv_1_bias_new_V_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_bias_new_V_0_ce0 : STD_LOGIC;
    signal conv_1_bias_new_V_0_q0 : STD_LOGIC_VECTOR (22 downto 0);
    signal conv_1_bias_new_V_0_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_bias_new_V_0_ce1 : STD_LOGIC;
    signal conv_1_bias_new_V_0_q1 : STD_LOGIC_VECTOR (22 downto 0);
    signal conv_1_inc_new_V_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_inc_new_V_1_ce0 : STD_LOGIC;
    signal conv_1_inc_new_V_1_q0 : STD_LOGIC_VECTOR (12 downto 0);
    signal conv_1_inc_new_V_1_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_inc_new_V_1_ce1 : STD_LOGIC;
    signal conv_1_inc_new_V_1_q1 : STD_LOGIC_VECTOR (12 downto 0);
    signal conv_1_bias_new_V_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_bias_new_V_1_ce0 : STD_LOGIC;
    signal conv_1_bias_new_V_1_q0 : STD_LOGIC_VECTOR (22 downto 0);
    signal conv_1_bias_new_V_1_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_bias_new_V_1_ce1 : STD_LOGIC;
    signal conv_1_bias_new_V_1_q1 : STD_LOGIC_VECTOR (22 downto 0);
    signal conv_1_inc_new_V_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_inc_new_V_2_ce0 : STD_LOGIC;
    signal conv_1_inc_new_V_2_q0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_1_inc_new_V_2_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_inc_new_V_2_ce1 : STD_LOGIC;
    signal conv_1_inc_new_V_2_q1 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_1_bias_new_V_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_bias_new_V_2_ce0 : STD_LOGIC;
    signal conv_1_bias_new_V_2_q0 : STD_LOGIC_VECTOR (20 downto 0);
    signal conv_1_bias_new_V_2_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_bias_new_V_2_ce1 : STD_LOGIC;
    signal conv_1_bias_new_V_2_q1 : STD_LOGIC_VECTOR (20 downto 0);
    signal conv_1_inc_new_V_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_inc_new_V_3_ce0 : STD_LOGIC;
    signal conv_1_inc_new_V_3_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv_1_inc_new_V_3_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_inc_new_V_3_ce1 : STD_LOGIC;
    signal conv_1_inc_new_V_3_q1 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv_1_bias_new_V_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_bias_new_V_3_ce0 : STD_LOGIC;
    signal conv_1_bias_new_V_3_q0 : STD_LOGIC_VECTOR (22 downto 0);
    signal conv_1_bias_new_V_3_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_bias_new_V_3_ce1 : STD_LOGIC;
    signal conv_1_bias_new_V_3_q1 : STD_LOGIC_VECTOR (22 downto 0);
    signal conv_1_w_new_V_0_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_1_w_new_V_0_2_ce0 : STD_LOGIC;
    signal conv_1_w_new_V_0_2_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_1_w_new_V_0_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_1_w_new_V_0_1_ce0 : STD_LOGIC;
    signal conv_1_w_new_V_0_1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_1_w_new_V_0_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_1_w_new_V_0_0_ce0 : STD_LOGIC;
    signal conv_1_w_new_V_0_0_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_1_w_new_V_1_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_1_w_new_V_1_2_ce0 : STD_LOGIC;
    signal conv_1_w_new_V_1_2_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_1_w_new_V_1_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_1_w_new_V_1_1_ce0 : STD_LOGIC;
    signal conv_1_w_new_V_1_1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_1_w_new_V_1_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_1_w_new_V_1_0_ce0 : STD_LOGIC;
    signal conv_1_w_new_V_1_0_q0 : STD_LOGIC_VECTOR (62 downto 0);
    signal conv_1_w_new_V_2_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_1_w_new_V_2_2_ce0 : STD_LOGIC;
    signal conv_1_w_new_V_2_2_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_1_w_new_V_2_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_1_w_new_V_2_1_ce0 : STD_LOGIC;
    signal conv_1_w_new_V_2_1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_1_w_new_V_2_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_1_w_new_V_2_0_ce0 : STD_LOGIC;
    signal conv_1_w_new_V_2_0_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_1_w_new_V_3_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_1_w_new_V_3_2_ce0 : STD_LOGIC;
    signal conv_1_w_new_V_3_2_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_1_w_new_V_3_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_1_w_new_V_3_1_ce0 : STD_LOGIC;
    signal conv_1_w_new_V_3_1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_1_w_new_V_3_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_1_w_new_V_3_0_ce0 : STD_LOGIC;
    signal conv_1_w_new_V_3_0_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal vec_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln392_reg_3490 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln392_reg_3490_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal out_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal o_out_reg_3688 : STD_LOGIC_VECTOR (0 downto 0);
    signal o_out_reg_3688_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal reps_blk_n : STD_LOGIC;
    signal indvar_flatten239_reg_745 : STD_LOGIC_VECTOR (42 downto 0);
    signal indvar_flatten53_reg_756 : STD_LOGIC_VECTOR (11 downto 0);
    signal peIdx_0_i_reg_767 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten_reg_778 : STD_LOGIC_VECTOR (8 downto 0);
    signal w_0_i_reg_789 : STD_LOGIC_VECTOR (7 downto 0);
    signal infoldIdx_0_i_reg_800 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln392_fu_1006_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_reg_3430 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_fu_1015_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal bound74_reg_3440 : STD_LOGIC_VECTOR (42 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal sub_ln404_fu_1041_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln404_reg_3445 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln392_fu_1059_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln392_reg_3490_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln392_reg_3490_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln392_reg_3490_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln392_reg_3490_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln392_reg_3490_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln392_2_fu_1064_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal icmp_ln393_fu_1070_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln393_reg_3499 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln393_reg_3499_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln393_fu_1084_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln393_reg_3518 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln394_fu_1090_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln394_reg_3524 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln393_6_fu_1096_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln393_6_reg_3529 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln393_6_reg_3529_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal peIdx_fu_1102_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal peIdx_reg_3547 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln393_fu_1108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln393_reg_3553 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln404_2_fu_1114_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln404_2_reg_3558 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln393_45_fu_1118_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln394_2_fu_1132_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln393_46_fu_1146_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv_1_inc_new_V_0_l_reg_3578 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal conv_1_bias_new_V_0_1_reg_3583 : STD_LOGIC_VECTOR (22 downto 0);
    signal conv_1_inc_new_V_1_l_reg_3588 : STD_LOGIC_VECTOR (12 downto 0);
    signal conv_1_bias_new_V_1_1_reg_3593 : STD_LOGIC_VECTOR (22 downto 0);
    signal conv_1_inc_new_V_2_l_reg_3598 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_1_bias_new_V_2_1_reg_3603 : STD_LOGIC_VECTOR (20 downto 0);
    signal conv_1_inc_new_V_3_l_reg_3608 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv_1_bias_new_V_3_1_reg_3613 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln1353_fu_1154_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln1353_reg_3618 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln1353_12_fu_1160_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln1353_12_reg_3623 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln1353_13_fu_1166_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln1353_13_reg_3628 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln1353_14_fu_1172_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln1353_14_reg_3633 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln399_fu_1289_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln399_reg_3678 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln399_reg_3678_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln399_reg_3678_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln399_reg_3678_pp0_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln399_reg_3678_pp0_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln399_reg_3678_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln394_fu_1311_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal o_out_fu_1329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal o_out_reg_3688_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal o_out_reg_3688_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal o_out_reg_3688_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal o_out_reg_3688_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal o_out_reg_3688_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal o_out_reg_3688_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal o_out_reg_3688_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal infoldIdx_fu_1361_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln393_33_fu_1439_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_33_reg_3757 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_33_reg_3757_pp0_iter3_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_33_reg_3757_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_33_reg_3757_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_33_reg_3757_pp0_iter6_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_33_reg_3757_pp0_iter7_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_34_fu_1446_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_34_reg_3762 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_34_reg_3762_pp0_iter3_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_34_reg_3762_pp0_iter4_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_34_reg_3762_pp0_iter5_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_34_reg_3762_pp0_iter6_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_34_reg_3762_pp0_iter7_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_34_reg_3762_pp0_iter8_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_35_fu_1459_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_35_reg_3767 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_35_reg_3767_pp0_iter3_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_35_reg_3767_pp0_iter4_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_35_reg_3767_pp0_iter5_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_35_reg_3767_pp0_iter6_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_35_reg_3767_pp0_iter7_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_35_reg_3767_pp0_iter8_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_36_fu_1466_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln393_36_reg_3772 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln393_36_reg_3772_pp0_iter3_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln393_36_reg_3772_pp0_iter4_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln393_36_reg_3772_pp0_iter5_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln393_36_reg_3772_pp0_iter6_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln393_36_reg_3772_pp0_iter7_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln393_37_fu_1473_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_37_reg_3777 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_37_reg_3777_pp0_iter3_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_37_reg_3777_pp0_iter4_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_37_reg_3777_pp0_iter5_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_37_reg_3777_pp0_iter6_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_37_reg_3777_pp0_iter7_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_37_reg_3777_pp0_iter8_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_38_fu_1486_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_38_reg_3782 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_38_reg_3782_pp0_iter3_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_38_reg_3782_pp0_iter4_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_38_reg_3782_pp0_iter5_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_38_reg_3782_pp0_iter6_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_38_reg_3782_pp0_iter7_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_38_reg_3782_pp0_iter8_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_39_fu_1493_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln393_39_reg_3787 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln393_39_reg_3787_pp0_iter3_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln393_39_reg_3787_pp0_iter4_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln393_39_reg_3787_pp0_iter5_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln393_39_reg_3787_pp0_iter6_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln393_39_reg_3787_pp0_iter7_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln393_40_fu_1500_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_40_reg_3792 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_40_reg_3792_pp0_iter3_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_40_reg_3792_pp0_iter4_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_40_reg_3792_pp0_iter5_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_40_reg_3792_pp0_iter6_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_40_reg_3792_pp0_iter7_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_40_reg_3792_pp0_iter8_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_41_fu_1513_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_41_reg_3797 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_41_reg_3797_pp0_iter3_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_41_reg_3797_pp0_iter4_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_41_reg_3797_pp0_iter5_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_41_reg_3797_pp0_iter6_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_41_reg_3797_pp0_iter7_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_41_reg_3797_pp0_iter8_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_42_fu_1520_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_42_reg_3802 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_42_reg_3802_pp0_iter3_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_42_reg_3802_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_42_reg_3802_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_42_reg_3802_pp0_iter6_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_42_reg_3802_pp0_iter7_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_43_fu_1527_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_43_reg_3807 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_43_reg_3807_pp0_iter3_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_43_reg_3807_pp0_iter4_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_43_reg_3807_pp0_iter5_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_43_reg_3807_pp0_iter6_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_43_reg_3807_pp0_iter7_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_43_reg_3807_pp0_iter8_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_44_fu_1540_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_44_reg_3812 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_44_reg_3812_pp0_iter3_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_44_reg_3812_pp0_iter4_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_44_reg_3812_pp0_iter5_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_44_reg_3812_pp0_iter6_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_44_reg_3812_pp0_iter7_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_44_reg_3812_pp0_iter8_reg : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln647_fu_1547_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln647_reg_3817 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_82_i_i_reg_3822 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_1_i_i_reg_3827 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_82_1_i_i_reg_3832 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_2_i_i_reg_3837 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_82_2_i_i_reg_3842 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_3_i_i_reg_3847 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_82_3_i_i_reg_3852 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_4_i_i_reg_3857 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_82_4_i_i_reg_3862 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_5_i_i_reg_3867 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_82_5_i_i_reg_3872 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_6_i_i_reg_3877 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_82_6_i_i_reg_3882 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_7_i_i_reg_3887 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_82_7_i_i_reg_3892 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_8_i_i_reg_3897 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_82_8_i_i_reg_3902 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_9_i_i_reg_3907 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_82_9_i_i_reg_3912 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_10_i_i_reg_3917 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_82_i_i_133_reg_3922 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_11_i_i_reg_3927 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_82_10_i_i_reg_3932 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_12_i_i_reg_3937 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_82_11_i_i_reg_3942 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_13_i_i_reg_3947 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_82_12_i_i_reg_3952 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_14_i_i_reg_3957 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_82_13_i_i_reg_3962 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_i_i_reg_3967 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_82_14_i_i_reg_3972 : STD_LOGIC_VECTOR (3 downto 0);
    signal wpacks_0_0_V_reg_3977 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_1_V_reg_3982 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_2_V_reg_3987 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_3_V_reg_3992 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_4_V_reg_3997 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_5_V_reg_4002 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_6_V_reg_4007 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_7_V_reg_4012 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_8_V_reg_4017 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_9_V_reg_4022 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_10_V_reg_4027 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_11_V_reg_4032 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_12_V_reg_4037 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_13_V_reg_4042 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_14_V_reg_4047 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_0_15_V_reg_4052 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_0_V_reg_4057 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_1_V_reg_4062 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_2_V_reg_4067 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_3_V_reg_4072 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_4_V_reg_4077 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_5_V_reg_4082 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_6_V_reg_4087 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_7_V_reg_4092 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_8_V_reg_4097 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_9_V_reg_4102 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_10_V_reg_4107 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_11_V_reg_4112 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_12_V_reg_4117 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_13_V_reg_4122 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_14_V_reg_4127 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_1_15_V_reg_4132 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_2_0_V_reg_4137 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_2_1_V_reg_4142 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_2_2_V_reg_4147 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_2_3_V_reg_4152 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_2_4_V_reg_4157 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_2_5_V_reg_4162 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_2_6_V_reg_4167 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_2_7_V_reg_4172 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_2_8_V_reg_4177 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_2_9_V_reg_4182 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_2_10_V_reg_4187 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_2_11_V_reg_4192 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_2_12_V_reg_4197 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_2_13_V_reg_4202 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_2_14_V_reg_4207 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_2_15_V_reg_4212 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_3_0_V_reg_4217 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_3_1_V_reg_4222 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_3_2_V_reg_4227 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_3_3_V_reg_4232 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_3_4_V_reg_4237 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_3_5_V_reg_4242 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_3_6_V_reg_4247 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_3_7_V_reg_4252 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_3_8_V_reg_4257 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_3_9_V_reg_4262 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_3_10_V_reg_4267 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_3_11_V_reg_4272 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_3_12_V_reg_4277 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_3_13_V_reg_4282 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_3_14_V_reg_4287 : STD_LOGIC_VECTOR (25 downto 0);
    signal wpacks_3_15_V_reg_4292 : STD_LOGIC_VECTOR (25 downto 0);
    signal ipack_0_V_fu_2122_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ipack_1_V_fu_2134_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ipack_2_V_fu_2146_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ipack_3_V_fu_2158_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ipack_4_V_fu_2170_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ipack_5_V_fu_2182_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ipack_6_V_fu_2194_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ipack_7_V_fu_2206_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ipack_8_V_fu_2218_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ipack_9_V_fu_2230_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ipack_10_V_fu_2242_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ipack_11_V_fu_2254_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ipack_12_V_fu_2266_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ipack_13_V_fu_2278_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ipack_14_V_fu_2290_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ipack_15_V_fu_2302_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_simd_MAC_2_fu_811_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_simd_MAC_2_fu_811_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_simd_MAC_2_fu_811_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_simd_MAC_2_fu_811_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_reg_4425_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_reg_4425_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal firPartialRes0_0_V_reg_4431 : STD_LOGIC_VECTOR (15 downto 0);
    signal firPartial3_V_0_i_reg_4437 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_simd_MAC_2_fu_847_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_simd_MAC_2_fu_847_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_simd_MAC_2_fu_847_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_simd_MAC_2_fu_847_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_reg_4443_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret2_reg_4443_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal firPartialRes0_1_V_reg_4449 : STD_LOGIC_VECTOR (15 downto 0);
    signal firPartial3_V_0_1_i_reg_4455 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_simd_MAC_2_fu_883_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_simd_MAC_2_fu_883_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_simd_MAC_2_fu_883_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_simd_MAC_2_fu_883_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_reg_4461_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_reg_4461_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal firPartialRes0_2_V_reg_4467 : STD_LOGIC_VECTOR (15 downto 0);
    signal firPartial3_V_0_2_i_reg_4473 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_simd_MAC_2_fu_919_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_simd_MAC_2_fu_919_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_simd_MAC_2_fu_919_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_simd_MAC_2_fu_919_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_reg_4479_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_reg_4479_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal firPartialRes0_3_V_reg_4485 : STD_LOGIC_VECTOR (15 downto 0);
    signal firPartial3_V_0_3_i_reg_4491 : STD_LOGIC_VECTOR (15 downto 0);
    signal outPartialArr0_0_V_fu_2445_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal outPartialArr0_0_V_reg_4497 : STD_LOGIC_VECTOR (15 downto 0);
    signal outPartialArr1_0_V_fu_2451_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal outPartialArr1_0_V_reg_4502 : STD_LOGIC_VECTOR (15 downto 0);
    signal outPartialArr0_1_V_fu_2503_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal outPartialArr0_1_V_reg_4507 : STD_LOGIC_VECTOR (15 downto 0);
    signal outPartialArr1_1_V_fu_2509_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal outPartialArr1_1_V_reg_4512 : STD_LOGIC_VECTOR (15 downto 0);
    signal outPartialArr0_2_V_fu_2561_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal outPartialArr0_2_V_reg_4517 : STD_LOGIC_VECTOR (15 downto 0);
    signal outPartialArr1_2_V_fu_2567_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal outPartialArr1_2_V_reg_4522 : STD_LOGIC_VECTOR (15 downto 0);
    signal outPartialArr0_3_V_fu_2619_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal outPartialArr0_3_V_reg_4527 : STD_LOGIC_VECTOR (15 downto 0);
    signal outPartialArr1_3_V_fu_2625_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal outPartialArr1_3_V_reg_4532 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_fu_3286_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_reg_4537 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_24_fu_3292_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_24_reg_4542 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_27_fu_3298_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_27_reg_4547 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_30_fu_3304_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_30_reg_4553 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_33_fu_3310_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_33_reg_4559 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_36_fu_3316_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_36_reg_4564 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_39_fu_3322_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_39_reg_4569 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_42_fu_3328_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_42_reg_4574 : STD_LOGIC_VECTOR (27 downto 0);
    signal res_V_fu_2826_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_reg_4579 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_4_fu_2889_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_4_reg_4584 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_5_fu_2951_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_5_reg_4589 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_6_fu_3013_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_6_reg_4594 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_7_fu_3076_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_7_reg_4599 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_8_fu_3139_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_8_reg_4604 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_9_fu_3202_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_9_reg_4609 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_10_fu_3265_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal res_V_10_reg_4614 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter1_state5 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal grp_simd_MAC_2_fu_811_ap_ce : STD_LOGIC;
    signal ap_block_state4_pp0_stage0_iter0_ignore_call255 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1_ignore_call255 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2_ignore_call255 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3_ignore_call255 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter4_ignore_call255 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter5_ignore_call255 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter6_ignore_call255 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter7_ignore_call255 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter8_ignore_call255 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter9_ignore_call255 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter10_ignore_call255 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp339 : BOOLEAN;
    signal grp_simd_MAC_2_fu_847_ap_ce : STD_LOGIC;
    signal ap_block_state4_pp0_stage0_iter0_ignore_call268 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1_ignore_call268 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2_ignore_call268 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3_ignore_call268 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter4_ignore_call268 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter5_ignore_call268 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter6_ignore_call268 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter7_ignore_call268 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter8_ignore_call268 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter9_ignore_call268 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter10_ignore_call268 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp340 : BOOLEAN;
    signal grp_simd_MAC_2_fu_883_ap_ce : STD_LOGIC;
    signal ap_block_state4_pp0_stage0_iter0_ignore_call281 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1_ignore_call281 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2_ignore_call281 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3_ignore_call281 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter4_ignore_call281 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter5_ignore_call281 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter6_ignore_call281 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter7_ignore_call281 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter8_ignore_call281 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter9_ignore_call281 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter10_ignore_call281 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp341 : BOOLEAN;
    signal grp_simd_MAC_2_fu_919_ap_ce : STD_LOGIC;
    signal ap_block_state4_pp0_stage0_iter0_ignore_call294 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1_ignore_call294 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2_ignore_call294 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3_ignore_call294 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter4_ignore_call294 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter5_ignore_call294 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter6_ignore_call294 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter7_ignore_call294 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter8_ignore_call294 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter9_ignore_call294 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter10_ignore_call294 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp342 : BOOLEAN;
    signal call_ret49_i_pack_weight_data_2_fu_955_ap_ready : STD_LOGIC;
    signal call_ret49_i_pack_weight_data_2_fu_955_ap_return_0 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret49_i_pack_weight_data_2_fu_955_ap_return_1 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret49_i_pack_weight_data_2_fu_955_ap_return_2 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret49_i_pack_weight_data_2_fu_955_ap_return_3 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret49_i_pack_weight_data_2_fu_955_ap_return_4 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret49_i_pack_weight_data_2_fu_955_ap_return_5 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret49_i_pack_weight_data_2_fu_955_ap_return_6 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret49_i_pack_weight_data_2_fu_955_ap_return_7 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret49_i_pack_weight_data_2_fu_955_ap_return_8 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret49_i_pack_weight_data_2_fu_955_ap_return_9 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret49_i_pack_weight_data_2_fu_955_ap_return_10 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret49_i_pack_weight_data_2_fu_955_ap_return_11 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret49_i_pack_weight_data_2_fu_955_ap_return_12 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret49_i_pack_weight_data_2_fu_955_ap_return_13 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret49_i_pack_weight_data_2_fu_955_ap_return_14 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret49_i_pack_weight_data_2_fu_955_ap_return_15 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret50_i_pack_weight_data_2_fu_965_ap_ready : STD_LOGIC;
    signal call_ret50_i_pack_weight_data_2_fu_965_w0_V : STD_LOGIC_VECTOR (63 downto 0);
    signal call_ret50_i_pack_weight_data_2_fu_965_ap_return_0 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret50_i_pack_weight_data_2_fu_965_ap_return_1 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret50_i_pack_weight_data_2_fu_965_ap_return_2 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret50_i_pack_weight_data_2_fu_965_ap_return_3 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret50_i_pack_weight_data_2_fu_965_ap_return_4 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret50_i_pack_weight_data_2_fu_965_ap_return_5 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret50_i_pack_weight_data_2_fu_965_ap_return_6 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret50_i_pack_weight_data_2_fu_965_ap_return_7 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret50_i_pack_weight_data_2_fu_965_ap_return_8 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret50_i_pack_weight_data_2_fu_965_ap_return_9 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret50_i_pack_weight_data_2_fu_965_ap_return_10 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret50_i_pack_weight_data_2_fu_965_ap_return_11 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret50_i_pack_weight_data_2_fu_965_ap_return_12 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret50_i_pack_weight_data_2_fu_965_ap_return_13 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret50_i_pack_weight_data_2_fu_965_ap_return_14 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret50_i_pack_weight_data_2_fu_965_ap_return_15 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret51_i_pack_weight_data_2_fu_974_ap_ready : STD_LOGIC;
    signal call_ret51_i_pack_weight_data_2_fu_974_ap_return_0 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret51_i_pack_weight_data_2_fu_974_ap_return_1 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret51_i_pack_weight_data_2_fu_974_ap_return_2 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret51_i_pack_weight_data_2_fu_974_ap_return_3 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret51_i_pack_weight_data_2_fu_974_ap_return_4 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret51_i_pack_weight_data_2_fu_974_ap_return_5 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret51_i_pack_weight_data_2_fu_974_ap_return_6 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret51_i_pack_weight_data_2_fu_974_ap_return_7 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret51_i_pack_weight_data_2_fu_974_ap_return_8 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret51_i_pack_weight_data_2_fu_974_ap_return_9 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret51_i_pack_weight_data_2_fu_974_ap_return_10 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret51_i_pack_weight_data_2_fu_974_ap_return_11 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret51_i_pack_weight_data_2_fu_974_ap_return_12 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret51_i_pack_weight_data_2_fu_974_ap_return_13 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret51_i_pack_weight_data_2_fu_974_ap_return_14 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret51_i_pack_weight_data_2_fu_974_ap_return_15 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret52_i_pack_weight_data_2_fu_984_ap_ready : STD_LOGIC;
    signal call_ret52_i_pack_weight_data_2_fu_984_ap_return_0 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret52_i_pack_weight_data_2_fu_984_ap_return_1 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret52_i_pack_weight_data_2_fu_984_ap_return_2 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret52_i_pack_weight_data_2_fu_984_ap_return_3 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret52_i_pack_weight_data_2_fu_984_ap_return_4 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret52_i_pack_weight_data_2_fu_984_ap_return_5 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret52_i_pack_weight_data_2_fu_984_ap_return_6 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret52_i_pack_weight_data_2_fu_984_ap_return_7 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret52_i_pack_weight_data_2_fu_984_ap_return_8 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret52_i_pack_weight_data_2_fu_984_ap_return_9 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret52_i_pack_weight_data_2_fu_984_ap_return_10 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret52_i_pack_weight_data_2_fu_984_ap_return_11 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret52_i_pack_weight_data_2_fu_984_ap_return_12 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret52_i_pack_weight_data_2_fu_984_ap_return_13 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret52_i_pack_weight_data_2_fu_984_ap_return_14 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret52_i_pack_weight_data_2_fu_984_ap_return_15 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln458_fu_1047_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln458_2_fu_1240_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln404_6_fu_1345_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal firPartialRes0_V_0_3_fu_306 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln398_9_fu_2431_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal firPartialRes0_V_1_3_fu_310 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln398_13_fu_2489_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal firPartialRes0_V_2_3_fu_314 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln398_17_fu_2547_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal firPartialRes0_V_3_3_fu_318 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln398_21_fu_2605_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal firPartialRes1_0_V_2_fu_322 : STD_LOGIC_VECTOR (15 downto 0);
    signal firPartialRes1_0_V_fu_2438_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal firPartialRes1_1_V_2_fu_326 : STD_LOGIC_VECTOR (15 downto 0);
    signal firPartialRes1_1_V_fu_2496_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal firPartialRes1_2_V_1_fu_330 : STD_LOGIC_VECTOR (15 downto 0);
    signal firPartialRes1_2_V_fu_2554_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal firPartialRes1_3_V_1_fu_334 : STD_LOGIC_VECTOR (15 downto 0);
    signal firPartialRes1_3_V_fu_2612_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal outPartialArr0_0_V_2_fu_338 : STD_LOGIC_VECTOR (15 downto 0);
    signal outPartialArr0_1_V_2_fu_342 : STD_LOGIC_VECTOR (15 downto 0);
    signal outPartialArr0_2_V_1_fu_346 : STD_LOGIC_VECTOR (15 downto 0);
    signal outPartialArr0_3_V_1_fu_350 : STD_LOGIC_VECTOR (15 downto 0);
    signal outPartialArr1_0_V_1_fu_354 : STD_LOGIC_VECTOR (15 downto 0);
    signal outPartialArr1_1_V_1_fu_358 : STD_LOGIC_VECTOR (15 downto 0);
    signal outPartialArr1_2_V_1_fu_362 : STD_LOGIC_VECTOR (15 downto 0);
    signal outPartialArr1_3_V_1_fu_366 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal shl_ln392_fu_994_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln392_2_fu_1000_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1015_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1015_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln404_fu_1025_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln6_fu_1029_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln404_fu_1037_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln393_fu_1021_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln393_fu_1076_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln394_2_fu_1126_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln393_2_fu_1140_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln399_fu_1184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln395_fu_1195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln404_mid1_fu_1216_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln404_5_fu_1223_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln393_1_fu_1213_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln404_2_fu_1227_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln393_18_fu_1178_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln393_2_fu_1251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln393_fu_1190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln393_2_fu_1256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln393_5_fu_1201_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln393_31_fu_1206_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln393_8_fu_1267_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln399_fu_1279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln399_2_fu_1284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_fu_1273_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln399_3_fu_1297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln393_7_fu_1261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln399_4_fu_1323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln399_2_fu_1303_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln393_32_fu_1233_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln395_fu_1319_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln404_fu_1335_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln404_fu_1341_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln393_19_fu_1367_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_20_fu_1373_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln1353_15_fu_1453_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_21_fu_1379_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_22_fu_1385_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln393_23_fu_1391_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln1353_16_fu_1480_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_24_fu_1397_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_25_fu_1403_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln393_26_fu_1409_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln1353_17_fu_1507_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_27_fu_1415_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln393_28_fu_1421_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln393_29_fu_1427_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln1353_18_fu_1534_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln393_30_fu_1433_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal o_clear_fu_2394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal firPartialRes0_0_V_2_fu_2405_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln700_fu_2410_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln398_8_fu_2423_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln398_fu_2415_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal firPartialRes0_1_V_2_fu_2463_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln700_106_fu_2468_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln398_12_fu_2481_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln398_11_fu_2473_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal firPartialRes0_2_V_1_fu_2521_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln700_108_fu_2526_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln398_16_fu_2539_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln398_15_fu_2531_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal firPartialRes0_3_V_1_fu_2579_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln700_110_fu_2584_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln398_20_fu_2597_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln398_19_fu_2589_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln393_fu_2747_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal sext_ln1352_fu_2771_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_45_fu_2774_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal sext_ln393_4_fu_2750_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_23_fu_2786_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_fu_2792_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln895_30_fu_2802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln_fu_2808_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln895_fu_2780_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln192_fu_2818_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1352_4_fu_2834_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_46_fu_2837_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_26_fu_2849_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_47_fu_2855_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln895_32_fu_2865_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln214_s_fu_2871_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln895_31_fu_2843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln192_4_fu_2881_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln393_5_fu_2753_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln1352_5_fu_2897_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal ret_V_47_fu_2900_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln393_6_fu_2756_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_29_fu_2912_p2 : STD_LOGIC_VECTOR (28 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of ret_V_29_fu_2912_p2 : signal is "no";
    signal tmp_48_fu_2917_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln895_34_fu_2927_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln214_3_fu_2933_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln895_33_fu_2906_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln192_5_fu_2943_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1352_6_fu_2959_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal ret_V_48_fu_2962_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal ret_V_32_fu_2974_p2 : STD_LOGIC_VECTOR (28 downto 0);
    attribute use_dsp48 of ret_V_32_fu_2974_p2 : signal is "no";
    signal tmp_49_fu_2979_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln895_36_fu_2989_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln214_4_fu_2995_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln895_35_fu_2968_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln192_6_fu_3005_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln393_7_fu_2759_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1352_7_fu_3021_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_49_fu_3024_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln393_8_fu_2762_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_35_fu_3036_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_50_fu_3042_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln895_38_fu_3052_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln214_5_fu_3058_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln895_37_fu_3030_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln192_7_fu_3068_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1352_8_fu_3084_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_50_fu_3087_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_38_fu_3099_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_51_fu_3105_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln895_40_fu_3115_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln214_6_fu_3121_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln895_39_fu_3093_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln192_8_fu_3131_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln393_9_fu_2765_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal sext_ln1352_9_fu_3147_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_51_fu_3150_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal sext_ln393_10_fu_2768_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_41_fu_3162_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_52_fu_3168_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln895_42_fu_3178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln214_7_fu_3184_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln895_41_fu_3156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln192_9_fu_3194_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1352_10_fu_3210_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_52_fu_3213_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_44_fu_3225_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_53_fu_3231_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln895_44_fu_3241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln214_8_fu_3247_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln895_43_fu_3219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln192_10_fu_3257_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ret_V_fu_3286_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln393_2_fu_2711_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_24_fu_3292_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_27_fu_3298_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln393_3_fu_2714_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_V_30_fu_3304_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_33_fu_3310_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln393_4_fu_2717_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal ret_V_36_fu_3316_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_39_fu_3322_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln393_5_fu_2720_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal ret_V_42_fu_3328_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1015_p10 : STD_LOGIC_VECTOR (42 downto 0);

    component simd_MAC_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        wpack_0_V_read : IN STD_LOGIC_VECTOR (25 downto 0);
        wpack_1_V_read : IN STD_LOGIC_VECTOR (25 downto 0);
        wpack_2_V_read : IN STD_LOGIC_VECTOR (25 downto 0);
        wpack_3_V_read : IN STD_LOGIC_VECTOR (25 downto 0);
        wpack_4_V_read : IN STD_LOGIC_VECTOR (25 downto 0);
        wpack_5_V_read : IN STD_LOGIC_VECTOR (25 downto 0);
        wpack_6_V_read : IN STD_LOGIC_VECTOR (25 downto 0);
        wpack_7_V_read : IN STD_LOGIC_VECTOR (25 downto 0);
        wpack_8_V_read : IN STD_LOGIC_VECTOR (25 downto 0);
        wpack_9_V_read : IN STD_LOGIC_VECTOR (25 downto 0);
        wpack_10_V_read : IN STD_LOGIC_VECTOR (25 downto 0);
        wpack_11_V_read : IN STD_LOGIC_VECTOR (25 downto 0);
        wpack_12_V_read : IN STD_LOGIC_VECTOR (25 downto 0);
        wpack_13_V_read : IN STD_LOGIC_VECTOR (25 downto 0);
        wpack_14_V_read : IN STD_LOGIC_VECTOR (25 downto 0);
        wpack_15_V_read : IN STD_LOGIC_VECTOR (25 downto 0);
        ipack_0_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
        ipack_1_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
        ipack_2_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
        ipack_3_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
        ipack_4_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
        ipack_5_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
        ipack_6_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
        ipack_7_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
        ipack_8_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
        ipack_9_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
        ipack_10_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
        ipack_11_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
        ipack_12_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
        ipack_13_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
        ipack_14_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
        ipack_15_V_read : IN STD_LOGIC_VECTOR (14 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component pack_weight_data_2 IS
    port (
        ap_ready : OUT STD_LOGIC;
        w2_V : IN STD_LOGIC_VECTOR (63 downto 0);
        w1_V : IN STD_LOGIC_VECTOR (63 downto 0);
        w0_V : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (25 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (25 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (25 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (25 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (25 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (25 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (25 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (25 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (25 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (25 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (25 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (25 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (25 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (25 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (25 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component ultra_net_mul_12nbHp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (42 downto 0) );
    end component;


    component ultra_net_mul_mulbIp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component ultra_net_mul_mulbJp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (28 downto 0) );
    end component;


    component ultra_net_mul_mulbKp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component convDSPOpt_5_convbnm IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component convDSPOpt_5_convbom IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (22 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component convDSPOpt_5_convbpm IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component convDSPOpt_5_convbqm IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (22 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component convDSPOpt_5_convbrm IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component convDSPOpt_5_convbsm IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (20 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component convDSPOpt_5_convbtn IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component convDSPOpt_5_convbun IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (22 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component convDSPOpt_5_convbvn IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component convDSPOpt_5_convbwn IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component convDSPOpt_5_convbxn IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component convDSPOpt_5_convbyn IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component convDSPOpt_5_convbzo IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component convDSPOpt_5_convbAo IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (62 downto 0) );
    end component;


    component convDSPOpt_5_convbBo IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component convDSPOpt_5_convbCo IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component convDSPOpt_5_convbDo IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component convDSPOpt_5_convbEo IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component convDSPOpt_5_convbFp IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component convDSPOpt_5_convbGp IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    conv_1_inc_new_V_0_U : component convDSPOpt_5_convbnm
    generic map (
        DataWidth => 12,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_inc_new_V_0_address0,
        ce0 => conv_1_inc_new_V_0_ce0,
        q0 => conv_1_inc_new_V_0_q0,
        address1 => conv_1_inc_new_V_0_address1,
        ce1 => conv_1_inc_new_V_0_ce1,
        q1 => conv_1_inc_new_V_0_q1);

    conv_1_bias_new_V_0_U : component convDSPOpt_5_convbom
    generic map (
        DataWidth => 23,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_bias_new_V_0_address0,
        ce0 => conv_1_bias_new_V_0_ce0,
        q0 => conv_1_bias_new_V_0_q0,
        address1 => conv_1_bias_new_V_0_address1,
        ce1 => conv_1_bias_new_V_0_ce1,
        q1 => conv_1_bias_new_V_0_q1);

    conv_1_inc_new_V_1_U : component convDSPOpt_5_convbpm
    generic map (
        DataWidth => 13,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_inc_new_V_1_address0,
        ce0 => conv_1_inc_new_V_1_ce0,
        q0 => conv_1_inc_new_V_1_q0,
        address1 => conv_1_inc_new_V_1_address1,
        ce1 => conv_1_inc_new_V_1_ce1,
        q1 => conv_1_inc_new_V_1_q1);

    conv_1_bias_new_V_1_U : component convDSPOpt_5_convbqm
    generic map (
        DataWidth => 23,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_bias_new_V_1_address0,
        ce0 => conv_1_bias_new_V_1_ce0,
        q0 => conv_1_bias_new_V_1_q0,
        address1 => conv_1_bias_new_V_1_address1,
        ce1 => conv_1_bias_new_V_1_ce1,
        q1 => conv_1_bias_new_V_1_q1);

    conv_1_inc_new_V_2_U : component convDSPOpt_5_convbrm
    generic map (
        DataWidth => 11,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_inc_new_V_2_address0,
        ce0 => conv_1_inc_new_V_2_ce0,
        q0 => conv_1_inc_new_V_2_q0,
        address1 => conv_1_inc_new_V_2_address1,
        ce1 => conv_1_inc_new_V_2_ce1,
        q1 => conv_1_inc_new_V_2_q1);

    conv_1_bias_new_V_2_U : component convDSPOpt_5_convbsm
    generic map (
        DataWidth => 21,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_bias_new_V_2_address0,
        ce0 => conv_1_bias_new_V_2_ce0,
        q0 => conv_1_bias_new_V_2_q0,
        address1 => conv_1_bias_new_V_2_address1,
        ce1 => conv_1_bias_new_V_2_ce1,
        q1 => conv_1_bias_new_V_2_q1);

    conv_1_inc_new_V_3_U : component convDSPOpt_5_convbtn
    generic map (
        DataWidth => 12,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_inc_new_V_3_address0,
        ce0 => conv_1_inc_new_V_3_ce0,
        q0 => conv_1_inc_new_V_3_q0,
        address1 => conv_1_inc_new_V_3_address1,
        ce1 => conv_1_inc_new_V_3_ce1,
        q1 => conv_1_inc_new_V_3_q1);

    conv_1_bias_new_V_3_U : component convDSPOpt_5_convbun
    generic map (
        DataWidth => 23,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_bias_new_V_3_address0,
        ce0 => conv_1_bias_new_V_3_ce0,
        q0 => conv_1_bias_new_V_3_q0,
        address1 => conv_1_bias_new_V_3_address1,
        ce1 => conv_1_bias_new_V_3_ce1,
        q1 => conv_1_bias_new_V_3_q1);

    conv_1_w_new_V_0_2_U : component convDSPOpt_5_convbvn
    generic map (
        DataWidth => 64,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_w_new_V_0_2_address0,
        ce0 => conv_1_w_new_V_0_2_ce0,
        q0 => conv_1_w_new_V_0_2_q0);

    conv_1_w_new_V_0_1_U : component convDSPOpt_5_convbwn
    generic map (
        DataWidth => 64,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_w_new_V_0_1_address0,
        ce0 => conv_1_w_new_V_0_1_ce0,
        q0 => conv_1_w_new_V_0_1_q0);

    conv_1_w_new_V_0_0_U : component convDSPOpt_5_convbxn
    generic map (
        DataWidth => 64,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_w_new_V_0_0_address0,
        ce0 => conv_1_w_new_V_0_0_ce0,
        q0 => conv_1_w_new_V_0_0_q0);

    conv_1_w_new_V_1_2_U : component convDSPOpt_5_convbyn
    generic map (
        DataWidth => 64,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_w_new_V_1_2_address0,
        ce0 => conv_1_w_new_V_1_2_ce0,
        q0 => conv_1_w_new_V_1_2_q0);

    conv_1_w_new_V_1_1_U : component convDSPOpt_5_convbzo
    generic map (
        DataWidth => 64,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_w_new_V_1_1_address0,
        ce0 => conv_1_w_new_V_1_1_ce0,
        q0 => conv_1_w_new_V_1_1_q0);

    conv_1_w_new_V_1_0_U : component convDSPOpt_5_convbAo
    generic map (
        DataWidth => 63,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_w_new_V_1_0_address0,
        ce0 => conv_1_w_new_V_1_0_ce0,
        q0 => conv_1_w_new_V_1_0_q0);

    conv_1_w_new_V_2_2_U : component convDSPOpt_5_convbBo
    generic map (
        DataWidth => 64,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_w_new_V_2_2_address0,
        ce0 => conv_1_w_new_V_2_2_ce0,
        q0 => conv_1_w_new_V_2_2_q0);

    conv_1_w_new_V_2_1_U : component convDSPOpt_5_convbCo
    generic map (
        DataWidth => 64,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_w_new_V_2_1_address0,
        ce0 => conv_1_w_new_V_2_1_ce0,
        q0 => conv_1_w_new_V_2_1_q0);

    conv_1_w_new_V_2_0_U : component convDSPOpt_5_convbDo
    generic map (
        DataWidth => 64,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_w_new_V_2_0_address0,
        ce0 => conv_1_w_new_V_2_0_ce0,
        q0 => conv_1_w_new_V_2_0_q0);

    conv_1_w_new_V_3_2_U : component convDSPOpt_5_convbEo
    generic map (
        DataWidth => 64,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_w_new_V_3_2_address0,
        ce0 => conv_1_w_new_V_3_2_ce0,
        q0 => conv_1_w_new_V_3_2_q0);

    conv_1_w_new_V_3_1_U : component convDSPOpt_5_convbFp
    generic map (
        DataWidth => 64,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_w_new_V_3_1_address0,
        ce0 => conv_1_w_new_V_3_1_ce0,
        q0 => conv_1_w_new_V_3_1_q0);

    conv_1_w_new_V_3_0_U : component convDSPOpt_5_convbGp
    generic map (
        DataWidth => 64,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_w_new_V_3_0_address0,
        ce0 => conv_1_w_new_V_3_0_ce0,
        q0 => conv_1_w_new_V_3_0_q0);

    grp_simd_MAC_2_fu_811 : component simd_MAC_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        wpack_0_V_read => wpacks_0_0_V_reg_3977,
        wpack_1_V_read => wpacks_0_1_V_reg_3982,
        wpack_2_V_read => wpacks_0_2_V_reg_3987,
        wpack_3_V_read => wpacks_0_3_V_reg_3992,
        wpack_4_V_read => wpacks_0_4_V_reg_3997,
        wpack_5_V_read => wpacks_0_5_V_reg_4002,
        wpack_6_V_read => wpacks_0_6_V_reg_4007,
        wpack_7_V_read => wpacks_0_7_V_reg_4012,
        wpack_8_V_read => wpacks_0_8_V_reg_4017,
        wpack_9_V_read => wpacks_0_9_V_reg_4022,
        wpack_10_V_read => wpacks_0_10_V_reg_4027,
        wpack_11_V_read => wpacks_0_11_V_reg_4032,
        wpack_12_V_read => wpacks_0_12_V_reg_4037,
        wpack_13_V_read => wpacks_0_13_V_reg_4042,
        wpack_14_V_read => wpacks_0_14_V_reg_4047,
        wpack_15_V_read => wpacks_0_15_V_reg_4052,
        ipack_0_V_read => ipack_0_V_fu_2122_p4,
        ipack_1_V_read => ipack_1_V_fu_2134_p4,
        ipack_2_V_read => ipack_2_V_fu_2146_p4,
        ipack_3_V_read => ipack_3_V_fu_2158_p4,
        ipack_4_V_read => ipack_4_V_fu_2170_p4,
        ipack_5_V_read => ipack_5_V_fu_2182_p4,
        ipack_6_V_read => ipack_6_V_fu_2194_p4,
        ipack_7_V_read => ipack_7_V_fu_2206_p4,
        ipack_8_V_read => ipack_8_V_fu_2218_p4,
        ipack_9_V_read => ipack_9_V_fu_2230_p4,
        ipack_10_V_read => ipack_10_V_fu_2242_p4,
        ipack_11_V_read => ipack_11_V_fu_2254_p4,
        ipack_12_V_read => ipack_12_V_fu_2266_p4,
        ipack_13_V_read => ipack_13_V_fu_2278_p4,
        ipack_14_V_read => ipack_14_V_fu_2290_p4,
        ipack_15_V_read => ipack_15_V_fu_2302_p4,
        ap_return_0 => grp_simd_MAC_2_fu_811_ap_return_0,
        ap_return_1 => grp_simd_MAC_2_fu_811_ap_return_1,
        ap_return_2 => grp_simd_MAC_2_fu_811_ap_return_2,
        ap_return_3 => grp_simd_MAC_2_fu_811_ap_return_3,
        ap_ce => grp_simd_MAC_2_fu_811_ap_ce);

    grp_simd_MAC_2_fu_847 : component simd_MAC_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        wpack_0_V_read => wpacks_1_0_V_reg_4057,
        wpack_1_V_read => wpacks_1_1_V_reg_4062,
        wpack_2_V_read => wpacks_1_2_V_reg_4067,
        wpack_3_V_read => wpacks_1_3_V_reg_4072,
        wpack_4_V_read => wpacks_1_4_V_reg_4077,
        wpack_5_V_read => wpacks_1_5_V_reg_4082,
        wpack_6_V_read => wpacks_1_6_V_reg_4087,
        wpack_7_V_read => wpacks_1_7_V_reg_4092,
        wpack_8_V_read => wpacks_1_8_V_reg_4097,
        wpack_9_V_read => wpacks_1_9_V_reg_4102,
        wpack_10_V_read => wpacks_1_10_V_reg_4107,
        wpack_11_V_read => wpacks_1_11_V_reg_4112,
        wpack_12_V_read => wpacks_1_12_V_reg_4117,
        wpack_13_V_read => wpacks_1_13_V_reg_4122,
        wpack_14_V_read => wpacks_1_14_V_reg_4127,
        wpack_15_V_read => wpacks_1_15_V_reg_4132,
        ipack_0_V_read => ipack_0_V_fu_2122_p4,
        ipack_1_V_read => ipack_1_V_fu_2134_p4,
        ipack_2_V_read => ipack_2_V_fu_2146_p4,
        ipack_3_V_read => ipack_3_V_fu_2158_p4,
        ipack_4_V_read => ipack_4_V_fu_2170_p4,
        ipack_5_V_read => ipack_5_V_fu_2182_p4,
        ipack_6_V_read => ipack_6_V_fu_2194_p4,
        ipack_7_V_read => ipack_7_V_fu_2206_p4,
        ipack_8_V_read => ipack_8_V_fu_2218_p4,
        ipack_9_V_read => ipack_9_V_fu_2230_p4,
        ipack_10_V_read => ipack_10_V_fu_2242_p4,
        ipack_11_V_read => ipack_11_V_fu_2254_p4,
        ipack_12_V_read => ipack_12_V_fu_2266_p4,
        ipack_13_V_read => ipack_13_V_fu_2278_p4,
        ipack_14_V_read => ipack_14_V_fu_2290_p4,
        ipack_15_V_read => ipack_15_V_fu_2302_p4,
        ap_return_0 => grp_simd_MAC_2_fu_847_ap_return_0,
        ap_return_1 => grp_simd_MAC_2_fu_847_ap_return_1,
        ap_return_2 => grp_simd_MAC_2_fu_847_ap_return_2,
        ap_return_3 => grp_simd_MAC_2_fu_847_ap_return_3,
        ap_ce => grp_simd_MAC_2_fu_847_ap_ce);

    grp_simd_MAC_2_fu_883 : component simd_MAC_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        wpack_0_V_read => wpacks_2_0_V_reg_4137,
        wpack_1_V_read => wpacks_2_1_V_reg_4142,
        wpack_2_V_read => wpacks_2_2_V_reg_4147,
        wpack_3_V_read => wpacks_2_3_V_reg_4152,
        wpack_4_V_read => wpacks_2_4_V_reg_4157,
        wpack_5_V_read => wpacks_2_5_V_reg_4162,
        wpack_6_V_read => wpacks_2_6_V_reg_4167,
        wpack_7_V_read => wpacks_2_7_V_reg_4172,
        wpack_8_V_read => wpacks_2_8_V_reg_4177,
        wpack_9_V_read => wpacks_2_9_V_reg_4182,
        wpack_10_V_read => wpacks_2_10_V_reg_4187,
        wpack_11_V_read => wpacks_2_11_V_reg_4192,
        wpack_12_V_read => wpacks_2_12_V_reg_4197,
        wpack_13_V_read => wpacks_2_13_V_reg_4202,
        wpack_14_V_read => wpacks_2_14_V_reg_4207,
        wpack_15_V_read => wpacks_2_15_V_reg_4212,
        ipack_0_V_read => ipack_0_V_fu_2122_p4,
        ipack_1_V_read => ipack_1_V_fu_2134_p4,
        ipack_2_V_read => ipack_2_V_fu_2146_p4,
        ipack_3_V_read => ipack_3_V_fu_2158_p4,
        ipack_4_V_read => ipack_4_V_fu_2170_p4,
        ipack_5_V_read => ipack_5_V_fu_2182_p4,
        ipack_6_V_read => ipack_6_V_fu_2194_p4,
        ipack_7_V_read => ipack_7_V_fu_2206_p4,
        ipack_8_V_read => ipack_8_V_fu_2218_p4,
        ipack_9_V_read => ipack_9_V_fu_2230_p4,
        ipack_10_V_read => ipack_10_V_fu_2242_p4,
        ipack_11_V_read => ipack_11_V_fu_2254_p4,
        ipack_12_V_read => ipack_12_V_fu_2266_p4,
        ipack_13_V_read => ipack_13_V_fu_2278_p4,
        ipack_14_V_read => ipack_14_V_fu_2290_p4,
        ipack_15_V_read => ipack_15_V_fu_2302_p4,
        ap_return_0 => grp_simd_MAC_2_fu_883_ap_return_0,
        ap_return_1 => grp_simd_MAC_2_fu_883_ap_return_1,
        ap_return_2 => grp_simd_MAC_2_fu_883_ap_return_2,
        ap_return_3 => grp_simd_MAC_2_fu_883_ap_return_3,
        ap_ce => grp_simd_MAC_2_fu_883_ap_ce);

    grp_simd_MAC_2_fu_919 : component simd_MAC_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        wpack_0_V_read => wpacks_3_0_V_reg_4217,
        wpack_1_V_read => wpacks_3_1_V_reg_4222,
        wpack_2_V_read => wpacks_3_2_V_reg_4227,
        wpack_3_V_read => wpacks_3_3_V_reg_4232,
        wpack_4_V_read => wpacks_3_4_V_reg_4237,
        wpack_5_V_read => wpacks_3_5_V_reg_4242,
        wpack_6_V_read => wpacks_3_6_V_reg_4247,
        wpack_7_V_read => wpacks_3_7_V_reg_4252,
        wpack_8_V_read => wpacks_3_8_V_reg_4257,
        wpack_9_V_read => wpacks_3_9_V_reg_4262,
        wpack_10_V_read => wpacks_3_10_V_reg_4267,
        wpack_11_V_read => wpacks_3_11_V_reg_4272,
        wpack_12_V_read => wpacks_3_12_V_reg_4277,
        wpack_13_V_read => wpacks_3_13_V_reg_4282,
        wpack_14_V_read => wpacks_3_14_V_reg_4287,
        wpack_15_V_read => wpacks_3_15_V_reg_4292,
        ipack_0_V_read => ipack_0_V_fu_2122_p4,
        ipack_1_V_read => ipack_1_V_fu_2134_p4,
        ipack_2_V_read => ipack_2_V_fu_2146_p4,
        ipack_3_V_read => ipack_3_V_fu_2158_p4,
        ipack_4_V_read => ipack_4_V_fu_2170_p4,
        ipack_5_V_read => ipack_5_V_fu_2182_p4,
        ipack_6_V_read => ipack_6_V_fu_2194_p4,
        ipack_7_V_read => ipack_7_V_fu_2206_p4,
        ipack_8_V_read => ipack_8_V_fu_2218_p4,
        ipack_9_V_read => ipack_9_V_fu_2230_p4,
        ipack_10_V_read => ipack_10_V_fu_2242_p4,
        ipack_11_V_read => ipack_11_V_fu_2254_p4,
        ipack_12_V_read => ipack_12_V_fu_2266_p4,
        ipack_13_V_read => ipack_13_V_fu_2278_p4,
        ipack_14_V_read => ipack_14_V_fu_2290_p4,
        ipack_15_V_read => ipack_15_V_fu_2302_p4,
        ap_return_0 => grp_simd_MAC_2_fu_919_ap_return_0,
        ap_return_1 => grp_simd_MAC_2_fu_919_ap_return_1,
        ap_return_2 => grp_simd_MAC_2_fu_919_ap_return_2,
        ap_return_3 => grp_simd_MAC_2_fu_919_ap_return_3,
        ap_ce => grp_simd_MAC_2_fu_919_ap_ce);

    call_ret49_i_pack_weight_data_2_fu_955 : component pack_weight_data_2
    port map (
        ap_ready => call_ret49_i_pack_weight_data_2_fu_955_ap_ready,
        w2_V => conv_1_w_new_V_0_2_q0,
        w1_V => conv_1_w_new_V_0_1_q0,
        w0_V => conv_1_w_new_V_0_0_q0,
        ap_return_0 => call_ret49_i_pack_weight_data_2_fu_955_ap_return_0,
        ap_return_1 => call_ret49_i_pack_weight_data_2_fu_955_ap_return_1,
        ap_return_2 => call_ret49_i_pack_weight_data_2_fu_955_ap_return_2,
        ap_return_3 => call_ret49_i_pack_weight_data_2_fu_955_ap_return_3,
        ap_return_4 => call_ret49_i_pack_weight_data_2_fu_955_ap_return_4,
        ap_return_5 => call_ret49_i_pack_weight_data_2_fu_955_ap_return_5,
        ap_return_6 => call_ret49_i_pack_weight_data_2_fu_955_ap_return_6,
        ap_return_7 => call_ret49_i_pack_weight_data_2_fu_955_ap_return_7,
        ap_return_8 => call_ret49_i_pack_weight_data_2_fu_955_ap_return_8,
        ap_return_9 => call_ret49_i_pack_weight_data_2_fu_955_ap_return_9,
        ap_return_10 => call_ret49_i_pack_weight_data_2_fu_955_ap_return_10,
        ap_return_11 => call_ret49_i_pack_weight_data_2_fu_955_ap_return_11,
        ap_return_12 => call_ret49_i_pack_weight_data_2_fu_955_ap_return_12,
        ap_return_13 => call_ret49_i_pack_weight_data_2_fu_955_ap_return_13,
        ap_return_14 => call_ret49_i_pack_weight_data_2_fu_955_ap_return_14,
        ap_return_15 => call_ret49_i_pack_weight_data_2_fu_955_ap_return_15);

    call_ret50_i_pack_weight_data_2_fu_965 : component pack_weight_data_2
    port map (
        ap_ready => call_ret50_i_pack_weight_data_2_fu_965_ap_ready,
        w2_V => conv_1_w_new_V_1_2_q0,
        w1_V => conv_1_w_new_V_1_1_q0,
        w0_V => call_ret50_i_pack_weight_data_2_fu_965_w0_V,
        ap_return_0 => call_ret50_i_pack_weight_data_2_fu_965_ap_return_0,
        ap_return_1 => call_ret50_i_pack_weight_data_2_fu_965_ap_return_1,
        ap_return_2 => call_ret50_i_pack_weight_data_2_fu_965_ap_return_2,
        ap_return_3 => call_ret50_i_pack_weight_data_2_fu_965_ap_return_3,
        ap_return_4 => call_ret50_i_pack_weight_data_2_fu_965_ap_return_4,
        ap_return_5 => call_ret50_i_pack_weight_data_2_fu_965_ap_return_5,
        ap_return_6 => call_ret50_i_pack_weight_data_2_fu_965_ap_return_6,
        ap_return_7 => call_ret50_i_pack_weight_data_2_fu_965_ap_return_7,
        ap_return_8 => call_ret50_i_pack_weight_data_2_fu_965_ap_return_8,
        ap_return_9 => call_ret50_i_pack_weight_data_2_fu_965_ap_return_9,
        ap_return_10 => call_ret50_i_pack_weight_data_2_fu_965_ap_return_10,
        ap_return_11 => call_ret50_i_pack_weight_data_2_fu_965_ap_return_11,
        ap_return_12 => call_ret50_i_pack_weight_data_2_fu_965_ap_return_12,
        ap_return_13 => call_ret50_i_pack_weight_data_2_fu_965_ap_return_13,
        ap_return_14 => call_ret50_i_pack_weight_data_2_fu_965_ap_return_14,
        ap_return_15 => call_ret50_i_pack_weight_data_2_fu_965_ap_return_15);

    call_ret51_i_pack_weight_data_2_fu_974 : component pack_weight_data_2
    port map (
        ap_ready => call_ret51_i_pack_weight_data_2_fu_974_ap_ready,
        w2_V => conv_1_w_new_V_2_2_q0,
        w1_V => conv_1_w_new_V_2_1_q0,
        w0_V => conv_1_w_new_V_2_0_q0,
        ap_return_0 => call_ret51_i_pack_weight_data_2_fu_974_ap_return_0,
        ap_return_1 => call_ret51_i_pack_weight_data_2_fu_974_ap_return_1,
        ap_return_2 => call_ret51_i_pack_weight_data_2_fu_974_ap_return_2,
        ap_return_3 => call_ret51_i_pack_weight_data_2_fu_974_ap_return_3,
        ap_return_4 => call_ret51_i_pack_weight_data_2_fu_974_ap_return_4,
        ap_return_5 => call_ret51_i_pack_weight_data_2_fu_974_ap_return_5,
        ap_return_6 => call_ret51_i_pack_weight_data_2_fu_974_ap_return_6,
        ap_return_7 => call_ret51_i_pack_weight_data_2_fu_974_ap_return_7,
        ap_return_8 => call_ret51_i_pack_weight_data_2_fu_974_ap_return_8,
        ap_return_9 => call_ret51_i_pack_weight_data_2_fu_974_ap_return_9,
        ap_return_10 => call_ret51_i_pack_weight_data_2_fu_974_ap_return_10,
        ap_return_11 => call_ret51_i_pack_weight_data_2_fu_974_ap_return_11,
        ap_return_12 => call_ret51_i_pack_weight_data_2_fu_974_ap_return_12,
        ap_return_13 => call_ret51_i_pack_weight_data_2_fu_974_ap_return_13,
        ap_return_14 => call_ret51_i_pack_weight_data_2_fu_974_ap_return_14,
        ap_return_15 => call_ret51_i_pack_weight_data_2_fu_974_ap_return_15);

    call_ret52_i_pack_weight_data_2_fu_984 : component pack_weight_data_2
    port map (
        ap_ready => call_ret52_i_pack_weight_data_2_fu_984_ap_ready,
        w2_V => conv_1_w_new_V_3_2_q0,
        w1_V => conv_1_w_new_V_3_1_q0,
        w0_V => conv_1_w_new_V_3_0_q0,
        ap_return_0 => call_ret52_i_pack_weight_data_2_fu_984_ap_return_0,
        ap_return_1 => call_ret52_i_pack_weight_data_2_fu_984_ap_return_1,
        ap_return_2 => call_ret52_i_pack_weight_data_2_fu_984_ap_return_2,
        ap_return_3 => call_ret52_i_pack_weight_data_2_fu_984_ap_return_3,
        ap_return_4 => call_ret52_i_pack_weight_data_2_fu_984_ap_return_4,
        ap_return_5 => call_ret52_i_pack_weight_data_2_fu_984_ap_return_5,
        ap_return_6 => call_ret52_i_pack_weight_data_2_fu_984_ap_return_6,
        ap_return_7 => call_ret52_i_pack_weight_data_2_fu_984_ap_return_7,
        ap_return_8 => call_ret52_i_pack_weight_data_2_fu_984_ap_return_8,
        ap_return_9 => call_ret52_i_pack_weight_data_2_fu_984_ap_return_9,
        ap_return_10 => call_ret52_i_pack_weight_data_2_fu_984_ap_return_10,
        ap_return_11 => call_ret52_i_pack_weight_data_2_fu_984_ap_return_11,
        ap_return_12 => call_ret52_i_pack_weight_data_2_fu_984_ap_return_12,
        ap_return_13 => call_ret52_i_pack_weight_data_2_fu_984_ap_return_13,
        ap_return_14 => call_ret52_i_pack_weight_data_2_fu_984_ap_return_14,
        ap_return_15 => call_ret52_i_pack_weight_data_2_fu_984_ap_return_15);

    ultra_net_mul_12nbHp_U287 : component ultra_net_mul_12nbHp
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 12,
        din1_WIDTH => 32,
        dout_WIDTH => 43)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1015_p0,
        din1 => grp_fu_1015_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1015_p2);

    ultra_net_mul_mulbIp_U288 : component ultra_net_mul_mulbIp
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 16,
        dout_WIDTH => 28)
    port map (
        din0 => ret_V_fu_3286_p0,
        din1 => outPartialArr0_0_V_reg_4497,
        dout => ret_V_fu_3286_p2);

    ultra_net_mul_mulbIp_U289 : component ultra_net_mul_mulbIp
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 16,
        dout_WIDTH => 28)
    port map (
        din0 => ret_V_24_fu_3292_p0,
        din1 => outPartialArr1_0_V_reg_4502,
        dout => ret_V_24_fu_3292_p2);

    ultra_net_mul_mulbJp_U290 : component ultra_net_mul_mulbJp
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 16,
        dout_WIDTH => 29)
    port map (
        din0 => ret_V_27_fu_3298_p0,
        din1 => outPartialArr0_1_V_reg_4507,
        dout => ret_V_27_fu_3298_p2);

    ultra_net_mul_mulbJp_U291 : component ultra_net_mul_mulbJp
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 16,
        dout_WIDTH => 29)
    port map (
        din0 => ret_V_30_fu_3304_p0,
        din1 => outPartialArr1_1_V_reg_4512,
        dout => ret_V_30_fu_3304_p2);

    ultra_net_mul_mulbKp_U292 : component ultra_net_mul_mulbKp
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 16,
        dout_WIDTH => 27)
    port map (
        din0 => ret_V_33_fu_3310_p0,
        din1 => outPartialArr0_2_V_reg_4517,
        dout => ret_V_33_fu_3310_p2);

    ultra_net_mul_mulbKp_U293 : component ultra_net_mul_mulbKp
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 16,
        dout_WIDTH => 27)
    port map (
        din0 => ret_V_36_fu_3316_p0,
        din1 => outPartialArr1_2_V_reg_4522,
        dout => ret_V_36_fu_3316_p2);

    ultra_net_mul_mulbIp_U294 : component ultra_net_mul_mulbIp
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 16,
        dout_WIDTH => 28)
    port map (
        din0 => ret_V_39_fu_3322_p0,
        din1 => outPartialArr0_3_V_reg_4527,
        dout => ret_V_39_fu_3322_p2);

    ultra_net_mul_mulbIp_U295 : component ultra_net_mul_mulbIp
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 16,
        dout_WIDTH => 28)
    port map (
        din0 => ret_V_42_fu_3328_p0,
        din1 => outPartialArr1_3_V_reg_4532,
        dout => ret_V_42_fu_3328_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((icmp_ln392_fu_1059_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter1_state5)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten239_reg_745_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln392_fu_1059_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten239_reg_745 <= add_ln392_2_fu_1064_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                indvar_flatten239_reg_745 <= ap_const_lv43_0;
            end if; 
        end if;
    end process;

    indvar_flatten53_reg_756_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln392_fu_1059_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten53_reg_756 <= select_ln393_46_fu_1146_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                indvar_flatten53_reg_756 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_778_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln392_fu_1059_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_778 <= select_ln394_2_fu_1132_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                indvar_flatten_reg_778 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    infoldIdx_0_i_reg_800_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln392_reg_3490 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                infoldIdx_0_i_reg_800 <= infoldIdx_fu_1361_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                infoldIdx_0_i_reg_800 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    peIdx_0_i_reg_767_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln392_fu_1059_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                peIdx_0_i_reg_767 <= select_ln393_45_fu_1118_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                peIdx_0_i_reg_767 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    w_0_i_reg_789_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln392_reg_3490 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                w_0_i_reg_789 <= select_ln394_fu_1311_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                w_0_i_reg_789 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln393_6_reg_3529) and (icmp_ln393_reg_3499 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln1353_12_reg_3623 <= add_ln1353_12_fu_1160_p2;
                add_ln1353_13_reg_3628 <= add_ln1353_13_fu_1166_p2;
                add_ln1353_14_reg_3633 <= add_ln1353_14_fu_1172_p2;
                add_ln1353_reg_3618 <= add_ln1353_fu_1154_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((reps_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    add_ln392_reg_3430(31 downto 4) <= add_ln392_fu_1006_p2(31 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln392_fu_1059_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln393_6_reg_3529 <= and_ln393_6_fu_1096_p2;
                icmp_ln393_reg_3499 <= icmp_ln393_fu_1070_p2;
                icmp_ln394_reg_3524 <= icmp_ln394_fu_1090_p2;
                or_ln393_reg_3553 <= or_ln393_fu_1108_p2;
                peIdx_reg_3547 <= peIdx_fu_1102_p2;
                trunc_ln404_2_reg_3558 <= trunc_ln404_2_fu_1114_p1;
                xor_ln393_reg_3518 <= xor_ln393_fu_1084_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln393_6_reg_3529_pp0_iter1_reg <= and_ln393_6_reg_3529;
                icmp_ln392_reg_3490 <= icmp_ln392_fu_1059_p2;
                icmp_ln392_reg_3490_pp0_iter1_reg <= icmp_ln392_reg_3490;
                icmp_ln393_reg_3499_pp0_iter1_reg <= icmp_ln393_reg_3499;
                sub_ln404_reg_3445 <= sub_ln404_fu_1041_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                bound74_reg_3440 <= grp_fu_1015_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln392_reg_3490_pp0_iter5_reg = ap_const_lv1_0))) then
                call_ret1_reg_4425_0 <= grp_simd_MAC_2_fu_811_ap_return_0;
                call_ret1_reg_4425_1 <= grp_simd_MAC_2_fu_811_ap_return_1;
                call_ret2_reg_4443_0 <= grp_simd_MAC_2_fu_847_ap_return_0;
                call_ret2_reg_4443_1 <= grp_simd_MAC_2_fu_847_ap_return_1;
                call_ret3_reg_4461_0 <= grp_simd_MAC_2_fu_883_ap_return_0;
                call_ret3_reg_4461_1 <= grp_simd_MAC_2_fu_883_ap_return_1;
                call_ret_reg_4479_0 <= grp_simd_MAC_2_fu_919_ap_return_0;
                call_ret_reg_4479_1 <= grp_simd_MAC_2_fu_919_ap_return_1;
                firPartial3_V_0_1_i_reg_4455 <= grp_simd_MAC_2_fu_847_ap_return_3;
                firPartial3_V_0_2_i_reg_4473 <= grp_simd_MAC_2_fu_883_ap_return_3;
                firPartial3_V_0_3_i_reg_4491 <= grp_simd_MAC_2_fu_919_ap_return_3;
                firPartial3_V_0_i_reg_4437 <= grp_simd_MAC_2_fu_811_ap_return_3;
                firPartialRes0_0_V_reg_4431 <= grp_simd_MAC_2_fu_811_ap_return_2;
                firPartialRes0_1_V_reg_4449 <= grp_simd_MAC_2_fu_847_ap_return_2;
                firPartialRes0_2_V_reg_4467 <= grp_simd_MAC_2_fu_883_ap_return_2;
                firPartialRes0_3_V_reg_4485 <= grp_simd_MAC_2_fu_919_ap_return_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                conv_1_bias_new_V_0_1_reg_3583 <= conv_1_bias_new_V_0_q0;
                conv_1_bias_new_V_1_1_reg_3593 <= conv_1_bias_new_V_1_q0;
                conv_1_bias_new_V_2_1_reg_3603 <= conv_1_bias_new_V_2_q0;
                conv_1_bias_new_V_3_1_reg_3613 <= conv_1_bias_new_V_3_q0;
                conv_1_inc_new_V_0_l_reg_3578 <= conv_1_inc_new_V_0_q0;
                conv_1_inc_new_V_1_l_reg_3588 <= conv_1_inc_new_V_1_q0;
                conv_1_inc_new_V_2_l_reg_3598 <= conv_1_inc_new_V_2_q0;
                conv_1_inc_new_V_3_l_reg_3608 <= conv_1_inc_new_V_3_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln392_reg_3490_pp0_iter6_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then
                firPartialRes0_V_0_3_fu_306 <= select_ln398_9_fu_2431_p3;
                firPartialRes0_V_1_3_fu_310 <= select_ln398_13_fu_2489_p3;
                firPartialRes0_V_2_3_fu_314 <= select_ln398_17_fu_2547_p3;
                firPartialRes0_V_3_3_fu_318 <= select_ln398_21_fu_2605_p3;
                firPartialRes1_0_V_2_fu_322 <= firPartialRes1_0_V_fu_2438_p3;
                firPartialRes1_1_V_2_fu_326 <= firPartialRes1_1_V_fu_2496_p3;
                firPartialRes1_2_V_1_fu_330 <= firPartialRes1_2_V_fu_2554_p3;
                firPartialRes1_3_V_1_fu_334 <= firPartialRes1_3_V_fu_2612_p3;
                outPartialArr0_0_V_2_fu_338 <= outPartialArr0_0_V_fu_2445_p2;
                outPartialArr0_1_V_2_fu_342 <= outPartialArr0_1_V_fu_2503_p2;
                outPartialArr0_2_V_1_fu_346 <= outPartialArr0_2_V_fu_2561_p2;
                outPartialArr0_3_V_1_fu_350 <= outPartialArr0_3_V_fu_2619_p2;
                outPartialArr1_0_V_1_fu_354 <= outPartialArr1_0_V_fu_2451_p2;
                outPartialArr1_1_V_1_fu_358 <= outPartialArr1_1_V_fu_2509_p2;
                outPartialArr1_2_V_1_fu_362 <= outPartialArr1_2_V_fu_2567_p2;
                outPartialArr1_3_V_1_fu_366 <= outPartialArr1_3_V_fu_2625_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln392_reg_3490_pp0_iter2_reg <= icmp_ln392_reg_3490_pp0_iter1_reg;
                icmp_ln392_reg_3490_pp0_iter3_reg <= icmp_ln392_reg_3490_pp0_iter2_reg;
                icmp_ln392_reg_3490_pp0_iter4_reg <= icmp_ln392_reg_3490_pp0_iter3_reg;
                icmp_ln392_reg_3490_pp0_iter5_reg <= icmp_ln392_reg_3490_pp0_iter4_reg;
                icmp_ln392_reg_3490_pp0_iter6_reg <= icmp_ln392_reg_3490_pp0_iter5_reg;
                o_out_reg_3688_pp0_iter2_reg <= o_out_reg_3688;
                o_out_reg_3688_pp0_iter3_reg <= o_out_reg_3688_pp0_iter2_reg;
                o_out_reg_3688_pp0_iter4_reg <= o_out_reg_3688_pp0_iter3_reg;
                o_out_reg_3688_pp0_iter5_reg <= o_out_reg_3688_pp0_iter4_reg;
                o_out_reg_3688_pp0_iter6_reg <= o_out_reg_3688_pp0_iter5_reg;
                o_out_reg_3688_pp0_iter7_reg <= o_out_reg_3688_pp0_iter6_reg;
                o_out_reg_3688_pp0_iter8_reg <= o_out_reg_3688_pp0_iter7_reg;
                o_out_reg_3688_pp0_iter9_reg <= o_out_reg_3688_pp0_iter8_reg;
                select_ln393_33_reg_3757_pp0_iter3_reg <= select_ln393_33_reg_3757;
                select_ln393_33_reg_3757_pp0_iter4_reg <= select_ln393_33_reg_3757_pp0_iter3_reg;
                select_ln393_33_reg_3757_pp0_iter5_reg <= select_ln393_33_reg_3757_pp0_iter4_reg;
                select_ln393_33_reg_3757_pp0_iter6_reg <= select_ln393_33_reg_3757_pp0_iter5_reg;
                select_ln393_33_reg_3757_pp0_iter7_reg <= select_ln393_33_reg_3757_pp0_iter6_reg;
                select_ln393_34_reg_3762_pp0_iter3_reg <= select_ln393_34_reg_3762;
                select_ln393_34_reg_3762_pp0_iter4_reg <= select_ln393_34_reg_3762_pp0_iter3_reg;
                select_ln393_34_reg_3762_pp0_iter5_reg <= select_ln393_34_reg_3762_pp0_iter4_reg;
                select_ln393_34_reg_3762_pp0_iter6_reg <= select_ln393_34_reg_3762_pp0_iter5_reg;
                select_ln393_34_reg_3762_pp0_iter7_reg <= select_ln393_34_reg_3762_pp0_iter6_reg;
                select_ln393_34_reg_3762_pp0_iter8_reg <= select_ln393_34_reg_3762_pp0_iter7_reg;
                select_ln393_35_reg_3767_pp0_iter3_reg <= select_ln393_35_reg_3767;
                select_ln393_35_reg_3767_pp0_iter4_reg <= select_ln393_35_reg_3767_pp0_iter3_reg;
                select_ln393_35_reg_3767_pp0_iter5_reg <= select_ln393_35_reg_3767_pp0_iter4_reg;
                select_ln393_35_reg_3767_pp0_iter6_reg <= select_ln393_35_reg_3767_pp0_iter5_reg;
                select_ln393_35_reg_3767_pp0_iter7_reg <= select_ln393_35_reg_3767_pp0_iter6_reg;
                select_ln393_35_reg_3767_pp0_iter8_reg <= select_ln393_35_reg_3767_pp0_iter7_reg;
                select_ln393_36_reg_3772_pp0_iter3_reg <= select_ln393_36_reg_3772;
                select_ln393_36_reg_3772_pp0_iter4_reg <= select_ln393_36_reg_3772_pp0_iter3_reg;
                select_ln393_36_reg_3772_pp0_iter5_reg <= select_ln393_36_reg_3772_pp0_iter4_reg;
                select_ln393_36_reg_3772_pp0_iter6_reg <= select_ln393_36_reg_3772_pp0_iter5_reg;
                select_ln393_36_reg_3772_pp0_iter7_reg <= select_ln393_36_reg_3772_pp0_iter6_reg;
                select_ln393_37_reg_3777_pp0_iter3_reg <= select_ln393_37_reg_3777;
                select_ln393_37_reg_3777_pp0_iter4_reg <= select_ln393_37_reg_3777_pp0_iter3_reg;
                select_ln393_37_reg_3777_pp0_iter5_reg <= select_ln393_37_reg_3777_pp0_iter4_reg;
                select_ln393_37_reg_3777_pp0_iter6_reg <= select_ln393_37_reg_3777_pp0_iter5_reg;
                select_ln393_37_reg_3777_pp0_iter7_reg <= select_ln393_37_reg_3777_pp0_iter6_reg;
                select_ln393_37_reg_3777_pp0_iter8_reg <= select_ln393_37_reg_3777_pp0_iter7_reg;
                select_ln393_38_reg_3782_pp0_iter3_reg <= select_ln393_38_reg_3782;
                select_ln393_38_reg_3782_pp0_iter4_reg <= select_ln393_38_reg_3782_pp0_iter3_reg;
                select_ln393_38_reg_3782_pp0_iter5_reg <= select_ln393_38_reg_3782_pp0_iter4_reg;
                select_ln393_38_reg_3782_pp0_iter6_reg <= select_ln393_38_reg_3782_pp0_iter5_reg;
                select_ln393_38_reg_3782_pp0_iter7_reg <= select_ln393_38_reg_3782_pp0_iter6_reg;
                select_ln393_38_reg_3782_pp0_iter8_reg <= select_ln393_38_reg_3782_pp0_iter7_reg;
                select_ln393_39_reg_3787_pp0_iter3_reg <= select_ln393_39_reg_3787;
                select_ln393_39_reg_3787_pp0_iter4_reg <= select_ln393_39_reg_3787_pp0_iter3_reg;
                select_ln393_39_reg_3787_pp0_iter5_reg <= select_ln393_39_reg_3787_pp0_iter4_reg;
                select_ln393_39_reg_3787_pp0_iter6_reg <= select_ln393_39_reg_3787_pp0_iter5_reg;
                select_ln393_39_reg_3787_pp0_iter7_reg <= select_ln393_39_reg_3787_pp0_iter6_reg;
                select_ln393_40_reg_3792_pp0_iter3_reg <= select_ln393_40_reg_3792;
                select_ln393_40_reg_3792_pp0_iter4_reg <= select_ln393_40_reg_3792_pp0_iter3_reg;
                select_ln393_40_reg_3792_pp0_iter5_reg <= select_ln393_40_reg_3792_pp0_iter4_reg;
                select_ln393_40_reg_3792_pp0_iter6_reg <= select_ln393_40_reg_3792_pp0_iter5_reg;
                select_ln393_40_reg_3792_pp0_iter7_reg <= select_ln393_40_reg_3792_pp0_iter6_reg;
                select_ln393_40_reg_3792_pp0_iter8_reg <= select_ln393_40_reg_3792_pp0_iter7_reg;
                select_ln393_41_reg_3797_pp0_iter3_reg <= select_ln393_41_reg_3797;
                select_ln393_41_reg_3797_pp0_iter4_reg <= select_ln393_41_reg_3797_pp0_iter3_reg;
                select_ln393_41_reg_3797_pp0_iter5_reg <= select_ln393_41_reg_3797_pp0_iter4_reg;
                select_ln393_41_reg_3797_pp0_iter6_reg <= select_ln393_41_reg_3797_pp0_iter5_reg;
                select_ln393_41_reg_3797_pp0_iter7_reg <= select_ln393_41_reg_3797_pp0_iter6_reg;
                select_ln393_41_reg_3797_pp0_iter8_reg <= select_ln393_41_reg_3797_pp0_iter7_reg;
                select_ln393_42_reg_3802_pp0_iter3_reg <= select_ln393_42_reg_3802;
                select_ln393_42_reg_3802_pp0_iter4_reg <= select_ln393_42_reg_3802_pp0_iter3_reg;
                select_ln393_42_reg_3802_pp0_iter5_reg <= select_ln393_42_reg_3802_pp0_iter4_reg;
                select_ln393_42_reg_3802_pp0_iter6_reg <= select_ln393_42_reg_3802_pp0_iter5_reg;
                select_ln393_42_reg_3802_pp0_iter7_reg <= select_ln393_42_reg_3802_pp0_iter6_reg;
                select_ln393_43_reg_3807_pp0_iter3_reg <= select_ln393_43_reg_3807;
                select_ln393_43_reg_3807_pp0_iter4_reg <= select_ln393_43_reg_3807_pp0_iter3_reg;
                select_ln393_43_reg_3807_pp0_iter5_reg <= select_ln393_43_reg_3807_pp0_iter4_reg;
                select_ln393_43_reg_3807_pp0_iter6_reg <= select_ln393_43_reg_3807_pp0_iter5_reg;
                select_ln393_43_reg_3807_pp0_iter7_reg <= select_ln393_43_reg_3807_pp0_iter6_reg;
                select_ln393_43_reg_3807_pp0_iter8_reg <= select_ln393_43_reg_3807_pp0_iter7_reg;
                select_ln393_44_reg_3812_pp0_iter3_reg <= select_ln393_44_reg_3812;
                select_ln393_44_reg_3812_pp0_iter4_reg <= select_ln393_44_reg_3812_pp0_iter3_reg;
                select_ln393_44_reg_3812_pp0_iter5_reg <= select_ln393_44_reg_3812_pp0_iter4_reg;
                select_ln393_44_reg_3812_pp0_iter6_reg <= select_ln393_44_reg_3812_pp0_iter5_reg;
                select_ln393_44_reg_3812_pp0_iter7_reg <= select_ln393_44_reg_3812_pp0_iter6_reg;
                select_ln393_44_reg_3812_pp0_iter8_reg <= select_ln393_44_reg_3812_pp0_iter7_reg;
                select_ln399_reg_3678_pp0_iter2_reg <= select_ln399_reg_3678;
                select_ln399_reg_3678_pp0_iter3_reg <= select_ln399_reg_3678_pp0_iter2_reg;
                select_ln399_reg_3678_pp0_iter4_reg <= select_ln399_reg_3678_pp0_iter3_reg;
                select_ln399_reg_3678_pp0_iter5_reg <= select_ln399_reg_3678_pp0_iter4_reg;
                select_ln399_reg_3678_pp0_iter6_reg <= select_ln399_reg_3678_pp0_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln392_reg_3490 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                o_out_reg_3688 <= o_out_fu_1329_p2;
                select_ln399_reg_3678 <= select_ln399_fu_1289_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln392_reg_3490_pp0_iter6_reg = ap_const_lv1_0))) then
                outPartialArr0_0_V_reg_4497 <= outPartialArr0_0_V_fu_2445_p2;
                outPartialArr0_1_V_reg_4507 <= outPartialArr0_1_V_fu_2503_p2;
                outPartialArr0_2_V_reg_4517 <= outPartialArr0_2_V_fu_2561_p2;
                outPartialArr0_3_V_reg_4527 <= outPartialArr0_3_V_fu_2619_p2;
                outPartialArr1_0_V_reg_4502 <= outPartialArr1_0_V_fu_2451_p2;
                outPartialArr1_1_V_reg_4512 <= outPartialArr1_1_V_fu_2509_p2;
                outPartialArr1_2_V_reg_4522 <= outPartialArr1_2_V_fu_2567_p2;
                outPartialArr1_3_V_reg_4532 <= outPartialArr1_3_V_fu_2625_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln392_reg_3490_pp0_iter1_reg = ap_const_lv1_0))) then
                p_Result_10_i_i_reg_3917 <= vec_V_V_dout(43 downto 40);
                p_Result_11_i_i_reg_3927 <= vec_V_V_dout(47 downto 44);
                p_Result_12_i_i_reg_3937 <= vec_V_V_dout(51 downto 48);
                p_Result_13_i_i_reg_3947 <= vec_V_V_dout(55 downto 52);
                p_Result_14_i_i_reg_3957 <= vec_V_V_dout(59 downto 56);
                p_Result_1_i_i_reg_3827 <= vec_V_V_dout(7 downto 4);
                p_Result_2_i_i_reg_3837 <= vec_V_V_dout(11 downto 8);
                p_Result_3_i_i_reg_3847 <= vec_V_V_dout(15 downto 12);
                p_Result_4_i_i_reg_3857 <= vec_V_V_dout(19 downto 16);
                p_Result_5_i_i_reg_3867 <= vec_V_V_dout(23 downto 20);
                p_Result_6_i_i_reg_3877 <= vec_V_V_dout(27 downto 24);
                p_Result_7_i_i_reg_3887 <= vec_V_V_dout(31 downto 28);
                p_Result_82_10_i_i_reg_3932 <= vec_V_V_dout(111 downto 108);
                p_Result_82_11_i_i_reg_3942 <= vec_V_V_dout(115 downto 112);
                p_Result_82_12_i_i_reg_3952 <= vec_V_V_dout(119 downto 116);
                p_Result_82_13_i_i_reg_3962 <= vec_V_V_dout(123 downto 120);
                p_Result_82_14_i_i_reg_3972 <= vec_V_V_dout(127 downto 124);
                p_Result_82_1_i_i_reg_3832 <= vec_V_V_dout(71 downto 68);
                p_Result_82_2_i_i_reg_3842 <= vec_V_V_dout(75 downto 72);
                p_Result_82_3_i_i_reg_3852 <= vec_V_V_dout(79 downto 76);
                p_Result_82_4_i_i_reg_3862 <= vec_V_V_dout(83 downto 80);
                p_Result_82_5_i_i_reg_3872 <= vec_V_V_dout(87 downto 84);
                p_Result_82_6_i_i_reg_3882 <= vec_V_V_dout(91 downto 88);
                p_Result_82_7_i_i_reg_3892 <= vec_V_V_dout(95 downto 92);
                p_Result_82_8_i_i_reg_3902 <= vec_V_V_dout(99 downto 96);
                p_Result_82_9_i_i_reg_3912 <= vec_V_V_dout(103 downto 100);
                p_Result_82_i_i_133_reg_3922 <= vec_V_V_dout(107 downto 104);
                p_Result_82_i_i_reg_3822 <= vec_V_V_dout(67 downto 64);
                p_Result_8_i_i_reg_3897 <= vec_V_V_dout(35 downto 32);
                p_Result_9_i_i_reg_3907 <= vec_V_V_dout(39 downto 36);
                p_Result_i_i_reg_3967 <= vec_V_V_dout(63 downto 60);
                select_ln393_33_reg_3757 <= select_ln393_33_fu_1439_p3;
                select_ln393_34_reg_3762 <= select_ln393_34_fu_1446_p3;
                select_ln393_35_reg_3767 <= select_ln393_35_fu_1459_p3;
                select_ln393_36_reg_3772 <= select_ln393_36_fu_1466_p3;
                select_ln393_37_reg_3777 <= select_ln393_37_fu_1473_p3;
                select_ln393_38_reg_3782 <= select_ln393_38_fu_1486_p3;
                select_ln393_39_reg_3787 <= select_ln393_39_fu_1493_p3;
                select_ln393_40_reg_3792 <= select_ln393_40_fu_1500_p3;
                select_ln393_41_reg_3797 <= select_ln393_41_fu_1513_p3;
                select_ln393_42_reg_3802 <= select_ln393_42_fu_1520_p3;
                select_ln393_43_reg_3807 <= select_ln393_43_fu_1527_p3;
                select_ln393_44_reg_3812 <= select_ln393_44_fu_1540_p3;
                trunc_ln647_reg_3817 <= trunc_ln647_fu_1547_p1;
                wpacks_0_0_V_reg_3977 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_0;
                wpacks_0_10_V_reg_4027 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_10;
                wpacks_0_11_V_reg_4032 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_11;
                wpacks_0_12_V_reg_4037 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_12;
                wpacks_0_13_V_reg_4042 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_13;
                wpacks_0_14_V_reg_4047 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_14;
                wpacks_0_15_V_reg_4052 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_15;
                wpacks_0_1_V_reg_3982 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_1;
                wpacks_0_2_V_reg_3987 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_2;
                wpacks_0_3_V_reg_3992 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_3;
                wpacks_0_4_V_reg_3997 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_4;
                wpacks_0_5_V_reg_4002 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_5;
                wpacks_0_6_V_reg_4007 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_6;
                wpacks_0_7_V_reg_4012 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_7;
                wpacks_0_8_V_reg_4017 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_8;
                wpacks_0_9_V_reg_4022 <= call_ret49_i_pack_weight_data_2_fu_955_ap_return_9;
                wpacks_1_0_V_reg_4057 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_0;
                wpacks_1_10_V_reg_4107 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_10;
                wpacks_1_11_V_reg_4112 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_11;
                wpacks_1_12_V_reg_4117 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_12;
                wpacks_1_13_V_reg_4122 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_13;
                wpacks_1_14_V_reg_4127 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_14;
                wpacks_1_15_V_reg_4132 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_15;
                wpacks_1_1_V_reg_4062 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_1;
                wpacks_1_2_V_reg_4067 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_2;
                wpacks_1_3_V_reg_4072 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_3;
                wpacks_1_4_V_reg_4077 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_4;
                wpacks_1_5_V_reg_4082 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_5;
                wpacks_1_6_V_reg_4087 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_6;
                wpacks_1_7_V_reg_4092 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_7;
                wpacks_1_8_V_reg_4097 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_8;
                wpacks_1_9_V_reg_4102 <= call_ret50_i_pack_weight_data_2_fu_965_ap_return_9;
                wpacks_2_0_V_reg_4137 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_0;
                wpacks_2_10_V_reg_4187 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_10;
                wpacks_2_11_V_reg_4192 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_11;
                wpacks_2_12_V_reg_4197 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_12;
                wpacks_2_13_V_reg_4202 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_13;
                wpacks_2_14_V_reg_4207 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_14;
                wpacks_2_15_V_reg_4212 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_15;
                wpacks_2_1_V_reg_4142 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_1;
                wpacks_2_2_V_reg_4147 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_2;
                wpacks_2_3_V_reg_4152 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_3;
                wpacks_2_4_V_reg_4157 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_4;
                wpacks_2_5_V_reg_4162 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_5;
                wpacks_2_6_V_reg_4167 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_6;
                wpacks_2_7_V_reg_4172 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_7;
                wpacks_2_8_V_reg_4177 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_8;
                wpacks_2_9_V_reg_4182 <= call_ret51_i_pack_weight_data_2_fu_974_ap_return_9;
                wpacks_3_0_V_reg_4217 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_0;
                wpacks_3_10_V_reg_4267 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_10;
                wpacks_3_11_V_reg_4272 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_11;
                wpacks_3_12_V_reg_4277 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_12;
                wpacks_3_13_V_reg_4282 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_13;
                wpacks_3_14_V_reg_4287 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_14;
                wpacks_3_15_V_reg_4292 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_15;
                wpacks_3_1_V_reg_4222 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_1;
                wpacks_3_2_V_reg_4227 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_2;
                wpacks_3_3_V_reg_4232 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_3;
                wpacks_3_4_V_reg_4237 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_4;
                wpacks_3_5_V_reg_4242 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_5;
                wpacks_3_6_V_reg_4247 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_6;
                wpacks_3_7_V_reg_4252 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_7;
                wpacks_3_8_V_reg_4257 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_8;
                wpacks_3_9_V_reg_4262 <= call_ret52_i_pack_weight_data_2_fu_984_ap_return_9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (o_out_reg_3688_pp0_iter8_reg = ap_const_lv1_1))) then
                res_V_10_reg_4614 <= res_V_10_fu_3265_p3;
                res_V_4_reg_4584 <= res_V_4_fu_2889_p3;
                res_V_5_reg_4589 <= res_V_5_fu_2951_p3;
                res_V_6_reg_4594 <= res_V_6_fu_3013_p3;
                res_V_7_reg_4599 <= res_V_7_fu_3076_p3;
                res_V_8_reg_4604 <= res_V_8_fu_3139_p3;
                res_V_9_reg_4609 <= res_V_9_fu_3202_p3;
                res_V_reg_4579 <= res_V_fu_2826_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (o_out_reg_3688_pp0_iter7_reg = ap_const_lv1_1))) then
                ret_V_24_reg_4542 <= ret_V_24_fu_3292_p2;
                ret_V_27_reg_4547 <= ret_V_27_fu_3298_p2;
                ret_V_30_reg_4553 <= ret_V_30_fu_3304_p2;
                ret_V_33_reg_4559 <= ret_V_33_fu_3310_p2;
                ret_V_36_reg_4564 <= ret_V_36_fu_3316_p2;
                ret_V_39_reg_4569 <= ret_V_39_fu_3322_p2;
                ret_V_42_reg_4574 <= ret_V_42_fu_3328_p2;
                ret_V_reg_4537 <= ret_V_fu_3286_p2;
            end if;
        end if;
    end process;
    add_ln392_reg_3430(3 downto 0) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, reps_empty_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter9)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((reps_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and not(((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    add_ln1353_12_fu_1160_p2 <= std_logic_vector(unsigned(ap_const_lv23_4000) + unsigned(conv_1_bias_new_V_1_q0));
    add_ln1353_13_fu_1166_p2 <= std_logic_vector(unsigned(ap_const_lv21_4000) + unsigned(conv_1_bias_new_V_2_q0));
    add_ln1353_14_fu_1172_p2 <= std_logic_vector(unsigned(ap_const_lv23_4000) + unsigned(conv_1_bias_new_V_3_q0));
    add_ln1353_15_fu_1453_p2 <= std_logic_vector(unsigned(ap_const_lv23_4000) + unsigned(conv_1_bias_new_V_0_q1));
    add_ln1353_16_fu_1480_p2 <= std_logic_vector(unsigned(ap_const_lv23_4000) + unsigned(conv_1_bias_new_V_1_q1));
    add_ln1353_17_fu_1507_p2 <= std_logic_vector(unsigned(ap_const_lv21_4000) + unsigned(conv_1_bias_new_V_2_q1));
    add_ln1353_18_fu_1534_p2 <= std_logic_vector(unsigned(ap_const_lv23_4000) + unsigned(conv_1_bias_new_V_3_q1));
    add_ln1353_fu_1154_p2 <= std_logic_vector(unsigned(ap_const_lv23_4000) + unsigned(conv_1_bias_new_V_0_q0));
    add_ln392_2_fu_1064_p2 <= std_logic_vector(unsigned(ap_const_lv43_1) + unsigned(indvar_flatten239_reg_745));
    add_ln392_fu_1006_p2 <= std_logic_vector(unsigned(shl_ln392_fu_994_p2) + unsigned(shl_ln392_2_fu_1000_p2));
    add_ln393_2_fu_1140_p2 <= std_logic_vector(unsigned(indvar_flatten53_reg_756) + unsigned(ap_const_lv12_1));
    add_ln394_2_fu_1126_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_778) + unsigned(ap_const_lv9_1));
    add_ln404_fu_1335_p2 <= std_logic_vector(unsigned(select_ln393_32_fu_1233_p3) + unsigned(zext_ln395_fu_1319_p1));
    add_ln700_106_fu_2468_p2 <= std_logic_vector(unsigned(firPartialRes1_1_V_2_fu_326) + unsigned(firPartial3_V_0_1_i_reg_4455));
    add_ln700_108_fu_2526_p2 <= std_logic_vector(unsigned(firPartialRes1_2_V_1_fu_330) + unsigned(firPartial3_V_0_2_i_reg_4473));
    add_ln700_110_fu_2584_p2 <= std_logic_vector(unsigned(firPartialRes1_3_V_1_fu_334) + unsigned(firPartial3_V_0_3_i_reg_4491));
    add_ln700_fu_2410_p2 <= std_logic_vector(unsigned(firPartialRes1_0_V_2_fu_322) + unsigned(firPartial3_V_0_i_reg_4437));
    and_ln393_5_fu_1201_p2 <= (xor_ln393_reg_3518 and icmp_ln395_fu_1195_p2);
    and_ln393_6_fu_1096_p2 <= (xor_ln393_fu_1084_p2 and icmp_ln394_fu_1090_p2);
    and_ln393_7_fu_1261_p2 <= (or_ln393_2_fu_1256_p2 and and_ln393_fu_1190_p2);
    and_ln393_8_fu_1267_p2 <= (or_ln393_2_fu_1256_p2 and and_ln393_5_fu_1201_p2);
    and_ln393_fu_1190_p2 <= (xor_ln393_reg_3518 and icmp_ln399_fu_1184_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state15 <= ap_CS_fsm(4);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(vec_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter2, icmp_ln392_reg_3490_pp0_iter1_reg, ap_enable_reg_pp0_iter10, o_out_reg_3688_pp0_iter9_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((out_V_V_full_n = ap_const_logic_0) and (o_out_reg_3688_pp0_iter9_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)) or ((vec_V_V_empty_n = ap_const_logic_0) and (icmp_ln392_reg_3490_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(vec_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter2, icmp_ln392_reg_3490_pp0_iter1_reg, ap_enable_reg_pp0_iter10, o_out_reg_3688_pp0_iter9_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((out_V_V_full_n = ap_const_logic_0) and (o_out_reg_3688_pp0_iter9_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)) or ((vec_V_V_empty_n = ap_const_logic_0) and (icmp_ln392_reg_3490_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp339_assign_proc : process(vec_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter2, icmp_ln392_reg_3490_pp0_iter1_reg, ap_enable_reg_pp0_iter10, o_out_reg_3688_pp0_iter9_reg)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp339 <= (((out_V_V_full_n = ap_const_logic_0) and (o_out_reg_3688_pp0_iter9_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)) or ((vec_V_V_empty_n = ap_const_logic_0) and (icmp_ln392_reg_3490_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp340_assign_proc : process(vec_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter2, icmp_ln392_reg_3490_pp0_iter1_reg, ap_enable_reg_pp0_iter10, o_out_reg_3688_pp0_iter9_reg)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp340 <= (((out_V_V_full_n = ap_const_logic_0) and (o_out_reg_3688_pp0_iter9_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)) or ((vec_V_V_empty_n = ap_const_logic_0) and (icmp_ln392_reg_3490_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp341_assign_proc : process(vec_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter2, icmp_ln392_reg_3490_pp0_iter1_reg, ap_enable_reg_pp0_iter10, o_out_reg_3688_pp0_iter9_reg)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp341 <= (((out_V_V_full_n = ap_const_logic_0) and (o_out_reg_3688_pp0_iter9_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)) or ((vec_V_V_empty_n = ap_const_logic_0) and (icmp_ln392_reg_3490_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp342_assign_proc : process(vec_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter2, icmp_ln392_reg_3490_pp0_iter1_reg, ap_enable_reg_pp0_iter10, o_out_reg_3688_pp0_iter9_reg)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp342 <= (((out_V_V_full_n = ap_const_logic_0) and (o_out_reg_3688_pp0_iter9_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)) or ((vec_V_V_empty_n = ap_const_logic_0) and (icmp_ln392_reg_3490_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(vec_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter2, icmp_ln392_reg_3490_pp0_iter1_reg, ap_enable_reg_pp0_iter10, o_out_reg_3688_pp0_iter9_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((out_V_V_full_n = ap_const_logic_0) and (o_out_reg_3688_pp0_iter9_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)) or ((vec_V_V_empty_n = ap_const_logic_0) and (icmp_ln392_reg_3490_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, reps_empty_n)
    begin
                ap_block_state1 <= ((reps_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter6_ignore_call255 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter6_ignore_call268 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter6_ignore_call281 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter6_ignore_call294 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter7_ignore_call255 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter7_ignore_call268 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter7_ignore_call281 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter7_ignore_call294 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter8_ignore_call255 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter8_ignore_call268 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter8_ignore_call281 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter8_ignore_call294 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter9_ignore_call255 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter9_ignore_call268 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter9_ignore_call281 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter9_ignore_call294 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state14_pp0_stage0_iter10_assign_proc : process(out_V_V_full_n, o_out_reg_3688_pp0_iter9_reg)
    begin
                ap_block_state14_pp0_stage0_iter10 <= ((out_V_V_full_n = ap_const_logic_0) and (o_out_reg_3688_pp0_iter9_reg = ap_const_lv1_1));
    end process;


    ap_block_state14_pp0_stage0_iter10_ignore_call255_assign_proc : process(out_V_V_full_n, o_out_reg_3688_pp0_iter9_reg)
    begin
                ap_block_state14_pp0_stage0_iter10_ignore_call255 <= ((out_V_V_full_n = ap_const_logic_0) and (o_out_reg_3688_pp0_iter9_reg = ap_const_lv1_1));
    end process;


    ap_block_state14_pp0_stage0_iter10_ignore_call268_assign_proc : process(out_V_V_full_n, o_out_reg_3688_pp0_iter9_reg)
    begin
                ap_block_state14_pp0_stage0_iter10_ignore_call268 <= ((out_V_V_full_n = ap_const_logic_0) and (o_out_reg_3688_pp0_iter9_reg = ap_const_lv1_1));
    end process;


    ap_block_state14_pp0_stage0_iter10_ignore_call281_assign_proc : process(out_V_V_full_n, o_out_reg_3688_pp0_iter9_reg)
    begin
                ap_block_state14_pp0_stage0_iter10_ignore_call281 <= ((out_V_V_full_n = ap_const_logic_0) and (o_out_reg_3688_pp0_iter9_reg = ap_const_lv1_1));
    end process;


    ap_block_state14_pp0_stage0_iter10_ignore_call294_assign_proc : process(out_V_V_full_n, o_out_reg_3688_pp0_iter9_reg)
    begin
                ap_block_state14_pp0_stage0_iter10_ignore_call294 <= ((out_V_V_full_n = ap_const_logic_0) and (o_out_reg_3688_pp0_iter9_reg = ap_const_lv1_1));
    end process;

        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter0_ignore_call255 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter0_ignore_call268 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter0_ignore_call281 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter0_ignore_call294 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1_ignore_call255 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1_ignore_call268 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1_ignore_call281 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1_ignore_call294 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter2_assign_proc : process(vec_V_V_empty_n, icmp_ln392_reg_3490_pp0_iter1_reg)
    begin
                ap_block_state6_pp0_stage0_iter2 <= ((vec_V_V_empty_n = ap_const_logic_0) and (icmp_ln392_reg_3490_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_state6_pp0_stage0_iter2_ignore_call255_assign_proc : process(vec_V_V_empty_n, icmp_ln392_reg_3490_pp0_iter1_reg)
    begin
                ap_block_state6_pp0_stage0_iter2_ignore_call255 <= ((vec_V_V_empty_n = ap_const_logic_0) and (icmp_ln392_reg_3490_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_state6_pp0_stage0_iter2_ignore_call268_assign_proc : process(vec_V_V_empty_n, icmp_ln392_reg_3490_pp0_iter1_reg)
    begin
                ap_block_state6_pp0_stage0_iter2_ignore_call268 <= ((vec_V_V_empty_n = ap_const_logic_0) and (icmp_ln392_reg_3490_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_state6_pp0_stage0_iter2_ignore_call281_assign_proc : process(vec_V_V_empty_n, icmp_ln392_reg_3490_pp0_iter1_reg)
    begin
                ap_block_state6_pp0_stage0_iter2_ignore_call281 <= ((vec_V_V_empty_n = ap_const_logic_0) and (icmp_ln392_reg_3490_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_state6_pp0_stage0_iter2_ignore_call294_assign_proc : process(vec_V_V_empty_n, icmp_ln392_reg_3490_pp0_iter1_reg)
    begin
                ap_block_state6_pp0_stage0_iter2_ignore_call294 <= ((vec_V_V_empty_n = ap_const_logic_0) and (icmp_ln392_reg_3490_pp0_iter1_reg = ap_const_lv1_0));
    end process;

        ap_block_state7_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter3_ignore_call255 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter3_ignore_call268 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter3_ignore_call281 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter3_ignore_call294 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter4_ignore_call255 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter4_ignore_call268 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter4_ignore_call281 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter4_ignore_call294 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter5_ignore_call255 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter5_ignore_call268 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter5_ignore_call281 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter5_ignore_call294 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter1_state5_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter1_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter1_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

        call_ret50_i_pack_weight_data_2_fu_965_w0_V <= std_logic_vector(IEEE.numeric_std.resize(signed(conv_1_w_new_V_1_0_q0),64));

    conv_1_bias_new_V_0_address0 <= zext_ln458_fu_1047_p1(3 - 1 downto 0);
    conv_1_bias_new_V_0_address1 <= zext_ln458_2_fu_1240_p1(3 - 1 downto 0);

    conv_1_bias_new_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_bias_new_V_0_ce0 <= ap_const_logic_1;
        else 
            conv_1_bias_new_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_bias_new_V_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_bias_new_V_0_ce1 <= ap_const_logic_1;
        else 
            conv_1_bias_new_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_bias_new_V_1_address0 <= zext_ln458_fu_1047_p1(3 - 1 downto 0);
    conv_1_bias_new_V_1_address1 <= zext_ln458_2_fu_1240_p1(3 - 1 downto 0);

    conv_1_bias_new_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_bias_new_V_1_ce0 <= ap_const_logic_1;
        else 
            conv_1_bias_new_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_bias_new_V_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_bias_new_V_1_ce1 <= ap_const_logic_1;
        else 
            conv_1_bias_new_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_bias_new_V_2_address0 <= zext_ln458_fu_1047_p1(3 - 1 downto 0);
    conv_1_bias_new_V_2_address1 <= zext_ln458_2_fu_1240_p1(3 - 1 downto 0);

    conv_1_bias_new_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_bias_new_V_2_ce0 <= ap_const_logic_1;
        else 
            conv_1_bias_new_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_bias_new_V_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_bias_new_V_2_ce1 <= ap_const_logic_1;
        else 
            conv_1_bias_new_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_bias_new_V_3_address0 <= zext_ln458_fu_1047_p1(3 - 1 downto 0);
    conv_1_bias_new_V_3_address1 <= zext_ln458_2_fu_1240_p1(3 - 1 downto 0);

    conv_1_bias_new_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_bias_new_V_3_ce0 <= ap_const_logic_1;
        else 
            conv_1_bias_new_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_bias_new_V_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_bias_new_V_3_ce1 <= ap_const_logic_1;
        else 
            conv_1_bias_new_V_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_inc_new_V_0_address0 <= zext_ln458_fu_1047_p1(3 - 1 downto 0);
    conv_1_inc_new_V_0_address1 <= zext_ln458_2_fu_1240_p1(3 - 1 downto 0);

    conv_1_inc_new_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_inc_new_V_0_ce0 <= ap_const_logic_1;
        else 
            conv_1_inc_new_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_inc_new_V_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_inc_new_V_0_ce1 <= ap_const_logic_1;
        else 
            conv_1_inc_new_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_inc_new_V_1_address0 <= zext_ln458_fu_1047_p1(3 - 1 downto 0);
    conv_1_inc_new_V_1_address1 <= zext_ln458_2_fu_1240_p1(3 - 1 downto 0);

    conv_1_inc_new_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_inc_new_V_1_ce0 <= ap_const_logic_1;
        else 
            conv_1_inc_new_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_inc_new_V_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_inc_new_V_1_ce1 <= ap_const_logic_1;
        else 
            conv_1_inc_new_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_inc_new_V_2_address0 <= zext_ln458_fu_1047_p1(3 - 1 downto 0);
    conv_1_inc_new_V_2_address1 <= zext_ln458_2_fu_1240_p1(3 - 1 downto 0);

    conv_1_inc_new_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_inc_new_V_2_ce0 <= ap_const_logic_1;
        else 
            conv_1_inc_new_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_inc_new_V_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_inc_new_V_2_ce1 <= ap_const_logic_1;
        else 
            conv_1_inc_new_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_inc_new_V_3_address0 <= zext_ln458_fu_1047_p1(3 - 1 downto 0);
    conv_1_inc_new_V_3_address1 <= zext_ln458_2_fu_1240_p1(3 - 1 downto 0);

    conv_1_inc_new_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_inc_new_V_3_ce0 <= ap_const_logic_1;
        else 
            conv_1_inc_new_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_inc_new_V_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_inc_new_V_3_ce1 <= ap_const_logic_1;
        else 
            conv_1_inc_new_V_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_w_new_V_0_0_address0 <= zext_ln404_6_fu_1345_p1(5 - 1 downto 0);

    conv_1_w_new_V_0_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_w_new_V_0_0_ce0 <= ap_const_logic_1;
        else 
            conv_1_w_new_V_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_w_new_V_0_1_address0 <= zext_ln404_6_fu_1345_p1(5 - 1 downto 0);

    conv_1_w_new_V_0_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_w_new_V_0_1_ce0 <= ap_const_logic_1;
        else 
            conv_1_w_new_V_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_w_new_V_0_2_address0 <= zext_ln404_6_fu_1345_p1(5 - 1 downto 0);

    conv_1_w_new_V_0_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_w_new_V_0_2_ce0 <= ap_const_logic_1;
        else 
            conv_1_w_new_V_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_w_new_V_1_0_address0 <= zext_ln404_6_fu_1345_p1(5 - 1 downto 0);

    conv_1_w_new_V_1_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_w_new_V_1_0_ce0 <= ap_const_logic_1;
        else 
            conv_1_w_new_V_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_w_new_V_1_1_address0 <= zext_ln404_6_fu_1345_p1(5 - 1 downto 0);

    conv_1_w_new_V_1_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_w_new_V_1_1_ce0 <= ap_const_logic_1;
        else 
            conv_1_w_new_V_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_w_new_V_1_2_address0 <= zext_ln404_6_fu_1345_p1(5 - 1 downto 0);

    conv_1_w_new_V_1_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_w_new_V_1_2_ce0 <= ap_const_logic_1;
        else 
            conv_1_w_new_V_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_w_new_V_2_0_address0 <= zext_ln404_6_fu_1345_p1(5 - 1 downto 0);

    conv_1_w_new_V_2_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_w_new_V_2_0_ce0 <= ap_const_logic_1;
        else 
            conv_1_w_new_V_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_w_new_V_2_1_address0 <= zext_ln404_6_fu_1345_p1(5 - 1 downto 0);

    conv_1_w_new_V_2_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_w_new_V_2_1_ce0 <= ap_const_logic_1;
        else 
            conv_1_w_new_V_2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_w_new_V_2_2_address0 <= zext_ln404_6_fu_1345_p1(5 - 1 downto 0);

    conv_1_w_new_V_2_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_w_new_V_2_2_ce0 <= ap_const_logic_1;
        else 
            conv_1_w_new_V_2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_w_new_V_3_0_address0 <= zext_ln404_6_fu_1345_p1(5 - 1 downto 0);

    conv_1_w_new_V_3_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_w_new_V_3_0_ce0 <= ap_const_logic_1;
        else 
            conv_1_w_new_V_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_w_new_V_3_1_address0 <= zext_ln404_6_fu_1345_p1(5 - 1 downto 0);

    conv_1_w_new_V_3_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_w_new_V_3_1_ce0 <= ap_const_logic_1;
        else 
            conv_1_w_new_V_3_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_w_new_V_3_2_address0 <= zext_ln404_6_fu_1345_p1(5 - 1 downto 0);

    conv_1_w_new_V_3_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_w_new_V_3_2_ce0 <= ap_const_logic_1;
        else 
            conv_1_w_new_V_3_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    firPartialRes0_0_V_2_fu_2405_p2 <= std_logic_vector(unsigned(firPartialRes0_V_0_3_fu_306) + unsigned(firPartialRes0_0_V_reg_4431));
    firPartialRes0_1_V_2_fu_2463_p2 <= std_logic_vector(unsigned(firPartialRes0_V_1_3_fu_310) + unsigned(firPartialRes0_1_V_reg_4449));
    firPartialRes0_2_V_1_fu_2521_p2 <= std_logic_vector(unsigned(firPartialRes0_V_2_3_fu_314) + unsigned(firPartialRes0_2_V_reg_4467));
    firPartialRes0_3_V_1_fu_2579_p2 <= std_logic_vector(unsigned(firPartialRes0_V_3_3_fu_318) + unsigned(firPartialRes0_3_V_reg_4485));
    firPartialRes1_0_V_fu_2438_p3 <= 
        firPartial3_V_0_i_reg_4437 when (o_clear_fu_2394_p2(0) = '1') else 
        add_ln700_fu_2410_p2;
    firPartialRes1_1_V_fu_2496_p3 <= 
        firPartial3_V_0_1_i_reg_4455 when (o_clear_fu_2394_p2(0) = '1') else 
        add_ln700_106_fu_2468_p2;
    firPartialRes1_2_V_fu_2554_p3 <= 
        firPartial3_V_0_2_i_reg_4473 when (o_clear_fu_2394_p2(0) = '1') else 
        add_ln700_108_fu_2526_p2;
    firPartialRes1_3_V_fu_2612_p3 <= 
        firPartial3_V_0_3_i_reg_4491 when (o_clear_fu_2394_p2(0) = '1') else 
        add_ln700_110_fu_2584_p2;
    grp_fu_1015_p0 <= ap_const_lv43_798(12 - 1 downto 0);
    grp_fu_1015_p1 <= grp_fu_1015_p10(32 - 1 downto 0);
    grp_fu_1015_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln392_reg_3430),43));

    grp_simd_MAC_2_fu_811_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp339)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp339))) then 
            grp_simd_MAC_2_fu_811_ap_ce <= ap_const_logic_1;
        else 
            grp_simd_MAC_2_fu_811_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_simd_MAC_2_fu_847_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp340)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp340))) then 
            grp_simd_MAC_2_fu_847_ap_ce <= ap_const_logic_1;
        else 
            grp_simd_MAC_2_fu_847_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_simd_MAC_2_fu_883_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp341)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp341))) then 
            grp_simd_MAC_2_fu_883_ap_ce <= ap_const_logic_1;
        else 
            grp_simd_MAC_2_fu_883_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_simd_MAC_2_fu_919_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp342)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp342))) then 
            grp_simd_MAC_2_fu_919_ap_ce <= ap_const_logic_1;
        else 
            grp_simd_MAC_2_fu_919_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln392_fu_1059_p2 <= "1" when (indvar_flatten239_reg_745 = bound74_reg_3440) else "0";
    icmp_ln393_fu_1070_p2 <= "1" when (indvar_flatten53_reg_756 = ap_const_lv12_798) else "0";
    icmp_ln394_fu_1090_p2 <= "1" when (indvar_flatten_reg_778 = ap_const_lv9_F3) else "0";
    icmp_ln395_fu_1195_p2 <= "1" when (infoldIdx_0_i_reg_800 = ap_const_lv2_3) else "0";
    icmp_ln399_3_fu_1297_p2 <= "0" when (w_fu_1273_p2 = ap_const_lv8_0) else "1";
    icmp_ln399_4_fu_1323_p2 <= "1" when (select_ln399_fu_1289_p3 = ap_const_lv2_2) else "0";
    icmp_ln399_fu_1184_p2 <= "0" when (w_0_i_reg_789 = ap_const_lv8_0) else "1";
    icmp_ln895_30_fu_2802_p2 <= "0" when (tmp_fu_2792_p4 = ap_const_lv10_0) else "1";
    icmp_ln895_31_fu_2843_p2 <= "1" when (signed(ret_V_46_fu_2837_p2) > signed(ap_const_lv29_0)) else "0";
    icmp_ln895_32_fu_2865_p2 <= "0" when (tmp_47_fu_2855_p4 = ap_const_lv10_0) else "1";
    icmp_ln895_33_fu_2906_p2 <= "1" when (signed(ret_V_47_fu_2900_p2) > signed(ap_const_lv30_0)) else "0";
    icmp_ln895_34_fu_2927_p2 <= "0" when (tmp_48_fu_2917_p4 = ap_const_lv10_0) else "1";
    icmp_ln895_35_fu_2968_p2 <= "1" when (signed(ret_V_48_fu_2962_p2) > signed(ap_const_lv30_0)) else "0";
    icmp_ln895_36_fu_2989_p2 <= "0" when (tmp_49_fu_2979_p4 = ap_const_lv10_0) else "1";
    icmp_ln895_37_fu_3030_p2 <= "1" when (signed(ret_V_49_fu_3024_p2) > signed(ap_const_lv28_0)) else "0";
    icmp_ln895_38_fu_3052_p2 <= "0" when (tmp_50_fu_3042_p4 = ap_const_lv9_0) else "1";
    icmp_ln895_39_fu_3093_p2 <= "1" when (signed(ret_V_50_fu_3087_p2) > signed(ap_const_lv28_0)) else "0";
    icmp_ln895_40_fu_3115_p2 <= "0" when (tmp_51_fu_3105_p4 = ap_const_lv9_0) else "1";
    icmp_ln895_41_fu_3156_p2 <= "1" when (signed(ret_V_51_fu_3150_p2) > signed(ap_const_lv29_0)) else "0";
    icmp_ln895_42_fu_3178_p2 <= "0" when (tmp_52_fu_3168_p4 = ap_const_lv10_0) else "1";
    icmp_ln895_43_fu_3219_p2 <= "1" when (signed(ret_V_52_fu_3213_p2) > signed(ap_const_lv29_0)) else "0";
    icmp_ln895_44_fu_3241_p2 <= "0" when (tmp_53_fu_3231_p4 = ap_const_lv10_0) else "1";
    icmp_ln895_fu_2780_p2 <= "1" when (signed(ret_V_45_fu_2774_p2) > signed(ap_const_lv29_0)) else "0";
    infoldIdx_fu_1361_p2 <= std_logic_vector(unsigned(select_ln399_fu_1289_p3) + unsigned(ap_const_lv2_1));
    ipack_0_V_fu_2122_p4 <= ((p_Result_82_i_i_reg_3822 & ap_const_lv7_0) & trunc_ln647_reg_3817);
    ipack_10_V_fu_2242_p4 <= ((p_Result_82_i_i_133_reg_3922 & ap_const_lv7_0) & p_Result_10_i_i_reg_3917);
    ipack_11_V_fu_2254_p4 <= ((p_Result_82_10_i_i_reg_3932 & ap_const_lv7_0) & p_Result_11_i_i_reg_3927);
    ipack_12_V_fu_2266_p4 <= ((p_Result_82_11_i_i_reg_3942 & ap_const_lv7_0) & p_Result_12_i_i_reg_3937);
    ipack_13_V_fu_2278_p4 <= ((p_Result_82_12_i_i_reg_3952 & ap_const_lv7_0) & p_Result_13_i_i_reg_3947);
    ipack_14_V_fu_2290_p4 <= ((p_Result_82_13_i_i_reg_3962 & ap_const_lv7_0) & p_Result_14_i_i_reg_3957);
    ipack_15_V_fu_2302_p4 <= ((p_Result_82_14_i_i_reg_3972 & ap_const_lv7_0) & p_Result_i_i_reg_3967);
    ipack_1_V_fu_2134_p4 <= ((p_Result_82_1_i_i_reg_3832 & ap_const_lv7_0) & p_Result_1_i_i_reg_3827);
    ipack_2_V_fu_2146_p4 <= ((p_Result_82_2_i_i_reg_3842 & ap_const_lv7_0) & p_Result_2_i_i_reg_3837);
    ipack_3_V_fu_2158_p4 <= ((p_Result_82_3_i_i_reg_3852 & ap_const_lv7_0) & p_Result_3_i_i_reg_3847);
    ipack_4_V_fu_2170_p4 <= ((p_Result_82_4_i_i_reg_3862 & ap_const_lv7_0) & p_Result_4_i_i_reg_3857);
    ipack_5_V_fu_2182_p4 <= ((p_Result_82_5_i_i_reg_3872 & ap_const_lv7_0) & p_Result_5_i_i_reg_3867);
    ipack_6_V_fu_2194_p4 <= ((p_Result_82_6_i_i_reg_3882 & ap_const_lv7_0) & p_Result_6_i_i_reg_3877);
    ipack_7_V_fu_2206_p4 <= ((p_Result_82_7_i_i_reg_3892 & ap_const_lv7_0) & p_Result_7_i_i_reg_3887);
    ipack_8_V_fu_2218_p4 <= ((p_Result_82_8_i_i_reg_3902 & ap_const_lv7_0) & p_Result_8_i_i_reg_3897);
    ipack_9_V_fu_2230_p4 <= ((p_Result_82_9_i_i_reg_3912 & ap_const_lv7_0) & p_Result_9_i_i_reg_3907);
    o_clear_fu_2394_p2 <= "1" when (select_ln399_reg_3678_pp0_iter6_reg = ap_const_lv2_0) else "0";
    o_out_fu_1329_p2 <= (select_ln399_2_fu_1303_p3 and icmp_ln399_4_fu_1323_p2);
    or_ln393_2_fu_1256_p2 <= (xor_ln393_2_fu_1251_p2 or icmp_ln393_reg_3499);
    or_ln393_fu_1108_p2 <= (icmp_ln393_fu_1070_p2 or and_ln393_6_fu_1096_p2);
    or_ln399_2_fu_1284_p2 <= (or_ln399_fu_1279_p2 or icmp_ln393_reg_3499);
    or_ln399_fu_1279_p2 <= (and_ln393_8_fu_1267_p2 or and_ln393_6_reg_3529);
    outPartialArr0_0_V_fu_2445_p2 <= std_logic_vector(unsigned(select_ln398_8_fu_2423_p3) + unsigned(call_ret1_reg_4425_0));
    outPartialArr0_1_V_fu_2503_p2 <= std_logic_vector(unsigned(select_ln398_12_fu_2481_p3) + unsigned(call_ret2_reg_4443_0));
    outPartialArr0_2_V_fu_2561_p2 <= std_logic_vector(unsigned(select_ln398_16_fu_2539_p3) + unsigned(call_ret3_reg_4461_0));
    outPartialArr0_3_V_fu_2619_p2 <= std_logic_vector(unsigned(select_ln398_20_fu_2597_p3) + unsigned(call_ret_reg_4479_0));
    outPartialArr1_0_V_fu_2451_p2 <= std_logic_vector(unsigned(select_ln398_fu_2415_p3) + unsigned(call_ret1_reg_4425_1));
    outPartialArr1_1_V_fu_2509_p2 <= std_logic_vector(unsigned(select_ln398_11_fu_2473_p3) + unsigned(call_ret2_reg_4443_1));
    outPartialArr1_2_V_fu_2567_p2 <= std_logic_vector(unsigned(select_ln398_15_fu_2531_p3) + unsigned(call_ret3_reg_4461_1));
    outPartialArr1_3_V_fu_2625_p2 <= std_logic_vector(unsigned(select_ln398_19_fu_2589_p3) + unsigned(call_ret_reg_4479_1));

    out_V_V_blk_n_assign_proc : process(out_V_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter10, o_out_reg_3688_pp0_iter9_reg)
    begin
        if (((o_out_reg_3688_pp0_iter9_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            out_V_V_blk_n <= out_V_V_full_n;
        else 
            out_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_V_V_din <= (((((((res_V_10_reg_4614 & res_V_8_reg_4604) & res_V_6_reg_4594) & res_V_4_reg_4584) & res_V_9_reg_4609) & res_V_7_reg_4599) & res_V_5_reg_4589) & res_V_reg_4579);

    out_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter10, o_out_reg_3688_pp0_iter9_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (o_out_reg_3688_pp0_iter9_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            out_V_V_write <= ap_const_logic_1;
        else 
            out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    peIdx_fu_1102_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(select_ln393_fu_1076_p3));

    reps_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, reps_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            reps_blk_n <= reps_empty_n;
        else 
            reps_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    reps_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, reps_empty_n)
    begin
        if ((not(((reps_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            reps_read <= ap_const_logic_1;
        else 
            reps_read <= ap_const_logic_0;
        end if; 
    end process;

    res_V_10_fu_3265_p3 <= 
        select_ln192_10_fu_3257_p3 when (icmp_ln895_43_fu_3219_p2(0) = '1') else 
        ap_const_lv4_0;
    res_V_4_fu_2889_p3 <= 
        select_ln192_4_fu_2881_p3 when (icmp_ln895_31_fu_2843_p2(0) = '1') else 
        ap_const_lv4_0;
    res_V_5_fu_2951_p3 <= 
        select_ln192_5_fu_2943_p3 when (icmp_ln895_33_fu_2906_p2(0) = '1') else 
        ap_const_lv4_0;
    res_V_6_fu_3013_p3 <= 
        select_ln192_6_fu_3005_p3 when (icmp_ln895_35_fu_2968_p2(0) = '1') else 
        ap_const_lv4_0;
    res_V_7_fu_3076_p3 <= 
        select_ln192_7_fu_3068_p3 when (icmp_ln895_37_fu_3030_p2(0) = '1') else 
        ap_const_lv4_0;
    res_V_8_fu_3139_p3 <= 
        select_ln192_8_fu_3131_p3 when (icmp_ln895_39_fu_3093_p2(0) = '1') else 
        ap_const_lv4_0;
    res_V_9_fu_3202_p3 <= 
        select_ln192_9_fu_3194_p3 when (icmp_ln895_41_fu_3156_p2(0) = '1') else 
        ap_const_lv4_0;
    res_V_fu_2826_p3 <= 
        select_ln192_fu_2818_p3 when (icmp_ln895_fu_2780_p2(0) = '1') else 
        ap_const_lv4_0;
    ret_V_23_fu_2786_p2 <= std_logic_vector(signed(sext_ln1352_fu_2771_p1) + signed(sext_ln393_4_fu_2750_p1));
    ret_V_24_fu_3292_p0 <= zext_ln393_2_fu_2711_p1(12 - 1 downto 0);
    ret_V_26_fu_2849_p2 <= std_logic_vector(signed(sext_ln1352_4_fu_2834_p1) + signed(sext_ln393_4_fu_2750_p1));
    ret_V_27_fu_3298_p0 <= zext_ln393_3_fu_2714_p1(13 - 1 downto 0);
    ret_V_29_fu_2912_p2 <= std_logic_vector(signed(ret_V_27_reg_4547) + signed(sext_ln393_6_fu_2756_p1));
    ret_V_30_fu_3304_p0 <= zext_ln393_3_fu_2714_p1(13 - 1 downto 0);
    ret_V_32_fu_2974_p2 <= std_logic_vector(signed(ret_V_30_reg_4553) + signed(sext_ln393_6_fu_2756_p1));
    ret_V_33_fu_3310_p0 <= zext_ln393_4_fu_2717_p1(11 - 1 downto 0);
    ret_V_35_fu_3036_p2 <= std_logic_vector(signed(sext_ln1352_7_fu_3021_p1) + signed(sext_ln393_8_fu_2762_p1));
    ret_V_36_fu_3316_p0 <= zext_ln393_4_fu_2717_p1(11 - 1 downto 0);
    ret_V_38_fu_3099_p2 <= std_logic_vector(signed(sext_ln1352_8_fu_3084_p1) + signed(sext_ln393_8_fu_2762_p1));
    ret_V_39_fu_3322_p0 <= zext_ln393_5_fu_2720_p1(12 - 1 downto 0);
    ret_V_41_fu_3162_p2 <= std_logic_vector(signed(sext_ln1352_9_fu_3147_p1) + signed(sext_ln393_10_fu_2768_p1));
    ret_V_42_fu_3328_p0 <= zext_ln393_5_fu_2720_p1(12 - 1 downto 0);
    ret_V_44_fu_3225_p2 <= std_logic_vector(signed(sext_ln1352_10_fu_3210_p1) + signed(sext_ln393_10_fu_2768_p1));
    ret_V_45_fu_2774_p2 <= std_logic_vector(signed(sext_ln393_fu_2747_p1) + signed(sext_ln1352_fu_2771_p1));
    ret_V_46_fu_2837_p2 <= std_logic_vector(signed(sext_ln393_fu_2747_p1) + signed(sext_ln1352_4_fu_2834_p1));
    ret_V_47_fu_2900_p2 <= std_logic_vector(signed(sext_ln393_5_fu_2753_p1) + signed(sext_ln1352_5_fu_2897_p1));
    ret_V_48_fu_2962_p2 <= std_logic_vector(signed(sext_ln393_5_fu_2753_p1) + signed(sext_ln1352_6_fu_2959_p1));
    ret_V_49_fu_3024_p2 <= std_logic_vector(signed(sext_ln393_7_fu_2759_p1) + signed(sext_ln1352_7_fu_3021_p1));
    ret_V_50_fu_3087_p2 <= std_logic_vector(signed(sext_ln393_7_fu_2759_p1) + signed(sext_ln1352_8_fu_3084_p1));
    ret_V_51_fu_3150_p2 <= std_logic_vector(signed(sext_ln393_9_fu_2765_p1) + signed(sext_ln1352_9_fu_3147_p1));
    ret_V_52_fu_3213_p2 <= std_logic_vector(signed(sext_ln393_9_fu_2765_p1) + signed(sext_ln1352_10_fu_3210_p1));
    ret_V_fu_3286_p0 <= zext_ln393_2_fu_2711_p1(12 - 1 downto 0);
    select_ln192_10_fu_3257_p3 <= 
        ap_const_lv4_F when (icmp_ln895_44_fu_3241_p2(0) = '1') else 
        trunc_ln214_8_fu_3247_p4;
    select_ln192_4_fu_2881_p3 <= 
        ap_const_lv4_F when (icmp_ln895_32_fu_2865_p2(0) = '1') else 
        trunc_ln214_s_fu_2871_p4;
    select_ln192_5_fu_2943_p3 <= 
        ap_const_lv4_F when (icmp_ln895_34_fu_2927_p2(0) = '1') else 
        trunc_ln214_3_fu_2933_p4;
    select_ln192_6_fu_3005_p3 <= 
        ap_const_lv4_F when (icmp_ln895_36_fu_2989_p2(0) = '1') else 
        trunc_ln214_4_fu_2995_p4;
    select_ln192_7_fu_3068_p3 <= 
        ap_const_lv4_F when (icmp_ln895_38_fu_3052_p2(0) = '1') else 
        trunc_ln214_5_fu_3058_p4;
    select_ln192_8_fu_3131_p3 <= 
        ap_const_lv4_F when (icmp_ln895_40_fu_3115_p2(0) = '1') else 
        trunc_ln214_6_fu_3121_p4;
    select_ln192_9_fu_3194_p3 <= 
        ap_const_lv4_F when (icmp_ln895_42_fu_3178_p2(0) = '1') else 
        trunc_ln214_7_fu_3184_p4;
    select_ln192_fu_2818_p3 <= 
        ap_const_lv4_F when (icmp_ln895_30_fu_2802_p2(0) = '1') else 
        trunc_ln_fu_2808_p4;
    select_ln393_18_fu_1178_p3 <= 
        ap_const_lv6_0 when (icmp_ln393_reg_3499(0) = '1') else 
        sub_ln404_reg_3445;
    select_ln393_19_fu_1367_p3 <= 
        ap_const_lv12_4F4 when (icmp_ln393_reg_3499_pp0_iter1_reg(0) = '1') else 
        conv_1_inc_new_V_0_l_reg_3578;
    select_ln393_20_fu_1373_p3 <= 
        ap_const_lv23_97C2 when (icmp_ln393_reg_3499_pp0_iter1_reg(0) = '1') else 
        conv_1_bias_new_V_0_1_reg_3583;
    select_ln393_21_fu_1379_p3 <= 
        ap_const_lv23_D7C2 when (icmp_ln393_reg_3499_pp0_iter1_reg(0) = '1') else 
        add_ln1353_reg_3618;
    select_ln393_22_fu_1385_p3 <= 
        ap_const_lv13_492 when (icmp_ln393_reg_3499_pp0_iter1_reg(0) = '1') else 
        conv_1_inc_new_V_1_l_reg_3588;
    select_ln393_23_fu_1391_p3 <= 
        ap_const_lv23_784317 when (icmp_ln393_reg_3499_pp0_iter1_reg(0) = '1') else 
        conv_1_bias_new_V_1_1_reg_3593;
    select_ln393_24_fu_1397_p3 <= 
        ap_const_lv23_788317 when (icmp_ln393_reg_3499_pp0_iter1_reg(0) = '1') else 
        add_ln1353_12_reg_3623;
    select_ln393_25_fu_1403_p3 <= 
        ap_const_lv11_403 when (icmp_ln393_reg_3499_pp0_iter1_reg(0) = '1') else 
        conv_1_inc_new_V_2_l_reg_3598;
    select_ln393_26_fu_1409_p3 <= 
        ap_const_lv21_1B3009 when (icmp_ln393_reg_3499_pp0_iter1_reg(0) = '1') else 
        conv_1_bias_new_V_2_1_reg_3603;
    select_ln393_27_fu_1415_p3 <= 
        ap_const_lv21_1B7009 when (icmp_ln393_reg_3499_pp0_iter1_reg(0) = '1') else 
        add_ln1353_13_reg_3628;
    select_ln393_28_fu_1421_p3 <= 
        ap_const_lv12_31D when (icmp_ln393_reg_3499_pp0_iter1_reg(0) = '1') else 
        conv_1_inc_new_V_3_l_reg_3608;
    select_ln393_29_fu_1427_p3 <= 
        ap_const_lv23_C292B when (icmp_ln393_reg_3499_pp0_iter1_reg(0) = '1') else 
        conv_1_bias_new_V_3_1_reg_3613;
    select_ln393_30_fu_1433_p3 <= 
        ap_const_lv23_C692B when (icmp_ln393_reg_3499_pp0_iter1_reg(0) = '1') else 
        add_ln1353_14_reg_3633;
    select_ln393_31_fu_1206_p3 <= 
        ap_const_lv8_0 when (or_ln393_reg_3553(0) = '1') else 
        w_0_i_reg_789;
    select_ln393_32_fu_1233_p3 <= 
        sub_ln404_2_fu_1227_p2 when (and_ln393_6_reg_3529(0) = '1') else 
        select_ln393_18_fu_1178_p3;
    select_ln393_33_fu_1439_p3 <= 
        conv_1_inc_new_V_0_q1 when (and_ln393_6_reg_3529_pp0_iter1_reg(0) = '1') else 
        select_ln393_19_fu_1367_p3;
    select_ln393_34_fu_1446_p3 <= 
        conv_1_bias_new_V_0_q1 when (and_ln393_6_reg_3529_pp0_iter1_reg(0) = '1') else 
        select_ln393_20_fu_1373_p3;
    select_ln393_35_fu_1459_p3 <= 
        add_ln1353_15_fu_1453_p2 when (and_ln393_6_reg_3529_pp0_iter1_reg(0) = '1') else 
        select_ln393_21_fu_1379_p3;
    select_ln393_36_fu_1466_p3 <= 
        conv_1_inc_new_V_1_q1 when (and_ln393_6_reg_3529_pp0_iter1_reg(0) = '1') else 
        select_ln393_22_fu_1385_p3;
    select_ln393_37_fu_1473_p3 <= 
        conv_1_bias_new_V_1_q1 when (and_ln393_6_reg_3529_pp0_iter1_reg(0) = '1') else 
        select_ln393_23_fu_1391_p3;
    select_ln393_38_fu_1486_p3 <= 
        add_ln1353_16_fu_1480_p2 when (and_ln393_6_reg_3529_pp0_iter1_reg(0) = '1') else 
        select_ln393_24_fu_1397_p3;
    select_ln393_39_fu_1493_p3 <= 
        conv_1_inc_new_V_2_q1 when (and_ln393_6_reg_3529_pp0_iter1_reg(0) = '1') else 
        select_ln393_25_fu_1403_p3;
    select_ln393_40_fu_1500_p3 <= 
        conv_1_bias_new_V_2_q1 when (and_ln393_6_reg_3529_pp0_iter1_reg(0) = '1') else 
        select_ln393_26_fu_1409_p3;
    select_ln393_41_fu_1513_p3 <= 
        add_ln1353_17_fu_1507_p2 when (and_ln393_6_reg_3529_pp0_iter1_reg(0) = '1') else 
        select_ln393_27_fu_1415_p3;
    select_ln393_42_fu_1520_p3 <= 
        conv_1_inc_new_V_3_q1 when (and_ln393_6_reg_3529_pp0_iter1_reg(0) = '1') else 
        select_ln393_28_fu_1421_p3;
    select_ln393_43_fu_1527_p3 <= 
        conv_1_bias_new_V_3_q1 when (and_ln393_6_reg_3529_pp0_iter1_reg(0) = '1') else 
        select_ln393_29_fu_1427_p3;
    select_ln393_44_fu_1540_p3 <= 
        add_ln1353_18_fu_1534_p2 when (and_ln393_6_reg_3529_pp0_iter1_reg(0) = '1') else 
        select_ln393_30_fu_1433_p3;
    select_ln393_45_fu_1118_p3 <= 
        peIdx_fu_1102_p2 when (and_ln393_6_fu_1096_p2(0) = '1') else 
        select_ln393_fu_1076_p3;
    select_ln393_46_fu_1146_p3 <= 
        ap_const_lv12_1 when (icmp_ln393_fu_1070_p2(0) = '1') else 
        add_ln393_2_fu_1140_p2;
    select_ln393_fu_1076_p3 <= 
        ap_const_lv4_0 when (icmp_ln393_fu_1070_p2(0) = '1') else 
        peIdx_0_i_reg_767;
    select_ln394_2_fu_1132_p3 <= 
        ap_const_lv9_1 when (or_ln393_fu_1108_p2(0) = '1') else 
        add_ln394_2_fu_1126_p2;
    select_ln394_fu_1311_p3 <= 
        w_fu_1273_p2 when (and_ln393_8_fu_1267_p2(0) = '1') else 
        select_ln393_31_fu_1206_p3;
    select_ln398_11_fu_2473_p3 <= 
        firPartialRes1_1_V_2_fu_326 when (o_clear_fu_2394_p2(0) = '1') else 
        outPartialArr1_1_V_1_fu_358;
    select_ln398_12_fu_2481_p3 <= 
        firPartialRes0_V_1_3_fu_310 when (o_clear_fu_2394_p2(0) = '1') else 
        outPartialArr0_1_V_2_fu_342;
    select_ln398_13_fu_2489_p3 <= 
        firPartialRes0_1_V_reg_4449 when (o_clear_fu_2394_p2(0) = '1') else 
        firPartialRes0_1_V_2_fu_2463_p2;
    select_ln398_15_fu_2531_p3 <= 
        firPartialRes1_2_V_1_fu_330 when (o_clear_fu_2394_p2(0) = '1') else 
        outPartialArr1_2_V_1_fu_362;
    select_ln398_16_fu_2539_p3 <= 
        firPartialRes0_V_2_3_fu_314 when (o_clear_fu_2394_p2(0) = '1') else 
        outPartialArr0_2_V_1_fu_346;
    select_ln398_17_fu_2547_p3 <= 
        firPartialRes0_2_V_reg_4467 when (o_clear_fu_2394_p2(0) = '1') else 
        firPartialRes0_2_V_1_fu_2521_p2;
    select_ln398_19_fu_2589_p3 <= 
        firPartialRes1_3_V_1_fu_334 when (o_clear_fu_2394_p2(0) = '1') else 
        outPartialArr1_3_V_1_fu_366;
    select_ln398_20_fu_2597_p3 <= 
        firPartialRes0_V_3_3_fu_318 when (o_clear_fu_2394_p2(0) = '1') else 
        outPartialArr0_3_V_1_fu_350;
    select_ln398_21_fu_2605_p3 <= 
        firPartialRes0_3_V_reg_4485 when (o_clear_fu_2394_p2(0) = '1') else 
        firPartialRes0_3_V_1_fu_2579_p2;
    select_ln398_8_fu_2423_p3 <= 
        firPartialRes0_V_0_3_fu_306 when (o_clear_fu_2394_p2(0) = '1') else 
        outPartialArr0_0_V_2_fu_338;
    select_ln398_9_fu_2431_p3 <= 
        firPartialRes0_0_V_reg_4431 when (o_clear_fu_2394_p2(0) = '1') else 
        firPartialRes0_0_V_2_fu_2405_p2;
    select_ln398_fu_2415_p3 <= 
        firPartialRes1_0_V_2_fu_322 when (o_clear_fu_2394_p2(0) = '1') else 
        outPartialArr1_0_V_1_fu_354;
    select_ln399_2_fu_1303_p3 <= 
        icmp_ln399_3_fu_1297_p2 when (and_ln393_8_fu_1267_p2(0) = '1') else 
        and_ln393_7_fu_1261_p2;
    select_ln399_fu_1289_p3 <= 
        ap_const_lv2_0 when (or_ln399_2_fu_1284_p2(0) = '1') else 
        infoldIdx_0_i_reg_800;
        sext_ln1352_10_fu_3210_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_42_reg_4574),29));

        sext_ln1352_4_fu_2834_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_24_reg_4542),29));

        sext_ln1352_5_fu_2897_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_27_reg_4547),30));

        sext_ln1352_6_fu_2959_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_30_reg_4553),30));

        sext_ln1352_7_fu_3021_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_33_reg_4559),28));

        sext_ln1352_8_fu_3084_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_36_reg_4564),28));

        sext_ln1352_9_fu_3147_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_39_reg_4569),29));

        sext_ln1352_fu_2771_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_reg_4537),29));

        sext_ln393_10_fu_2768_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln393_44_reg_3812_pp0_iter8_reg),29));

        sext_ln393_4_fu_2750_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln393_35_reg_3767_pp0_iter8_reg),29));

        sext_ln393_5_fu_2753_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln393_37_reg_3777_pp0_iter8_reg),30));

        sext_ln393_6_fu_2756_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln393_38_reg_3782_pp0_iter8_reg),29));

        sext_ln393_7_fu_2759_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln393_40_reg_3792_pp0_iter8_reg),28));

        sext_ln393_8_fu_2762_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln393_41_reg_3797_pp0_iter8_reg),28));

        sext_ln393_9_fu_2765_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln393_43_reg_3807_pp0_iter8_reg),29));

        sext_ln393_fu_2747_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln393_34_reg_3762_pp0_iter8_reg),29));

        sext_ln404_fu_1341_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln404_fu_1335_p2),32));

    shl_ln392_2_fu_1000_p2 <= std_logic_vector(shift_left(unsigned(reps_dout),to_integer(unsigned('0' & ap_const_lv32_4(31-1 downto 0)))));
    shl_ln392_fu_994_p2 <= std_logic_vector(shift_left(unsigned(reps_dout),to_integer(unsigned('0' & ap_const_lv32_6(31-1 downto 0)))));
    shl_ln404_mid1_fu_1216_p3 <= (trunc_ln404_2_reg_3558 & ap_const_lv2_0);
    shl_ln6_fu_1029_p3 <= (trunc_ln404_fu_1025_p1 & ap_const_lv2_0);
    sub_ln404_2_fu_1227_p2 <= std_logic_vector(unsigned(zext_ln404_5_fu_1223_p1) - unsigned(zext_ln393_1_fu_1213_p1));
    sub_ln404_fu_1041_p2 <= std_logic_vector(unsigned(zext_ln404_fu_1037_p1) - unsigned(zext_ln393_fu_1021_p1));
    tmp_47_fu_2855_p4 <= ret_V_26_fu_2849_p2(28 downto 19);
    tmp_48_fu_2917_p4 <= ret_V_29_fu_2912_p2(28 downto 19);
    tmp_49_fu_2979_p4 <= ret_V_32_fu_2974_p2(28 downto 19);
    tmp_50_fu_3042_p4 <= ret_V_35_fu_3036_p2(27 downto 19);
    tmp_51_fu_3105_p4 <= ret_V_38_fu_3099_p2(27 downto 19);
    tmp_52_fu_3168_p4 <= ret_V_41_fu_3162_p2(28 downto 19);
    tmp_53_fu_3231_p4 <= ret_V_44_fu_3225_p2(28 downto 19);
    tmp_fu_2792_p4 <= ret_V_23_fu_2786_p2(28 downto 19);
    trunc_ln214_3_fu_2933_p4 <= ret_V_29_fu_2912_p2(18 downto 15);
    trunc_ln214_4_fu_2995_p4 <= ret_V_32_fu_2974_p2(18 downto 15);
    trunc_ln214_5_fu_3058_p4 <= ret_V_35_fu_3036_p2(18 downto 15);
    trunc_ln214_6_fu_3121_p4 <= ret_V_38_fu_3099_p2(18 downto 15);
    trunc_ln214_7_fu_3184_p4 <= ret_V_41_fu_3162_p2(18 downto 15);
    trunc_ln214_8_fu_3247_p4 <= ret_V_44_fu_3225_p2(18 downto 15);
    trunc_ln214_s_fu_2871_p4 <= ret_V_26_fu_2849_p2(18 downto 15);
    trunc_ln404_2_fu_1114_p1 <= peIdx_fu_1102_p2(3 - 1 downto 0);
    trunc_ln404_fu_1025_p1 <= peIdx_0_i_reg_767(3 - 1 downto 0);
    trunc_ln647_fu_1547_p1 <= vec_V_V_dout(4 - 1 downto 0);
    trunc_ln_fu_2808_p4 <= ret_V_23_fu_2786_p2(18 downto 15);

    vec_V_V_blk_n_assign_proc : process(vec_V_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, icmp_ln392_reg_3490_pp0_iter1_reg)
    begin
        if (((icmp_ln392_reg_3490_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            vec_V_V_blk_n <= vec_V_V_empty_n;
        else 
            vec_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    vec_V_V_read_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln392_reg_3490_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln392_reg_3490_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            vec_V_V_read <= ap_const_logic_1;
        else 
            vec_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    w_fu_1273_p2 <= std_logic_vector(unsigned(ap_const_lv8_2) + unsigned(select_ln393_31_fu_1206_p3));
    xor_ln393_2_fu_1251_p2 <= (icmp_ln394_reg_3524 xor ap_const_lv1_1);
    xor_ln393_fu_1084_p2 <= (icmp_ln393_fu_1070_p2 xor ap_const_lv1_1);
    zext_ln393_1_fu_1213_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(peIdx_reg_3547),6));
    zext_ln393_2_fu_2711_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln393_33_reg_3757_pp0_iter7_reg),28));
    zext_ln393_3_fu_2714_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln393_36_reg_3772_pp0_iter7_reg),29));
    zext_ln393_4_fu_2717_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln393_39_reg_3787_pp0_iter7_reg),27));
    zext_ln393_5_fu_2720_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln393_42_reg_3802_pp0_iter7_reg),28));
    zext_ln393_fu_1021_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(peIdx_0_i_reg_767),6));
    zext_ln395_fu_1319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln399_fu_1289_p3),6));
    zext_ln404_5_fu_1223_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln404_mid1_fu_1216_p3),6));
    zext_ln404_6_fu_1345_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln404_fu_1341_p1),64));
    zext_ln404_fu_1037_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln6_fu_1029_p3),6));
    zext_ln458_2_fu_1240_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(peIdx_reg_3547),64));
    zext_ln458_fu_1047_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(peIdx_0_i_reg_767),64));
end behav;
